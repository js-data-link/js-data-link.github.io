(function(){"use strict";var e={5878:function(e,t,a){var n=a(144),r=a(629),s=a(9669),l=a.n(s);function c(e,t){return l().request({url:`/jshyl-data-web/data/${t.path}/${e}.json`,method:"get"}).then((e=>e.data))}const o=[{name:"v5.63K7",path:"v563K7"}],i=o[0];function u(e){return o.find((t=>t.name===e))}function f(e){return O.state.HeroSource[e]}function d(e){const t=e.match(/\[(\d+)\]/)[1];return O.state.HeroSource[t]}function p(e){return O.state.SkillSource[e]}function g(e){const t=e.match(/\[(\d+)\]/)[1];return O.state.SkillSource[t]}function h(e){return O.state.ItemSource[e]}function m(e){const t=e.match(/\[(\d+)\]/)[1];return O.state.ItemSource[t]}function $(e,t,a){const n=`${e}-${t}-${a}`;return O.state.SuitIndex[n]}function b(e){return O.state.TitleIndex[e]}function L(e){return O.state.SkillConfigIndex[e]}function _(){Object.entries(O.state.SkillExtConfigSource).forEach((([e,t])=>{const a=L(e)||[],n=t["attrs"];n.forEach((t=>{const n=a.find((e=>e["skillType"]===t["type"]));if(n)n["ext"]=t;else{const a=p(e),n={name:a["name"],skillId:e,skillType:t["type"],ext:t};O.state.SkillConfigSource.push(n),O.state.SkillConfigIndex[e].push(n)}}))}))}function v(e){return O.state.Const.friend[e]}function k(e){const t={};return Object.values(e).forEach((e=>{t[e.suitKey]=e})),t}function A(e){const t={};return e.forEach((e=>{void 0==t[e["skillId"]]&&(t[e["skillId"]]=[]),t[e["skillId"]].push(e)})),t}function y(e){const t={};return e.forEach((e=>{t[e.skillId]=e})),t}n.ZP.use(r.ZP);var O=new r.ZP.Store({state:{CurVersion:i,LoadingCount:0,HeroSource:{},ItemSource:{},SkillSource:{},SuitSource:{},SkillConfigSource:[],SkillExtConfigSource:{},TitleConfigSource:[],EventSource:{},Const:{},SuitIndex:{},SkillConfigIndex:{},TitleIndex:{}},getters:{isReady(e){return 0===e.LoadingCount}},mutations:{resetLoading(e){e.LoadingCount=9},loadingOne(e){e.LoadingCount--},setVersion(e,t){e.CurVersion=u(t)},setHeroSource(e,t){e.HeroSource=t},setItemSource(e,t){e.ItemSource=t},setSkillSource(e,t){e.SkillSource=t},setSuitSource(e,t){e.SuitSource=t,e.SuitIndex=k(t)},setSkillConfigSource(e,t){e.SkillConfigSource=t,e.SkillConfigIndex=A(t)},setTitleConfigSource(e,t){e.TitleConfigSource=t,e.TitleIndex=y(t)},setSkillExtConfigSource(e,t){e.SkillExtConfigSource=t},setEventSource(e,t){e.EventSource=t},setConst(e,t){e.Const=t},bindSkillExt(){_()}},actions:{initStore({commit:e,state:t}){return new Promise((()=>{e("resetLoading")})).then(Promise.all([c("hero",t.CurVersion).then((t=>e("setHeroSource",t))).then((()=>e("loadingOne"))),c("item",t.CurVersion).then((t=>e("setItemSource",t))).then((()=>e("loadingOne"))),c("skill",t.CurVersion).then((t=>e("setSkillSource",t))).then((()=>e("loadingOne"))),c("suit",t.CurVersion).then((t=>e("setSuitSource",t))).then((()=>e("loadingOne"))),c("skill_config",t.CurVersion).then((t=>e("setSkillConfigSource",t))).then((()=>e("loadingOne"))),c("skill_ext",t.CurVersion).then((t=>e("setSkillExtConfigSource",t))).then((()=>e("loadingOne"))),c("title_config",t.CurVersion).then((t=>e("setTitleConfigSource",t))).then((()=>e("loadingOne"))),c("event",t.CurVersion).then((t=>e("setEventSource",t))).then((()=>e("loadingOne"))),c("const",t.CurVersion).then((t=>e("setConst",t))).then((()=>e("loadingOne")))]).then((()=>{e("bindSkillExt")})))}}}),I=a(1705);n.ZP.use(I.Z);var F=new I.Z({}),E=a(8345),x=function(){var e=this,t=e._self._c;return t("div",{staticClass:"home"},[t("HelloWorld")],1)},C=[],D=a(266),S=a(2118),T=a(1713),V=function(){var e=this,t=e._self._c;return t(S.Z,[t(T.Z,{staticClass:"text-center"},[t(D.Z,{staticClass:"mb-4"},[t("h1",{staticClass:"display-2 font-weight-bold mb-3"},[e._v(" 金书红颜录数据查看器 ")])]),t(D.Z,{staticClass:"mb-5",attrs:{cols:"12"}},[t("h2",{staticClass:"headline font-weight-bold mb-3"},[e._v(" 数据查看 ")]),t(T.Z,{attrs:{justify:"center"}},e._l(e.dataViews,(function(a,n){return t("router-link",{key:n,staticClass:"subheading mx-3",attrs:{to:a.to}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],1)},P=[],B={name:"HelloWorld",data:()=>({dataViews:[{text:"人物",to:"/hero"},{text:"物品",to:"/item"},{text:"套装",to:"/suit"},{text:"武功",to:"/skill"},{text:"武功数值",to:"/skill-config"}]})},w=B,M=a(1001),N=(0,M.Z)(w,V,P,!1,null,null,null),q=N.exports,H={name:"HomeView",components:{HelloWorld:q}},j=H,G=(0,M.Z)(j,x,C,!1,null,null,null),K=G.exports,Z=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},U=[],R=a(626),Q=a(3011),Y=function(){var e=this,t=e._self._c;return t(S.Z,{staticStyle:{width:"95%","min-width":"95%",overflow:"auto"},attrs:{fluid:"","grid-list-md":""}},[t(Q.Z,{attrs:{"center-active":""},on:{change:e.tabChange}},e._l(e.tabs,(function(a){return t(R.Z,{key:a.value},[e._v(" "+e._s(a.title)+" ")])})),1),t("DataPage",{attrs:{"headers-source":e.headersSource,"items-source":e.itemsSource,mapper:e.mapper,"header-labels":e.headerLabels,"header-filter":e.headerFilter,"data-filter":e.dataFilter,"extra-filters":e.extraFilters}})],1)},X=[],W=a(2685),z=a(9582),J=a(4886),ee=a(4127),te=a(8242),ae=a(3863),ne=a(255),re=a(2348),se=a(400),le=a(1214),ce=a(7423),oe=a(7808),ie=a(6072),ue=function(){var e=this,t=e._self._c;return t(S.Z,{staticStyle:{width:"fit-content","min-width":"100%"}},[t(le.Z,{attrs:{flat:"",accordion:""},model:{value:e.option,callback:function(t){e.option=t},expression:"option"}},[t(ne.Z,[t(se.Z,[e._v(" 选项 ")]),t(re.Z,[e._l(e.extraFilters,(function(a){return t("div",{key:a.label},[t(z.Z,{attrs:{flat:""}},[t(J.EB,{staticClass:"text-subtitle-2"},[e._v(" "+e._s(a.label)+" ")]),t(J.ZB,[t(te.Z,{attrs:{column:"",mandatory:"","active-class":"primary--text text--accent-4"},model:{value:a.selected,callback:function(t){e.$set(a,"selected",t)},expression:"filter.selected"}},e._l(a.value,(function(a){return t(ee.Z,{key:a,attrs:{outlined:"",value:a}},[e._v(" "+e._s(a)+" ")])})),1)],1)],1)],1)})),t(z.Z,{attrs:{flat:""}},[e.selectedLabels.length>0?t(J.EB,{staticClass:"text-subtitle-2"},[e._v(" 表头筛选 ")]):e._e(),t(J.ZB,[t(te.Z,{attrs:{column:"",multiple:"","active-class":"primary--text text--accent-4"},model:{value:e.selectedLabels,callback:function(t){e.selectedLabels=t},expression:"selectedLabels"}},e._l(e.headerLabels,(function(a){return t(ee.Z,{key:a.value,attrs:{outlined:""}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],2)],1)],1),t(oe.Z,{staticClass:"mb-2",staticStyle:{"max-width":"100%"},attrs:{"append-icon":"mdi-magnify",label:"搜索","single-line":"","hide-details":"",clearable:""},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}}),t("div",{staticStyle:{"max-width":"100%",overflow:"scroll"}},[t("div",{staticStyle:{width:"max-content"}},[t(ae.Z,{staticClass:"elevation-1 table",attrs:{dense:"","multi-sort":"","show-group-by":"","footer-props":{"items-per-page-options":[10,20,50,100,-1]},"calculate-widths":!0,headers:e.headers,items:e.items,"items-per-page":50,search:e.search},scopedSlots:e._u([e._l(e.extCol,(function(a){return{key:`item.${a}`,fn:function({item:n}){return[n[`${a}`]?t("a",{key:a,on:{click:function(t){return e.extClick(t,n[`${a}_ext`])}}},[e._v(e._s(n[`${a}`]))]):e._e()]}}}))],null,!0)})],1)]),t(W.Z,{attrs:{inset:""},model:{value:e.sheet,callback:function(t){e.sheet=t},expression:"sheet"}},[t(ce.Z,{staticClass:"text-center"},[t("div",{staticStyle:{overflow:"scroll",height:"fit-content"}},[t(ie.Z,{attrs:{rows:"12",readonly:"",filled:"",outlined:"","hide-details":""},model:{value:e.sheetContext,callback:function(t){e.sheetContext=t},expression:"sheetContext"}})],1)])],1)],1)},fe=[];function de(e){return t=>{let a=!0;return e&&e.forEach((e=>{e.selected&&(a=a&&e.filterFunc(e.selected,t))})),a}}function pe(e){let t=[];return e.forEach(((e,a)=>{e.selected&&t.push(a)})),t}var ge={name:"DataPage",data(){return{search:"",option:0,sheet:!1,sheetContext:"",selectedLabels:pe(this.headerLabels)}},computed:{headers(){return this.headersSource.filter(this.headerFilter).filter((e=>!e.label||this.selectedLabels.includes(this.headerLabels.findIndex((t=>t.value==e.label)))))},items(){return this.$store.getters["isReady"]?this.itemsSource.map(this.mapper).filter(this.dataFilter).filter(de(this.extraFilters)):[]},searchableCol(){return this.headers.filter((e=>e.searchable)).map((e=>e.value))},extCol(){return this.headers.filter((e=>e.ext)).map((e=>e.value))}},methods:{chipClick(e){this.search=e.target.innerText},extClick(e,t){this.sheetContext=t(),this.sheet=!0}},props:{headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function,headerFilter:{Function:Function,default:()=>()=>!0},dataFilter:{Function:Function,default:()=>()=>!0},extraFilters:Array}},he=ge,me=(0,M.Z)(he,ue,fe,!1,null,"b39e3f0a",null),$e=me.exports,be={name:"TabDataPage",data(){return{selectedGroup:this.tabs.length>0?this.tabs[0].value:"",headerFilter:e=>"ALL"==e.group||e.group.split("|").includes(this.selectedGroup),dataFilter:e=>e.tabGroup.split("|").includes(this.selectedGroup)}},computed:{selectedTab(){return this.tabs.find((e=>e.value==this.selectedGroup))},searchableCol(){return this.headers.filter((e=>e.searchable)).map((e=>e.value))},extraFilters(){return this.selectedTab.dataFilters}},methods:{tabChange(e){const t=this.tabs[e];this.selectedGroup=t.value,this.$emit("tabChange",t.value)},chipClick(e){this.search=e.target.innerText}},props:{tabs:Array,headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function},components:{DataPage:$e}},Le=be,_e=(0,M.Z)(Le,Y,X,!1,null,"e03894c8",null),ve=_e.exports;function ke(e,t,a,n,r){return{group:e,label:t,text:a,value:n,groupable:!1,...r}}function Ae(e,t){return t.has(e)?t.get(e):e}function ye(e){return e>0?"是":""}const Oe=new Map([[0,"男"],[1,"女"],[2,"妖"],[3,"非男"],[-1,""]]);function Ie(e){return Ae(e,Oe)}const Fe=new Map([[1,"慕容世家"],[2,"大理段氏"],[3,"黄金家族"],[4,"天波杨府"],[6,"爱新觉罗"],[7,"凤阳朱氏"],[0,""],[-1,""]]);function Ee(e){return Ae(e,Fe)}const xe=new Map([[1,"峨眉派"],[2,"武当派"],[3,"逍遥派"],[4,"丐帮"],[5,"桃花岛"],[6,"日月教"],[7,"华山派"],[8,"明教"],[9,"古墓派"],[0,""],[-1,""]]);function Ce(e){return Ae(e,xe)}const De=new Map([[-1,""],[0,"武器"],[1,"防具"],[2,"骑宠"]]);function Se(e){return Ae(e,De)}const Te=new Map([[0,"阴"],[1,"阳"],[2,"调和"]]);function Ve(e){return Ae(e,Te)}function Pe(e){return-1==e||2==e?"":Ae(e,Te)}function Be(e){return 2==e?"调和":0==e||-1==e?"":e}function we(e){return 0==e?"":1==e?"左右互搏":2==e?"双手":e}const Me=new Map([[1,"内伤"],[2,"虚弱"],[3,"盲目"],[4,"外伤"],[5,"剧毒"],[6,"厌食"],[7,"定身"],[8,"点穴"],[9,"封气"],[10,"冰封"],[11,"封招"],[100,"随机"]]);function Ne(e){return 0==e?"":100==e?"解除全部":e<0?"造成"+Ae(-e,Me):"解除"+Ae(e,Me)}const qe=new Map([[0,"剧情"],[1,"装备"],[2,"秘籍"],[3,"药品"],[4,"暗器"]]);function He(e){return Ae(e,qe)}const je=new Map([[0,"暗毒"],[1,"拳掌"],[2,"御剑"],[3,"兵器"],[4,"指腿"],[5,"内功"],[6,"轻功"],[7,"天赋"],[8,"特技"]]);function Ge(e){return Ae(e,je)}const Ke=new Map([[0,""],[1,"1级"],[2,"2级"],[3,"3级"],[4,"4级"],[5,"5级"],[6,"特殊"],[7,"防功"]]);function Ze(e){return Ae(e,Ke)}const Ue=new Map([[0,"伤害"],[1,"杀伤内力"],[2,"治疗"],[3,"恢复内力"]]);function Re(e){return Ae(e,Ue)}const Qe=new Map([[0,"点"],[1,"线"],[2,"十"],[3,"面"],[4,"菱"],[5,"全"],[6,"自"],[7,"田"],[8,"井"],[9,"米"],[10,"角"],[11,"楔"],[12,"卐"]]);function Ye(e){return Ae(e,Qe)}function Xe(e,t){const a=t(e);return a?`[${a["id"]}]${a["name"]}`:e}function We(e){return-1==e?"":Xe(e,f)}function ze(e){return-1==e||0==e?"":Xe(e,p)}function Je(e){return-1==e||0==e?"":Xe(e,h)}const et=[{title:"武功秘籍",value:"BOOK",dataFilters:[{type:"select",label:"秘籍种类",value:["拳掌","御剑","兵器","指腿","暗毒","内功","轻功","制药","特殊","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;if(0!=t.prd_mtl)return"制药"==e;if(t.targetSkill){const a=g(t.targetSkill),n=Ge(a.type);return n==e}return"特殊"==e}}]},{title:"神兵宝甲",value:"EQUIP",dataFilters:[{type:"select",label:"装备位置",value:["武器","防具","骑宠","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.position==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"灵丹妙药",value:"MEDIC"},{title:"伤人暗器",value:"THROWN"},{title:"剧情物品",value:"STORY"}],tt={targetSkill:ze,req_hero1:We,req_hero2:We,prd_mtl:Je,prd_item1:Je,prd_item2:Je,prd_item3:Je,prd_item4:Je,useSkill:ze,type:He,req_gender:Ie,req_family:Ee,req_party:Ce,req_mpKind:Pe,attr_mpKind:Be,position:Se,debuff_type:Ne,flag_newbie:ye,flag_forge:ye},at={0:"STORY",1:"EQUIP",2:"BOOK",3:"MEDIC",4:"THROWN"},nt=[ke("ALL","","序号","id",{align:"start"}),ke("ALL","","名称","name"),ke("EQUIP","","装备位置","position"),ke("BOOK","","练出武功","targetSkill"),ke("BOOK","","级别","level"),ke("ALL","desc","物品说明","desc"),ke("BOOK","req","需内力性质","req_mpKind",{searchable:!0}),ke("BOOK|EQUIP","req","需性别","req_gender",{searchable:!0}),ke("BOOK|EQUIP","req","需血族","req_family",{searchable:!0}),ke("BOOK|EQUIP","req","需门派","req_party",{searchable:!0}),ke("BOOK|EQUIP","req","需特殊人物1","req_hero1",{searchable:!0}),ke("BOOK|EQUIP","req","需特殊人物2","req_hero2",{searchable:!0}),ke("BOOK","req","需资质","req_itl"),ke("BOOK|EQUIP","req","需拳掌","req_fs"),ke("BOOK|EQUIP","req","需御剑","req_ss"),ke("BOOK|EQUIP","req","需兵器","req_ws"),ke("BOOK|EQUIP","req","需指腿","req_rs"),ke("BOOK|EQUIP|THROWN","req","需暗毒","req_ts"),ke("BOOK|EQUIP|MEDIC","req","需内力","req_mp"),ke("BOOK|EQUIP","req","需攻击","req_atk"),ke("BOOK","req","需轻功","req_agi"),ke("BOOK","req","需医疗","req_heal"),ke("BOOK","req","需用毒","req_poiMk"),ke("BOOK|MEDIC|THROWN","attr","加生命","attr_hp"),ke("BOOK|MEDIC","attr","加血量","attr_hpMax"),ke("BOOK|MEDIC","attr","加内力","attr_mp"),ke("BOOK|MEDIC","attr","加功力","attr_mpMax"),ke("MEDIC","attr","加体力","attr_vgr"),ke("MEDIC|THROWN","attr","中毒/解毒","attr_poi"),ke("MEDIC","attr","加气格","attr_eng"),ke("MEDIC","attr","受伤度","attr_inj"),ke("BOOK|EQUIP","attr","总属性","attr_all"),ke("BOOK|EQUIP|MEDIC","attr","加攻击","attr_atk"),ke("BOOK|EQUIP|MEDIC","attr","加防御","attr_def"),ke("BOOK|EQUIP|MEDIC","attr","加轻功","attr_agi"),ke("BOOK|EQUIP|MEDIC","attr","加拳掌","attr_fs"),ke("BOOK|EQUIP|MEDIC","attr","加御剑","attr_ss"),ke("BOOK|EQUIP|MEDIC","attr","加兵器","attr_ws"),ke("BOOK|EQUIP|MEDIC","attr","加指腿","attr_rs"),ke("BOOK|EQUIP|MEDIC","attr","加暗毒","attr_ts"),ke("BOOK","attr","加医疗","attr_heal"),ke("BOOK","attr","加用毒","attr_poiMk"),ke("BOOK|EQUIP","attr","加解毒","attr_poiRd"),ke("BOOK|EQUIP|MEDIC","attr","加抗毒","attr_poiRs"),ke("BOOK|EQUIP","attr","加带毒","attr_poiAt"),ke("MEDIC","attr","加资质","attr_itl"),ke("MEDIC|BOOK","attr","加武常","attr_klg"),ke("BOOK","attr","改变内力性质","attr_mpKind"),ke("BOOK","attr","改变攻击次数","attr_atkCnt"),ke("EQUIP","spec","使用武功","useSkill"),ke("EQUIP|MEDIC|THROWN","spec","附加状态","debuff_type"),ke("EQUIP|MEDIC|THROWN","spec","附加状态几率","debuff_rate"),ke("EQUIP|MEDIC|THROWN","spec","附加状态回合","debuff_turn"),ke("BOOK|EQUIP|MEDIC|THROWN","spec","出售价格","price"),ke("BOOK","spec","需材料","prd_mtl"),ke("BOOK","spec","炼出物品1","prd_item1"),ke("BOOK","spec","炼出物品2","prd_item2"),ke("BOOK","spec","炼出物品3","prd_item3"),ke("BOOK","spec","炼出物品4","prd_item4"),ke("BOOK","spec","需材料数量1","prd_cnt1"),ke("BOOK","spec","需材料数量2","prd_cnt2"),ke("BOOK","spec","需材料数量3","prd_cnt3"),ke("BOOK","spec","需材料数量4","prd_cnt4"),ke("BOOK","spec","新手光环","flag_newbie"),ke("EQUIP","spec","限制打造","flag_forge")],rt=[{text:"说明",value:"desc"},{text:"需求",value:"req",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function st(e){if(!e)return e;const t={};if(t["tabGroup"]=at[e.type],e.targetSkill>0){const a=p(e.targetSkill);if(a)switch(a.type){case 0:t["level"]=e.attr_ts;break;case 1:t["level"]=e.attr_fs;break;case 2:t["level"]=e.attr_ss;break;case 3:t["level"]=e.attr_ws;break;case 4:t["level"]=e.attr_rs;break}}if(Object.entries(e).forEach((([e,a])=>{t[e]=tt[e]?tt[e](a):a})),t["attr_all"]=lt(e),e["req_hero1"]>=0){const a=f(e["req_hero1"]);a&&a.ke&&(t["ke"]=1)}return t}function lt(e){if(!e)return 0;const t=Number(e["attr_atk"])+Number(e["attr_def"])+Number(e["attr_agi"])+Number(e["attr_fs"])+Number(e["attr_ss"])+Number(e["attr_ws"])+Number(e["attr_rs"])+Number(e["attr_ts"]);return t>0?t:""}var ct={name:"ItemDataView",data(){return{selectType:"BOOK",tabs:et,headerLabels:rt,convertValue:st}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return nt},items(){return Object.values(this.$store.state.ItemSource)}},components:{TabDataPage:ve}},ot=ct,it=(0,M.Z)(ot,Z,U,!1,null,"72838e92",null),ut=it.exports,ft=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},dt=[];a(1703),a(2087);const pt={"标准裸攻":1200,"标准裸防":1200,"标准裸轻":1200,"标准场攻":1400,"标准场防":1750,"标准场轻":1300,"标准时序":6400,"标准裸主系":1200,"标准场主系":1600,"标准副系":400,"标准敌方场攻":1250,"标准敌方场防":1250,"标准敌方场轻":950,"标准敌方时序":5e3,"标准敌方武常":700,"标准武功威力":2e3,"标准暴击威力":1280,"标准突防威力":900,"标准破甲威力":600,"标准破军威力":450,"破防指数系数":.001,"减破防指数系数":5e-4,"破防分值系数":.003,"主系分值权重":.9,"时序分值系数":10,"轻功命中基准值":9e3,"命中伤害分值系数":4,"吸血分值基础":1.5,"吸血分值系数":5,"双击分值系数":1.08,"三击分值系数":2.52,"被攻击受伤度分值系数":3.6,"攻击受伤度分值系数":.9,"伤害反弹分值系数":2,"伤害转移分值系数":1,"伤害反震分值系数":5,"异常概率基础值":.2,"主动伤害权重":.8},gt=[[0,0,0],[5,.196269186,.385470032],[10,.361933895,.695426217],[15,.500343722,.941680016],[20,.614654319,1.134735539],[25,.707827406,1.283866457],[30,.78263076,1.397192897],[35,.841638223,1.481758346],[40,.8872297,1.543606558],[45,.921591157,1.587858451],[50,.946714622,1.618789015],[55,.964398185,1.63990421],[60,.976246001,1.654017874],[65,.983668285,1.663328621],[70,.987881313,1.669496746],[75,.989907427,1.673721126],[80,.990575029,1.676816127],[85,.990518582,1.679288503],[90,.990178615,1.681414297],[95,.98987473,1.690323893],[100,.98987473,1.71981649]],ht=[[0,.25,.25,.5],[5,.25,.25,.5],[10,.2,.2,.4],[15,.15,.15,.3],[20,.1,.1,.2]],mt=[[0,0],[10,1.111],[20,2.5],[30,4.286],[40,6.667],[50,9.667],[60,13.333],[70,17.778],[80,23.333],[90,30.222],[100,38.889]],$t={"点穴":10,"封气":.7,"虚弱":.5,"盲目":.2,"定身":.6,"厌食":.1,"冰封":.2,"封招":.3,"剧毒":.4,"外伤":.2,"内伤":.2,"随机":.34},bt={"封气":.5,"点穴":.3,"虚弱":.3,"盲目":.2,"定身":.2,"厌食":.2,"冰封":.2,"封招":.2,"剧毒":.1,"外伤":.1,"内伤":.1,"全部":2.4,"破甲":.3,"突防":.3,"杀气":.1,"杀内":.1,"杀体":.1,"杀命":.1,"中毒":.1,"秒杀":.2,"受伤":3.6,"双击":.3,"暴击":.5,"反击":.5,"击退":.3,"暗器":.1},Lt=["拳掌","御剑","兵器","指腿","暗毒"],_t=["受伤","中毒","点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","暴击","双击","破甲","突防","反击","杀命","杀内","杀体","杀气","秒杀"],vt=["点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封"];class kt{constructor(){this.valueAttrs={},this.classValueAttrs={},this.extValues={},this.flags={},this.immunes={},this.deBuffMakes={}}isEmpty(){return 0===Object.keys(this.valueAttrs).length&&0===Object.keys(this.classValueAttrs).length&&0===Object.keys(this.extValues).length&&0===Object.keys(this.flags).length&&0===Object.keys(this.immunes).length&&0===Object.keys(this.deBuffMakes).length}getValue(e){return this.valueAttrs[e]||0}setValue(e,t){this.valueAttrs[e]=t}getValueInc(e){const t=this.getValue(e);return 0!=t?t-1:0}getClassValue(e,t){return this.classValueAttrs[e]&&this.classValueAttrs[e][t]||0}setClassValue(e,t,a){this.classValueAttrs[e]||(this.classValueAttrs[e]={}),this.classValueAttrs[e][t]=a}getClassValueInc(e,t){const a=this.getClassValue(e,t);return 0!=a?a-1:0}getMainClassValueInc(e,t){const a=t?Math.min:Math.max;return a(...Lt.map((t=>this.getClassValueInc(t,e))))}getClassValues(e){return Lt.map((t=>this.getClassValue(t,e)))}getClassValuesInc(e){return Lt.map((t=>this.getClassValueInc(t,e)))}getExtValue(e){return this.extValues[e]||0}setExtValue(e,t){this.extValues[e]=t}addDeBuffMake(e,t,a){this.deBuffMakes[e]||(this.deBuffMakes[e]=[]),this.deBuffMakes[e].push({rate:t,round:a})}addImmune(e){this.immunes[e]=!0}multiple(e){for(const t in this.valueAttrs)this.valueAttrs[t]*=e;for(const t in this.classValueAttrs)for(const a in this.classValueAttrs[t])this.classValueAttrs[t][a]*=e;for(const t in this.extValues)this.extValues[t]*=e}}var At={constants:pt,castConf:gt,rangeConf:ht,debuffConf:$t,immuneConf:bt,repelConf:mt,classes:Lt,immuneTags:_t,debuffTags:vt,getTotalAtk(e){return e.getValueInc("裸攻")*pt["标准裸攻"]+e.getValueInc("场攻")*pt["标准场攻"]},getPower(e){return e.getValueInc("威力")*pt["标准武功威力"]},getDePower(e){return-e.getValueInc("减威")*pt["标准武功威力"]},getClassPower(e){return Lt.map((t=>e.getClassValueInc(t,"威力")*pt["标准武功威力"]))},getClassDePower(e){return Lt.map((t=>-e.getClassValueInc(t,"减威")*pt["标准武功威力"]))},getTotalDef(e){return e.getValueInc("裸防")*pt["标准裸防"]+e.getValueInc("场防")*pt["标准场防"]},getTotalAgi(e){return e.getValueInc("裸轻")*pt["标准裸轻"]+e.getValueInc("场轻")*pt["标准场轻"]},getTotalSeriesSpeed(e){return e.getValueInc("裸系")*(.2*pt["标准裸主系"]+.8*pt["标准副系"])+e.getValueInc("场系")*(.2*pt["标准场主系"]+.8*pt["标准副系"])}};function yt(e,t){return t=t||0,a=>{const n=t+a*e;return{res:n,factor:e,base:t}}}function Ot(e){return e=e||{},(t,a,n)=>{if(e.flag&&1==a)return t;void 0!=e["pct"]&&1!=e["pct"]||(a=`${(100*a).toFixed(0)}%`),e["rate"]&&(n=n||1,a=`${a}:${(100*n).toFixed(0)}%`);const r=e["symbol"]||"+";return`${t}${r}${a}`}}const It={"场系":{name:"战场五系",pct:!0,fmtFunc:Ot({symbol:"*"})},"裸系":{name:"自身五系",pct:!0,fmtFunc:Ot({symbol:"*"})},"突防":{calcFunc:yt(5),fmtFunc:Ot()},"破甲":{calcFunc:yt(3),fmtFunc:Ot()},"破军":{calcFunc:yt(2),fmtFunc:Ot()},"三击":{calcFunc:yt(2.5),fmtFunc:Ot()},"无视武常":{calcFunc:yt(24),fmtFunc:Ot({flag:!0})},"主动伤害":{pct:!0,calcFunc:yt(3.2),fmtFunc:Ot({symbol:"*"})},"不受击":{fmtFunc:Ot()},"受击半伤":{fmtFunc:Ot()},"反击":{calcFunc:yt(2),fmtFunc:Ot({flag:!0})},"双击全伤":{calcFunc:yt(1.6),fmtFunc:Ot({flag:!0})},"受击回气":{calcFunc:yt(1),fmtFunc:Ot({pct:!1})},"六龙":{calcFunc:yt(10),fmtFunc:Ot()},"回血":{calcFunc:yt(.002),fmtFunc:Ot({pct:!1})},"回血比":{name:"百分比回血",calcFunc:yt(20),fmtFunc:Ot()},"回内":{calcFunc:yt(25e-5),fmtFunc:Ot({pct:!1})},"回内比":{name:"百分比回内",calcFunc:yt(2.5),fmtFunc:Ot()},"回体":{calcFunc:yt(.2),fmtFunc:Ot({pct:!1})},"回伤":{calcFunc:yt(.03),fmtFunc:Ot({pct:!1})},"回气":{calcFunc:yt(.3),fmtFunc:Ot({pct:!1})},"解除异常":{calcFunc:yt(1.6),fmtFunc:Ot({flag:!0})},"重伤复活":{calcFunc:yt(.5),fmtFunc:Ot({flag:!0})},"满血复活":{calcFunc:yt(1.5),fmtFunc:Ot({flag:!0})},"攻击回内":{calcFunc:yt(25e-5),fmtFunc:Ot({pct:!1})},"杀内":{calcFunc:yt(4e-4),fmtFunc:Ot({pct:!1})},"杀内比":{name:"百分比杀内",calcFunc:yt(4),fmtFunc:Ot()},"杀体":{calcFunc:yt(.05),fmtFunc:Ot({pct:!1})},"中毒":{calcFunc:yt(.005),fmtFunc:Ot({pct:!1})},"击退":{name:"击退行动条",fmtFunc:(e,t,a)=>`${e}${(100*t).toFixed(0)}%+${(100*a).toFixed(0)}%`}};function Ft(e){const t=e.toFixed(0);return t>=0?t:`(${t})`}function Et(e){const t=e.toFixed(2);return t>=0?t:`(${t})`}class xt{constructor(e){this.type=e,this.logs=[],this.gradePoint=0}log(e){this.logs.push(e)}toString(){return`${this.type}: ${this.gradePoint.toFixed(2)}`}detail(){return this.logs.join("\n")}}class Ct{constructor(e){this.entries=[],this.factor=e||1,this.totalGrade=0}addEntry(e){e&&0!=e.gradePoint&&this.entries.push(e)}calcTotalGradePoint(){let e=0;return this.entries.forEach((t=>{e+=t.gradePoint})),this.totalGrade=e*this.factor,{base:e,final:this.totalGrade}}toString(e){e=e||"";const t=this.calcTotalGradePoint(),a=this.entries.map((e=>e.toString())).join("，");return 1!=this.factor?`${e}分值：${t.final.toFixed(2)}（${t.base.toFixed(2)} * ${this.factor})，[${a}]`:`${e}分值：${t.final.toFixed(2)}，[${a}]`}detail(){const e=this.entries.map((e=>`[${e.toString()}]\n${e.detail()}\n`)).join("\n");return e}}function Dt(e,t){let a=new Ct(t);return a.addEntry(St(e)),a.addEntry(Vt(e)),a.addEntry(Bt(e)),a.addEntry(Mt(e)),a.addEntry(Nt(e)),a.addEntry(wt(e)),a.addEntry(qt(e)),a.addEntry(Ht(e)),a.addEntry(jt(e)),a.addEntry(Gt(e)),a.addEntry(Kt(e)),a.addEntry(Zt(e)),a.addEntry(Rt(e)),a.addEntry(Ut(e)),a.addEntry(Qt(e)),a}function St(e){const t=new xt("时序分"),a=At.getTotalAtk(e),n=At.getTotalDef(e),r=At.getTotalAgi(e),s=At.getTotalSeriesSpeed(e);0==a&&0==n&&0==r&&0==s||t.log(`自身属性增幅：总攻击${Ft(a)}，总防御${Ft(n)}，总轻功${Ft(r)}，平均系数${Ft(s)}`);const l=-At.constants["标准敌方场攻"]*e.getValueInc("敌攻"),c=-At.constants["标准敌方场防"]*e.getValueInc("敌防"),o=-At.constants["标准敌方场轻"]*e.getValueInc("敌轻");0==l&&0==c&&0==o||t.log(`敌方属性降幅：攻击${Ft(l)}，防御${Ft(c)}，轻功${Ft(o)}`);const i=e.getValueInc("时序"),u=-e.getValueInc("敌时");0==i&&0==u||t.log(`时序系数：自身时序增加${Et(i)}，敌方时序降低${Et(u)}`);const f=At.constants["标准时序"],d=At.constants["标准敌方时序"],p=At.constants["时序分值系数"];t.log(`常数：标准时序${f}，标准敌方时序${d}，时序分值系数${p}`);const g=a+n+2*r+s;0!=g&&t.log(`自身属性时序增加值 = 总攻击+总防御+总轻功*2+平均系数 = ${Ft(a)}+${Ft(n)}+${Ft(r)}*2+${Ft(s)} = ${Ft(g)}`);const h=(f+g)*(1+i);h!=f&&t.log(`自身最终时序 = (标准时序+属性时序增加值)*(1+时序增加系数) = (${f}+${Ft(g)})*(1+${Et(i)}) = ${Ft(h)}`);const m=l+c+2*o;0!=m&&t.log(`敌方时序属性降低值 = 攻击降低+防御降低+轻功降低*2 = ${Ft(l)}+${Ft(c)}+${Ft(o)}*2 = ${Ft(m)}`);const $=(d-m)*(1-u);t.log(`敌方最终时序 = (标准时序-属性时序降低值)*(1-时序降低系数) = (${d}-${Ft(m)})*(1-${Et(u)}) = ${Ft($)}`);const b=h/$/(f/d);t.log(`最终时序倍率 = (自身最终时序/标准时序)/(敌方最终时序/标准敌方时序) = (${Ft(h)}/${f})/(${Ft($)}/${d}) = ${Et(b)}`);const L=(b-1)*p;return t.log(`时序分值 = (最终时序倍率-1)*时序分值系数 = (${Et(b)}-1)*${p} = ${Et(L)}`),t.gradePoint=L,t}function Tt(e,t){const a=e.getValueInc("裸攻"),n=e.getValueInc("场攻"),r=At.constants["标准裸攻"],s=At.constants["标准场攻"],l=a*r+n*s;0==a&&0==n||(t.log(`属性：自身攻击加成${Et(a)}，战场攻击加成${Et(n)}；常数：标准自身攻击${Ft(r)}，标准战场攻击${Ft(s)}`),t.log(`计算：总攻击增加 = 自身攻击加成*标准自身攻击+战场攻击加成*标准战场攻击 = ${Et(a)}*${r}+${Et(n)}*${s} = ${Ft(l)}`));const c=-e.getValueInc("敌防"),o=At.constants["标准敌方场防"],i=c*o;0!=c&&(t.log(`属性：敌方防御减成：${Et(c)}，常数：标准敌方防御${o}`),t.log(`计算：敌方防御降低 = 敌方防御减成*标准敌方防御 = ${Et(c)}*${o} = ${Et(i)}`));const u=e.getValueInc("威力"),f=At.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力加成${Et(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系威力攻击增加 = 全系威力加成*标准威力攻击当量 = ${Et(u)}*${f} = ${Ft(d)}`));const p=e.getMainClassValueInc("威力"),g=p*f;p>0&&(t.log(`属性：主系威力加成${Et(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系威力攻击增加 = 主系威力加成*标准威力攻击当量 = ${Et(p)}*${f} = ${Ft(g)}`));const h=e.getValueInc("裸系"),m=e.getValueInc("场系"),$=At.constants["标准裸主系"],b=At.constants["标准场主系"],L=At.constants["标准副系"],_=1.5*(h*$+m*b),v=1.5*(h*L+m*L);0==h&&0==m||(t.log(`属性：自身系数加成${Et(h)}，战场系数加成${Et(m)}；常数：标准主系自身数值${Ft($)}，标准主系战场数值${Ft(b)}，标准副系数值${Ft(L)}`),t.log(`计算：主系攻击增加 = (自身系数加成*标准主系自身数值+战场系数加成*标准主系战场数值)*1.5 = (${Et(h)}*${Ft($)}+${Et(m)}*${Ft(b)})*1.5 = ${Ft(_)}`),t.log(`计算：副系攻击增加 = (自身系数加成*标准副系数值+战场系数加成*标准副系数值)*1.5 = (${Et(h)}*${Ft(L)}+${Et(m)}*${Ft(L)})*1.5 = ${Ft(v)}`));const k=l+2*i+d+g+_,A=l+2*i+d+v;return t.log("总攻击公式：总攻击 = 属性攻击+威力攻击+系数攻击+敌方防御降低*2"),t.log(`主系总攻击 = ${Ft(l)}+(${Ft(d)}+${Ft(g)})+${Ft(_)}+${Ft(i)}*2 = ${Ft(k)}`),t.log(`副系总攻击 = ${Ft(l)}+${Ft(d)}+${Ft(v)}+${Ft(i)}*2 = ${Ft(A)}`),[k,A]}function Vt(e){const t=new xt("基本攻击分"),[a,n]=Tt(e,t),r=At.constants["破防指数系数"],s=At.constants["破防分值系数"],l=At.constants["主系分值权重"];t.log(`分值公式：分值 = 攻击*(1+惩罚系数*攻击)*分值系数*主副系占比；常数：惩罚系数${r}，分值系数${s}，主系权重${l}`);const c=Yt(a,r,s)*l,o=Yt(n,r,s)*(1-l);return t.log(`主系分值 = ${Ft(a)}*(1+${r}*${Ft(a)})*${s}*${Et(l)} = ${Et(c)}`),t.log(`副系分值 = ${Ft(n)}*(1+${r}*${Ft(n)})*${s}*${Et(1-l)} = ${Et(o)}`),t.gradePoint=c+o,t.log(`总分值 = ${Et(c)}+${Et(o)} = ${Et(t.gradePoint)}`),t}function Pt(e,t){const a=e.getValueInc("裸防"),n=e.getValueInc("场防"),r=At.constants["标准裸攻"],s=At.constants["标准场攻"],l=a*r+n*s;0==a&&0==n||(t.log(`属性：自身防御加成${Et(a)}，战场防御加成${Et(n)}；常数：标准自身防御${Ft(r)}，标准战场防御${Ft(s)}`),t.log(`计算：总防御增加 = 自身防御加成*标准自身防御+战场防御加成*标准战场防御 = ${Et(a)}*${r}+${Et(n)}*${s} = ${Ft(l)}`));const c=-e.getValueInc("敌攻"),o=At.constants["标准敌方场攻"],i=c*o;0!=c&&(t.log(`属性：敌方攻击减成：${Et(c)}，常数：标准敌方攻击${o}`),t.log(`计算：敌方攻击降低 = 敌方攻击减成*标准敌方攻击 = ${Et(c)}*${o} = ${Et(i)}`));const u=-e.getValueInc("减威"),f=At.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力减成${Et(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系减威防御增加 = 全系威力减成*标准威力攻击当量 = ${Et(u)}*${f} = ${Ft(d)}`));const p=-e.getMainClassValueInc("减威"),g=p*f;0!=p&&(t.log(`属性：主系威力减成${Et(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系减威防御增加 = 主系威力减成*标准威力攻击当量 = ${Et(p)}*${f} = ${Ft(g)}`));const h=e.getValueInc("裸系"),m=e.getValueInc("场系"),$=At.constants["标准裸主系"],b=At.constants["标准场主系"],L=At.constants["标准副系"],_=1.5*(h*$+m*b),v=1.5*(h*L+m*L);0==h&&0==m||(t.log(`属性：自身系数加成${Et(h)}，战场系数加成${Et(m)}；常数：标准主系自身数值${Ft($)}，标准主系战场数值${Ft(b)}，标准副系数值${Ft(L)}`),t.log(`计算：主系防御增加 = (自身系数加成*标准主系自身数值+战场系数加成*标准主系战场数值)*1.5 = (${Et(h)}*${Ft($)}+${Et(m)}*${Ft(b)})*1.5 = ${Ft(_)}`),t.log(`计算：副系防御增加 = (自身系数加成*标准副系数值+战场系数加成*标准副系数值)*1.5 = (${Et(h)}*${Ft(L)}+${Et(m)}*${Ft(L)})*1.5 = ${Ft(v)}`));const k=2*l+i+d+g+_,A=2*l+i+d+v;return t.log("总防御公式：总防御 = 属性防御*2+威力防御+系数防御+敌方攻击降低"),t.log(`主系总防御 = ${Ft(l)}*2+(${Ft(d)}+${Ft(g)})+${Ft(_)}+${Ft(i)} = ${Ft(k)}`),t.log(`副系总防御 = ${Ft(l)}*2+${Ft(d)}+${Ft(v)}+${Ft(i)} = ${Ft(A)}`),[k,A]}function Bt(e){const t=new xt("基本防御分"),[a,n]=Pt(e,t),r=At.constants["减破防指数系数"],s=At.constants["破防分值系数"],l=.2;t.log(`分值公式：分值 = 防御*(1+惩罚系数*防御)*分值系数*主副系占比；常数：惩罚系数${r}，分值系数${s}，主系权重${l}`);const c=Yt(a,r,s)*l,o=Yt(n,r,s)*(1-l);return t.log(`主系分值 = ${Ft(a)}*(1+${r}*${Ft(a)})*${s}*${Et(l)} = ${Et(c)}`),t.log(`副系分值 = ${Ft(n)}*(1+${r}*${Ft(n)})*${s}*${Et(1-l)} = ${Et(o)}`),t.gradePoint=c+o,t.log(`总分值 = ${Et(c)}+${Et(o)} = ${Et(t.gradePoint)}`),t}function wt(e){const t=new xt("暴击分"),a=e.getValue("暴击");if(0==a)return null;const n=Tt(e,{log:()=>{}});t.log(`攻击属性: 主系攻击${Ft(n[0])}，副系攻击${Ft(n[1])}`);const r=At.constants["标准暴击威力"],s=At.constants["破防指数系数"],l=At.constants["破防分值系数"],c=At.constants["主系分值权重"],o=n.map((e=>Yt(e,s,l)));t.log(`攻击分值: 主系分值${Et(o[0])}，副系分值${Et(o[1])}`);let i=0;const u=(e,a,r)=>{t.log(`计算${e}相关属性: ${e}率${Et(a)}；常数：标准${e}威力${Ft(r)}`);const u=n.map((e=>e+r));t.log(`${e}时攻击威力 = 基本攻击威力+标准${e}威力；主系攻击 = ${Ft(n[0])}+${r} = ${Ft(u[0])}，副系攻击 = ${Ft(n[1])}+${r} = ${Ft(u[1])}`);const f=u.map((e=>Yt(e,s,l)));t.log(`${e}时攻击分值计算：主系分值 = 计算攻击分值(${Ft(u[0])}) = ${Et(f[0])}，副系分值 = 计算攻击分值(${Ft(u[1])}) = ${Et(f[1])}`);const d=f.map(((e,t)=>(e-o[t])*a));t.log(`${e}附加分值 = (${e}时攻击分值-基础攻击分值)*${e}率；主系攻击分值 = (${Et(f[0])}-${Et(o[0])})*${Et(a)}=${Et(d[0])}，副系攻击分值 = (${Et(f[1])} - ${Et(o[1])})*${Et(a)} = ${Et(d[1])}`);const p=d[0]*c+d[1]*(1-c);return t.log(`综合${e}附加分值 = 主系攻击分值*主系分值权重+副系攻击分值*(1-主系分值权重) = ${Et(d[0])}*${Et(c)}+${Et(d[1])}*${Et(1-c)} = ${Et(p)}`),i+=p,p},f=[];return a>0&&f.push(["暴击分值",u("暴击",a,r)]),t.log(`情景攻击总分 = ${f.map((([e,t])=>`${e}(${Et(t)})`)).join(" + ")} = ${Et(i)}`),t.gradePoint=i,t}function Mt(e){const t=new xt("增伤分"),a=e.getValueInc("命中"),n=e.getValueInc("伤害"),r=e.getMainClassValueInc("命中"),s=e.getMainClassValueInc("伤害");t.log(`属性：命中加成${Et(a)}，伤害加成${Et(n)}, 主系命中加成${Et(r)}, 主系伤害加成${Et(s)}`);const l=At.getTotalAgi(e),c=-At.constants["标准敌方场轻"]*e.getValueInc("敌轻"),o=At.constants["轻功命中基准值"],i=(l+c)/o;0==l&&0==c||(t.log(`属性计算：自身轻功增加 = ${Ft(l)}，敌方轻功降低 = ${Ft(c)}；常数：轻功命中基准值${o}`),t.log(`轻功命中加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${Ft(l)}+${Ft(c)})/${o}) = ${Et(i)}`));const u=At.constants["命中伤害分值系数"],f=At.constants["主系分值权重"],d=(1+a)*(1+i)*(1+n),p=d*(1+r)*(1+s);t.log(`综合增伤 = (1+命中加成)*(1+轻功命中加成)*(1+伤害加成) = (1+${Et(a)})*(1+${Et(i)})*(1+${Et(n)}) = ${Et(d)}`),t.log(`主系增伤 = 综合增伤*(1+主系命中加成)*(1+主系伤害加成) = ${Et(d)}*(1+${Et(r)})*(1+${Et(s)}) = ${Et(p)}，副系增伤 = 综合增伤 = ${Et(d)}`);const g=p>=1?p-1:1-1/p,h=d>=1?d-1:1-1/d;p<1?t.log(`主系增伤差值(修正) = 1-1/主系增伤 = 1-1/${Et(p)} = ${Et(g)}`):t.log(`主系增伤差值 = 主系增伤-1 = ${Et(p)}-1 = ${Et(g)}`),d<1?t.log(`副系增伤差值(修正) = 1-1/副系增伤 = 1-1/${Et(d)} = ${Et(h)}`):t.log(`副系增伤差值 = 副系增伤-1 = ${Et(d)}-1 = ${Et(h)}`);const m=g*u*f,$=h*u*(1-f),b=m+$;return t.log(`主系增伤分= 主系增伤差值*命中伤害分值系数*主系分值权重 = ${Et(m)}*${u}*${f} = ${Et(m)}`),t.log(`副系增伤分= 副系增伤差值*命中伤害分值系数*(1-主系分值权重) = ${Et($)}*${u}*(1-${f}) = ${Et($)}`),t.log(`总增伤分 = 主系增伤分+副系增伤分 = ${Et(m)}+${Et($)} = ${Et(b)}`),t.gradePoint=b,t}function Nt(e){const t=new xt("减伤分"),a=-e.getValueInc("闪避"),n=-e.getValueInc("减伤"),r=-e.getMainClassValueInc("闪避",!0),s=-e.getMainClassValueInc("减伤",!0);t.log(`属性：闪避加成${Et(a)}，减伤加成${Et(n)}, 主系闪避加成${Et(r)}, 主系减伤加成${Et(s)}`);const l=At.getTotalAgi(e),c=-At.constants["标准敌方场轻"]*e.getValueInc("敌轻"),o=At.constants["轻功命中基准值"],i=(l+c)/o;0==l&&0==c||(t.log(`属性计算：自身轻功增加 = ${Ft(l)}，敌方轻功降低 = ${Ft(c)}；常数：轻功命中基准值${o}`),t.log(`轻功闪避加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${Ft(l)}+${Ft(c)})/${o}) = ${Et(i)}`));let u=1;const f=[],d=e.getValue("不受击");d>0&&(u*=1-d,f.push({type:"不受攻击",value:Et(1-d)}));const p=e.getValue("受击半伤");if(p>0&&(u*=1-p/2,f.push({type:"受击半伤",value:Et(1-p/2)})),f.length>0){const e=f.map((e=>`${e.type}：${e.value}`)).join("，");t.log(`特殊减伤因素：${e}`),t.log(`特殊减伤期望值 = ${f.map((e=>e.value)).join("*")} = ${Et(u)}`)}const g=At.constants["命中伤害分值系数"],h=.2,m=(1-a)*(1-i)*(1-n)*u,$=m*(1-r)*(1-s);t.log(`综合减伤 = (1-闪避加成)*(1-轻功闪避加成)*(1-减伤加成)*特殊减伤期望 = (1-${Et(a)})*(1-${Et(i)})*(1-${Et(n)})*${Et(u)} = ${Et(m)}`),t.log(`主系减伤 = 综合减伤*(1-主系闪避加成)*(1-主系减伤加成) = ${Et(m)}*(1-${Et(r)})*(1-${Et(s)}) = ${Et($)}，副系减伤 = 综合减伤 = ${Et(m)}`);const b=$>=1?1-$:1/$-1,L=m>=1?1-$:1/m-1;$<1?t.log(`主系减伤差值(修正) = 1/主系减伤-1 = 1/${Et($)}-1 = ${Et(b)}`):t.log(`主系减伤差值(修正) = 1-主系减伤 = 1-${Et($)} = ${Et(b)}`),m<1?t.log(`副系减伤差值(修正) = 1/副系增伤-1 = 1/${Et(m)}-1 = ${Et(L)}`):t.log(`副系减伤差值(修正) = 1-副系减伤 = 1-${Et(m)} = ${Et(L)}`);const _=b*g*h,v=L*g*(1-h),k=_+v;return t.log(`主系减伤分= 主系减伤差值*命中伤害分值系数*主系分值权重 = ${Et(_)}*${g}*${h} = ${Et(_)}`),t.log(`副系减伤分= 副系减伤差值*命中伤害分值系数*(1-主系分值权重) = ${Et(v)}*${g}*(1-${h}) = ${Et(v)}`),t.log(`总减伤分 = 主系减伤分+副系减伤分 = ${Et(_)}+${Et(v)} = ${Et(k)}`),t.gradePoint=k,t}function qt(e){const t=new xt("双击分"),a=e.getValue("双击");if(0==a)return null;const n=At.constants["双击分值系数"];t.log(`属性：双击率 = ${Et(a)}，常数：双击分值系数 = ${n}`);const r=Xt(a,0,n);return t.log(`双击分 = 双击率*双击分值系数 = ${Et(a)}*${n} = ${Et(r)}`),t.gradePoint=r,t}function Ht(e){const t=new xt("出招分"),a=e.getValue("出招"),n=e.getMainClassValueInc("出招");t.log(`属性：全系出招率 = ${Et(a)}；主系出招率 = ${Et(n)}`);const r=zt(a,At.castConf,(e=>e[2])),s=zt(n,At.castConf,(e=>e[1]));return t.log(`查出招分表：全系出招分(${Et(a)}) = ${Et(r)}；主系出招分(${Et(n)}) = ${Et(s)}`),t.gradePoint=r+s,t.log(`出招分 = 全系出招分+主系出招分 = ${Et(r)}+${Et(s)} = ${Et(t.gradePoint)}`),t}function jt(e){const t=new xt("距离分"),a=e.getValue("移动"),n=e.getValue("射程"),r=e.getValue("范围");t.log(`属性：移动${Ft(a)}，射程${Ft(n)}，范围${Ft(r)}`);const s=Jt(a,At.rangeConf,(e=>e[1])),l=Jt(n,At.rangeConf,(e=>e[2])),c=Jt(r,At.rangeConf,(e=>e[3]));return t.log(`查表计算：移动分(${Ft(a)}) = ${Et(s)}，射程分(${Ft(n)}) = ${Et(l)}，范围分(${Ft(r)}) = ${Et(c)}`),t.gradePoint=s+l+c,t.log(`距离分 = 移动分+射程分+范围分 = ${Et(s)}+${Et(l)}+${Et(c)} = ${Et(t.gradePoint)}`),t}function Gt(e){const t=new xt("吸血分"),a=e.getValue("吸血");if(0==a)return null;const n=At.constants["吸血分值基础"],r=At.constants["吸血分值系数"];t.log(`属性：吸血率${Et(a)}，常数：吸血分值基础${n}，吸血分值系数${r}`);const s=Xt(a,n,r);return t.log(`吸血分 = 吸血率*吸血分值系数+吸血分值基础 = ${Et(a)}*${r}+${n} = ${Et(s)}`),t.gradePoint=s,t}function Kt(e){const t=new xt("受伤分"),a=e.getValueInc("加受伤");let n=-e.getValueInc("减受伤");if(0==a&&0==n)return null;n>1&&(n=1);const r=At.constants["攻击受伤度分值系数"],s=At.constants["被攻击受伤度分值系数"];t.log(`属性：攻击受伤度${Et(a)}，被攻击受伤度${Et(n)}，常数：攻击受伤度分值系数${r}，被攻击受伤度分值系数${s}`);const l=Wt(a,r)+Wt(n,s);return t.log(`受伤分 = 攻击受伤度^2*攻击受伤度分值系数+被攻击受伤度^2*被攻击受伤度分值系数 = ${Et(a)}^2*${r}+${Et(n)}^2*${s} = ${Et(l)}`),t.gradePoint=l,t}function Zt(e){const t=new xt("反伤分"),a=e.getValue("反弹"),n=e.getValue("反震"),r=e.getValue("挪移");if(0==a&&0==n&&0==r)return null;const s=At.constants["伤害反弹分值系数"],l=At.constants["伤害反震分值系数"],c=At.constants["伤害转移分值系数"];t.log(`属性：反弹率${Et(a)}，反震率${Et(n)}，挪移率${Et(r)}，常数：反弹分值系数${s}，反震分值系数${l}，挪移分值系数${c}`);const o=Xt(a,0,s),i=Xt(n,0,l),u=Xt(r,0,c);t.log(`反弹分 = 反弹率*反弹分值系数 = ${Et(a)}*${s} = ${Et(o)}`),t.log(`反震分 = 反震率*反震分值系数 = ${Et(n)}*${l} = ${Et(i)}`),t.log(`挪移分 = 挪移率*转移分值系数 = ${Et(r)}*${c} = ${Et(u)}`);const f=o+i+u;return t.log(`反伤分 = 反弹分+反震分+挪移分 = ${Et(o)}+${Et(i)}+${Et(u)} = ${Et(f)}`),t.gradePoint=f,t}function Ut(e){const t=new xt("免疫分");if(0==e.immunes.length)return null;let a=0;const n=[];return Object.entries(At.immuneConf).forEach((([t,r])=>{e.immunes[t]&&(a+=r,n.push({key:t,value:r}))})),t.log(`免疫条目：${n.map((e=>`${e.key}(${e.value})`)).join("，")}`),n.length>1?t.log(`免疫分 = ${n.map((e=>e.value)).join("+")} = ${Et(a)}`):t.log(`免疫分 = ${Et(a)}`),t.gradePoint=a,t}function Rt(e){const t=new xt("异常分");if(0==e.deBuffMakes.length)return null;let a=0;const n=[];if(Object.entries(At.debuffConf).forEach((([t,r])=>{const s=e.deBuffMakes[t];null!=s&&s.forEach((e=>{const s={};"点穴"==t&&(s["square"]=!0);const l=ea(e.rate/100,e.round,At.constants["异常概率基础值"],r,s);a+=l,n.push([t,e.rate,`${e.round}回合`,l])}))})),e.deBuffMakes["击退"]){const t=e.deBuffMakes["击退"];t.forEach((e=>{const t=At.repelConf.findIndex((t=>t[0]>e.round))-1,r=At.repelConf[t],s=r[1]*e.rate/100;a+=s,n.push(["击退",e.rate,`击退${e.round}%行动条`,s])}))}return t.log(`异常条目：${n.map((e=>`${e[0]}#${e[1]}%${e[2]}(${Et(e[3])})`)).join("，")}`),n.length>1?t.log(`异常分 = ${n.map((e=>Et(e[3]))).join("+")} = ${Et(a)}`):t.log(`异常分 = ${Et(a)}`),t.gradePoint=a,t}function Qt(e){const t=new xt("特殊词条分"),a=Object.entries(e.extValues);if(0==a.length)return null;let n=0;const r=[];return a.forEach((([e,t])=>{const a=It[e],s=a.calcFunc(t);r.push({key:e,value:t,r:s}),n+=s.res})),r.forEach((e=>{0!=e.r.base?t.log(`[${e.key}](${Et(e.r.res)})：数值${Et(e.value)}，系数${e.r.factor}，基数${e.r.base}；分值 = ${Et(e.value)}*${Et(e.r.factor)} = ${Et(e.r.res)}`):t.log(`[${e.key}](${Et(e.r.res)})：数值${Et(e.value)}，系数${e.r.factor}；分值 = ${Et(e.value)}*${Et(e.r.factor)} = ${Et(e.r.res)}`)})),t.gradePoint=n,t}function Yt(e,t,a){return e*(1+e*t)*a}function Xt(e,t,a){return t+e*a}function Wt(e,t){return e*e*t}function zt(e,t,a){const n=Math.round(100*e);if(n<=0)return 0;let r=t.findIndex((e=>n<e[0]))-1;return r<-1&&(r=t.length-1),a(t[r])}function Jt(e,t,a){const n=Math.round(e);if(n<=0)return 0;let r=t.findIndex((e=>n<e[0]))-1,s=a(t[0]),l=0;r<-1&&(r=t.length-1);for(let c=0;c<r;c++)s+=(t[c][0]-l)*a(t[c]),l=t[c][0];return s+=(n-l)*a(t[r]),s>20*a(t[0])&&(s=20*a(t[0])),s}function ea(e,t,a,n,r){if(0==e||0==t)return 0;let s=e+a;return s>1&&(s=1),r&&r["square"]&&(s*=s),s*t*n}class ta{constructor(e,t){this.skillConfigs={},e.forEach((e=>{this.skillConfigs[e["skillType"]]=e})),this.auraRange=t||0}getAuraRange(){return this.auraRange}}class aa{constructor(e){e&&(this.type=e.type,this.mainAttr=e.mainAttr,this.viceAttr=e.viceAttr,this.teamAttr=e.teamAttr,this.auraRange=e.auraRange||0)}calcGrade(){const e={totalGrade:0,mainGp:0,viceGp:0,teamGp:0};this.mainAttr.isEmpty()||(e["mainGrade"]=Dt(this.mainAttr),e["mainGp"]=e["mainGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["mainGp"]),this.viceAttr.isEmpty()||(e["viceGrade"]=Dt(this.viceAttr),e["viceGp"]=e["viceGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["viceGp"]),this.teamAttr.isEmpty()||(e["teamGrade"]=Dt(this.teamAttr,sa(this.auraRange)),e["teamGp"]=e["teamGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["teamGp"]);const t=()=>{let t="",a="";return"光环"===this.type?(a="单体",t+=`光环，综合分值：${e.totalGrade.toFixed(2)}， [单体分值：${e.mainGp.toFixed(2)}，光环分值：${e.teamGp.toFixed(2)}]\n`):"防功"===this.type?(a="特技",t+=`防功，综合分值：${e.totalGrade.toFixed(2)}， [特技分值：${e.mainGp.toFixed(2)}，装备分值：${e.viceGp.toFixed(2)}]\n`):t+=`综合分值：${e.totalGrade.toFixed(2)}\n`,e["mainGrade"]&&(t+="==========================================\n",t+=e["mainGrade"].toString(a)+"\n",t+="------------------------\n",t+=e["mainGrade"].detail()),e["viceGrade"]&&(t+="==========================================\n",t+=e["viceGrade"].toString("装备")+"\n",t+="------------------------\n",t+=e["viceGrade"].detail()),e["teamGrade"]&&(t+="==========================================\n",t+=e["teamGrade"].toString("光环")+"\n",t+="------------------------\n",t+=e["teamGrade"].detail()),t};return e["detail"]=t,e}}function na(e,t){t=t||{};const a=new kt,n=new kt,r=new kt;let s="";if(0===Object.values(e.skillConfigs).length);else if(1===Object.values(e.skillConfigs).length)Object.entries(e.skillConfigs).forEach((([e,n])=>{ra(n,a,"normal",t),"团队天赋"==e?(s="光环",ra(n,r,"team_talent",t)):"团队状态"==e&&(s="光环",ra(n,r,"normal",t))}));else{if(2!==Object.values(e.skillConfigs).length)throw new Error("技能配置数量异常");if(e.skillConfigs["装备技"]&&e.skillConfigs["状态"])s="防功",ra(e.skillConfigs["状态"],a,"normal",t),ra(e.skillConfigs["装备技"],n,"normal",t);else{if(!e.skillConfigs["团队天赋"]||!e.skillConfigs["团队状态"])throw new Error("技能配置数量异常");s="光环",ra(e.skillConfigs["团队天赋"],a,"normal",t),ra(e.skillConfigs["团队天赋"],r,"team_talent",t),ra(e.skillConfigs["团队状态"],r,"team_buff",t)}}return new aa({type:s,mainAttr:a,viceAttr:n,teamAttr:r,auraRange:e.getAuraRange()})}function ra(e,t,a,n){const r=(e,a)=>{a>0&&(n.upFlag&&(a*=2),t.setValue(e,a))},s=(e,a)=>{a>0&&(a*=.01,n.upFlag&&(a*=2),t.setValue(e,a))},l=(e,a)=>{a>0&&(a*=.01,n.upFlag&&(a=2*a-1),t.setValue(e,a))},c=(e,a,r)=>{e&&r>0&&(r*=.01,n.upFlag&&(r*=2),t.setClassValue(e,a,r))},o=(e,a,r)=>{e&&r>0&&(r*=.01,n.upFlag&&(r=2*r-1),t.setClassValue(e,a,r))};if("normal"!=a&&"team_talent"!=a||(l("裸攻",e["bodyAtk"]),l("裸防",e["bodyDef"]),l("裸轻",e["bodyAgi"]),l("场攻",e["battleAtk"]),l("场防",e["battleDef"]),l("场轻",e["battleAgi"]),l("时序",e["battleAsp"]),l("敌攻",e["enemyAtk"]),l("敌防",e["enemyDef"]),l("敌轻",e["enemyAgi"]),l("敌时",e["enemyAsp"]),s("双击",e["doubleHit"]),s("暴击",e["critical"]),r("移动",e["moveDistance"]),r("射程",e["attackDistance"]),r("范围",e["attackRange"]),s("出招",e["castInc"]),c(e["specCastIncType"],"出招",e["specCastInc"])),("normal"==a||"team_buff"==a)&&(l("命中",e["hitInc"]),l("闪避",e["hitDec"]),l("威力",e["powerInc"]),l("减威",e["powerDec"]),l("伤害",e["damageInc"]),l("减伤",e["damageDec"]),o(e["specHitIncType"],"命中",e["specHitInc"]),o(e["specHitDecType"],"闪避",e["specHitDec"]),o(e["specPowerIncType"],"威力",e["specPowerInc"]),o(e["specPowerDecType"],"减威",e["specPowerDec"]),o(e["specDamageIncType"],"伤害",e["specDamageInc"]),o(e["specDamageDecType"],"减伤",e["specDamageDec"]),l("加受伤",e["injuryInc"]),l("减受伤",e["injuryDec"]),s("吸血",e["bloodSuck"]),s("反弹",e["damageCounter"]),s("挪移",e["damageTransfer"]),s("反震",e["damageReflect"]),e["deBuffImmune"]&&""!=e["deBuffImmune"].trim()&&e["deBuffImmune"].split(" ").map((e=>e.trim())).forEach((e=>t.addImmune(e))),e["deBuffMake"]&&""!=e["deBuffMake"].trim())){let a=e["deBuffRate"];n.upFlag&&(a*=2);const r=e["deBuffRound"];e["deBuffMake"].split(" ").map((e=>e.trim())).forEach((e=>t.addDeBuffMake(e,a,r)))}const i=e["ext"];i&&(i["values"]&&i["values"].forEach((e=>{const a=It[e["attr"]];if(a){let r=Number(e["value"]);n.upFlag&&(a.pct?r=2*r-1:r*=2),a.calcFunc?t.setExtValue(e["attr"],r):t.setValue(e["attr"],r)}})),i["flags"]&&i["flags"].forEach((e=>{const a=It[e];a&&a.calcFunc&&t.setExtValue(e,1)})),i["debuffs"]&&i["debuffs"].forEach((e=>{let a=e["rate"];n.upFlag&&(a*=2),t.addDeBuffMake(e["attr"],100*a,100*e["value"])})),i["immunes"]&&i["immunes"].forEach((e=>{t.addImmune(e)})))}function sa(e){if(0==e)return 3;const t=2*e+1;return(t*t-1)/800}function la(e){let t=[];return e.values&&e.values.forEach((({attr:e,value:a})=>{const n=It[e];n?(e=n.name||e,t.push(n.fmtFunc(e,a))):t.push(`${e}:${a}`)})),e.debuffs&&e.debuffs.forEach((({attr:e,value:a,rate:n})=>{const r=It[e];r?(e=r.name||e,t.push(r.fmtFunc(e,a,n))):t.push(`${e}:${a}, ${n}`)})),e.immunes&&t.push(`免疫${e.immunes.join("/")}`),e.flags&&e.flags.forEach((e=>{t.push(e)})),t.join(", ")}var ca={calcSkillGrade(e,t){const a=p(e),n=L(e)||[],r=new ta(n,a["attr_selfRange"]),s=na(r,{upFlag:t}),l=s.calcGrade();return l},fmtSkillExtAttr:la};function oa(e,t){return"全部"==e||("只看氪金"==e?t.ke:!t.ke)}const ia=[{title:"外功",value:"HAND",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:oa}]},{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","特殊","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"大绝",value:"EXPL",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"拳掌",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:oa}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:oa}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:oa}]}],ua={trigBy:ze,type:Ge,levelType:Ze,debuff_type:Ne,hurtType:Re,rangeType:Ye,flag_autoCast:ye},fa={0:"HAND",1:"HAND",2:"HAND",3:"HAND",4:"HAND",5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},da=[ke("ALL","","序号","id",{align:"start"}),ke("ALL","","名称","name"),ke("ALL","","类型","type"),ke("BODY|FOOT|TALENT|BUFF","","强度分值","grade",{ext:!0}),ke("BODY","","护体分值","grade_up",{ext:!0}),ke("BODY|FOOT","","等级","levelType"),ke("HAND|EXPL|BUFF","attr","威力","attrl_power"),ke("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗气格","attr_costEng"),ke("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗内力","attr_costMp"),ke("HAND|BODY|EXPL|BUFF","attr","所属招式","trigBy"),ke("HAND|BODY|EXPL|BUFF","attr","出招率","attr_trig"),ke("HAND|BODY|EXPL|BUFF","attr","伤害类型","hurtType"),ke("HAND|BODY|EXPL|BUFF","attr","范围形状","rangeType"),ke("HAND|BODY|EXPL|BUFF","attr","移动范围","attrl_moveRange"),ke("HAND|BODY|EXPL|BUFF","attr","杀伤范围","attrl_hitRange"),ke("HAND|BODY|FOOT|EXPL|BUFF","attr","命中率","attr_hit"),ke("HAND|EXPL","attr","暴击率","attr_crit"),ke("HAND|EXPL","attr","双击率","attr_double"),ke("HAND|EXPL","attr","自伤系数","attr_selfHurt"),ke("HAND|BODY|EXPL","attr","造成中毒","attr_poison"),ke("HAND|EXPL","attr","杀命","attr_decHpMax"),ke("HAND|EXPL","attr","杀体","attr_decVigor"),ke("HAND|BODY|EXPL","attr","杀内","attrl_decMp"),ke("HAND|BODY|EXPL","attr","吸内","attrl_incMp"),ke("BODY|TALENT|BUFF","spec","我方光环范围","attr_selfRange"),ke("BODY|TALENT|BUFF","spec","敌方光环范围","attr_enemyRange"),ke("HAND|EXPL","spec","附加/解除状态","debuff_type"),ke("HAND|EXPL","spec","状态几率","debuff_rate"),ke("HAND|EXPL","spec","状态回合","debuff_turn"),ke("BODY|EXPL|BUFF","spec","满气自动释放","flag_autoCast"),ke("BODY|FOOT|TALENT","desc","装备效果","text_equip"),ke("BODY|FOOT|BUFF","desc","使用效果","text_use"),ke("HAND|BODY|FOOT|BUFF","desc","出招台词","text_cast")],pa=[{text:"说明",value:"desc"},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function ga(e){const t={};e.type>=0&&e.type<=4?e.flag_autoCast?t.tabGroup="EXPL":t.tabGroup="HAND":t["tabGroup"]=fa[e.type],Object.entries(e).forEach((([e,a])=>{t[e]=ua[e]?ua[e](a):a}));const a=ca.calcSkillGrade(e.id);if(t["grade"]=a.totalGrade.toFixed(2),t["grade_ext"]=a.detail,5==e.type&&(4==e.levelType||5==e.levelType)){const a=ca.calcSkillGrade(e.id,!0);t["grade_up"]=a.totalGrade.toFixed(2),t["grade_up_ext"]=a.detail}return t}var ha={name:"ItemDataView",data(){return{selectType:"HAND",tabs:ia,headerLabels:pa,convertValue:ga}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return da},items(){return Object.values(this.$store.state.SkillSource)}},components:{TabDataPage:ve}},ma=ha,$a=(0,M.Z)(ma,ft,dt,!1,null,"fd32d904",null),ba=$a.exports,La=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels,"extra-filters":e.dataFilters}})],1)},_a=[];const va={weaponId:Je,armorId:Je,petId:Je,bsId:ze,fsId:ze,talentId:ze},ka=[{text:"配置",value:"def",selected:!0},{text:"套装属性",value:"attr",selected:!0},{text:"总属性",value:"attr_total",selected:!1}],Aa=[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=[t["weaponId"],t["armorId"],t["petId"]];for(const n of a){if(null==n)continue;const t=m(n);if(t["ke"]||t["req_hero1"]&&d(t["req_hero1"]).ke)return"只看氪金"==e}return"不看氪金"==e}}],ya=[ke("","","序号","id",{align:"start"}),ke("","","名称","name"),ke("","def","武器","weaponId",{searchable:!0}),ke("","def","防具","armorId",{searchable:!0}),ke("","def","骑宠","petId",{searchable:!0}),ke("","def","内功","bsId",{searchable:!0}),ke("","def","轻功","fsId",{searchable:!0}),ke("","def","天赋","talentId",{searchable:!0}),ke("","attr","套装属性","suitAttr"),ke("","attr","攻击","atk"),ke("","attr","防御","def"),ke("","attr","轻功","agi"),ke("","attr","拳掌","fs"),ke("","attr","御剑","ss"),ke("","attr","兵器","ws"),ke("","attr","指腿","rs"),ke("","attr","暗毒","ts"),ke("","attr_total","总属性","totalAttr"),ke("","attr_total","总攻击","total_atk"),ke("","attr_total","总防御","total_def"),ke("","attr_total","总轻功","total_agi"),ke("","attr_total","总拳掌","total_fs"),ke("","attr_total","总御剑","total_ss"),ke("","attr_total","总兵器","total_ws"),ke("","attr_total","总指腿","total_rs"),ke("","attr_total","总暗毒","total_ts")];function Oa(e){if(!e)return e;const t={};Object.entries(e).forEach((([e,a])=>{t[e]=va[e]?va[e](a):a})),t["suitAttr"]=Ia(e),t["totalAttr"]=t["suitAttr"]+Fa(e);const a=["atk","def","agi","fs","ss","ws","rs","ts"];return a.forEach((a=>{t["total_"+a]=Number(e[a])+Number(h(e["weaponId"])["attr_"+a])+Number(h(e["armorId"])["attr_"+a])+Number(h(e["petId"])["attr_"+a]),0==t["total_"+a]&&(t["total_"+a]="")})),t}function Ia(e){return Number(e["atk"])+Number(e["def"])+Number(e["agi"])+Number(e["fs"])+Number(e["ss"])+Number(e["ws"])+Number(e["rs"])+Number(e["ts"])}function Fa(e){return lt(h(e["weaponId"]))+lt(h(e["armorId"]))+lt(h(e["petId"]))}var Ea={name:"SuitDataView",data(){return{headerLabels:ka,dataFilters:Aa,convertValue:Oa}},computed:{headers(){return ya},items(){return Object.values(this.$store.state.SuitSource)}},components:{DataPage:$e}},xa=Ea,Ca=(0,M.Z)(xa,La,_a,!1,null,"519e3105",null),Da=Ca.exports,Sa=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels}})],1)},Ta=[];function Va(e,t){if("全部"==e)return!0;const a=p(t.skillId);return"只看氪金"==e?a.ke:!a.ke}const Pa=[{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:Va}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:Va}]}],Ba={5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},wa=[{text:"设定",value:"def",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"加成",value:"factor",selected:!0},{text:"几率",value:"rate",selected:!0},{text:"距离",value:"distance",selected:!0},{text:"异常",value:"debuff",selected:!0},{text:"特殊",value:"ext",selected:!0}],Ma=[ke("ALL","","武功序号","skillId",{align:"start"}),ke("ALL","","名称","name"),ke("BODY|FOOT","","等级","levelType"),ke("ALL","def","效果类别","skillType",{groupable:!0}),ke("ALL","def","效果回合数","round"),ke("ALL","def","己方益害","selfAdv"),ke("ALL","def","敌方益害","enemyAdv"),ke("ALL","attr","自身攻击","bodyAtk"),ke("ALL","attr","自身防御","bodyDef"),ke("ALL","attr","自身轻功","bodyAgi"),ke("ALL","attr","战场攻击","battleAtk"),ke("ALL","attr","战场防御","battleDef"),ke("ALL","attr","战场轻功","battleAgi"),ke("ALL","attr","行动时序","battleAsp"),ke("ALL","attr","敌方攻击","enemyAtk"),ke("ALL","attr","敌方防御","enemyDef"),ke("ALL","attr","敌方轻功","enemyAgi"),ke("ALL","attr","敌方时序","enemyAsp"),ke("ALL","factor","命中加成","hitInc"),ke("ALL","factor","专系命中加成","specHitInc"),ke("ALL","factor","命中减成","hitDec"),ke("ALL","factor","专系命中减成","specHitDec"),ke("ALL","factor","威力加成","powerInc"),ke("ALL","factor","专系威力加成","specPowerInc"),ke("ALL","factor","威力减成","powerDec"),ke("ALL","factor","专系威力减成","specPowerDec"),ke("ALL","factor","伤害加成","damageInc"),ke("ALL","factor","专系伤害加成","specDamageInc"),ke("ALL","factor","伤害减成","damageDec"),ke("ALL","factor","专系伤害减成","specDamageDec"),ke("ALL","factor","受伤度加成","injuryInc"),ke("ALL","factor","受伤度减成","injuryDec"),ke("ALL","rate","外功出招","castInc"),ke("ALL","rate","专系外功出招","specCastInc"),ke("ALL","rate","双击","doubleHit"),ke("ALL","rate","暴击","critical"),ke("ALL","rate","吸血","bloodSuck"),ke("ALL","rate","反震","damageReflect"),ke("ALL","rate","反弹","damageCounter"),ke("ALL","rate","挪移","damageTransfer"),ke("ALL","distance","移动距离","moveDistance"),ke("ALL","distance","武功移动","attackDistance"),ke("ALL","distance","武功范围","attackRange"),ke("ALL","debuff","免疫","deBuffImmune"),ke("ALL","debuff","造成异常状态","deBuffMake"),ke("ALL","ext","特殊词条","ext")];function Na(e){const t={};Object.entries(e).forEach((([e,a])=>{t[e]=0!=a?a:""}));const a=p(e["skillId"]);return a?(t["tabGroup"]=Ba[a.type],t["name"]=a["name"],t["levelType"]=Ze(a["levelType"]),e["specHitIncType"]&&(t["specHitInc"]=`${e["specHitIncType"]}${e["specHitInc"]}`),e["specHitDecType"]&&(t["specHitDec"]=`${e["specHitDecType"]}${e["specHitDec"]}`),e["specPowerIncType"]&&(t["specPowerInc"]=`${e["specPowerIncType"]}${e["specPowerInc"]}`),e["specPowerDecType"]&&(t["specPowerDec"]=`${e["specPowerDecType"]}${e["specPowerDec"]}`),e["specDamageIncType"]&&(t["specDamageInc"]=`${e["specDamageIncType"]}${e["specDamageInc"]}`),e["specDamageDecType"]&&(t["specDamageDec"]=`${e["specDamageDecType"]}${e["specDamageDec"]}`),e["specCastIncType"]&&(t["specCastInc"]=`${e["specCastIncType"]}${e["specCastInc"]}`),e["deBuffImmune"]&&(t["deBuffImmune"]=qa(e["deBuffImmune"])),e["deBuffMake"]&&(t["deBuffMake"]=`[${qa(e["deBuffMake"])}]${e["deBuffRound"]}回合+${e["deBuffRate"]}%`),e["ext"]&&(t["ext"]=la(e["ext"])),t):null}function qa(e){const t=e.split(" ").map((e=>e.trim()));return t.join("/")}var Ha={name:"SkillConfigView",data(){return{tabs:Pa,headerLabels:wa,convertValue:Na}},computed:{headers(){return Ma},items(){return Object.values(this.$store.state.SkillConfigSource)}},components:{DataPage:ve}},ja=Ha,Ga=(0,M.Z)(ja,Sa,Ta,!1,null,"6abd7608",null),Ka=Ga.exports,Za=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},Ua=[];const Ra=[{title:"NPC",value:"NPC",dataFilters:[{type:"select",label:"等级段",value:[5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,"全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||t.level>e-5&&t.level<=e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"队友",value:"FRIEND",dataFilters:[{type:"select",label:"氪金人",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]}],Qa={equip_wp:Je,equip_ar:Je,equip_pt:Je,equip_bs:ze,equip_fs:ze,talent:ze,mastery:ze,spec_copyHero:We,gender:Ie,family:Ee,party:Ce,mpKind:Ve,attr_atkCnt:we,flag_hide:ye},Ya=[ke("ALL","","序号","id",{align:"start"}),ke("ALL","","姓名","name"),ke("ALL","base","称号","nickname"),ke("ALL","base","头像","photo"),ke("ALL","base","性别","gender",{searchable:!0}),ke("ALL","base","血族","family",{searchable:!0}),ke("ALL","base","门派","party",{searchable:!0}),ke("ALL","base","等级","level",{groupable:!0}),ke("ALL","base","内力性质","mpKind",{searchable:!0}),ke("ALL","def","称号模板","title",{searchable:!0}),ke("ALL","effect","称号效果","titleEffect"),ke("ALL","def","天赋","talent",{searchable:!0}),ke("ALL","effect","天赋效果","talentEffect"),ke("ALL","def","专精武功","mastery",{searchable:!0}),ke("ALL","def","内功","equip_bs",{searchable:!0}),ke("ALL","effect","内功效果","bodySkillEffect"),ke("ALL","def","轻功","equip_fs",{searchable:!0}),ke("ALL","effect","轻功效果","footSkillEffect"),ke("ALL","def","装备武器","equip_wp",{searchable:!0}),ke("ALL","def","装备防具","equip_ar",{searchable:!0}),ke("ALL","def","装备骑宠","equip_pt",{searchable:!0}),ke("ALL","def","套装","suit",{searchable:!0}),ke("ALL","def","套装天赋","suit_talent",{searchable:!0}),ke("ALL","effect","套装天赋效果","suitTalentEffect"),ke("ALL","def","套装内功","suit_bs",{searchable:!0}),ke("ALL","effect","套装内功效果","suitBodySkillEffect"),ke("ALL","def","套装轻功","suit_fs",{searchable:!0}),ke("ALL","effect","套装轻功效果","suitFootSkillEffect"),ke("ALL","attr","血量","attr_hpMax"),ke("ALL","attr","功力","attr_mpMax"),ke("ALL","attr","攻击","attr_atk"),ke("ALL","attr","防御","attr_def"),ke("ALL","attr","轻功","attr_agi"),ke("ALL","attr","拳掌","attr_fs"),ke("ALL","attr","御剑","attr_ss"),ke("ALL","attr","兵器","attr_ws"),ke("ALL","attr","指腿","attr_rs"),ke("ALL","attr","暗毒","attr_ts"),ke("ALL","attr","医疗","attr_heal"),ke("ALL","attr","用毒","attr_poiMk"),ke("ALL","attr","解毒","attr_poiRd"),ke("ALL","attr","抗毒","attr_poiRs"),ke("ALL","attr","带毒","attr_poiAt"),ke("ALL","attr","武学常识","attr_klg"),ke("ALL","attr","攻击次数","attr_atkCnt",{searchable:!0}),ke("ALL","attr","资质","attr_itl"),ke("ALL","attr","体质","attr_str"),ke("ALL","attr","品德","attr_mrl"),ke("ALL","skill","武功格数","skill_cnt"),ke("ALL","skill","1格武功","skill_1",{searchable:!0}),ke("ALL","skill","2格武功","skill_2",{searchable:!0}),ke("ALL","skill","3格武功","skill_3",{searchable:!0}),ke("ALL","skill","4格武功","skill_4",{searchable:!0}),ke("ALL","skill","5格武功","skill_5",{searchable:!0}),ke("ALL","skill","6格武功","skill_6",{searchable:!0}),ke("ALL","skill","7格武功","skill_7",{searchable:!0}),ke("ALL","skill","8格武功","skill_8",{searchable:!0}),ke("ALL","skill","9格武功","skill_9",{searchable:!0}),ke("ALL","skill","10格武功","skill_10",{searchable:!0}),ke("ALL","skill2","11格武功","skill_11",{searchable:!0}),ke("ALL","skill2","12格武功","skill_12",{searchable:!0}),ke("ALL","skill2","13格武功","skill_13",{searchable:!0}),ke("ALL","skill2","14格武功","skill_14",{searchable:!0}),ke("ALL","skill2","15格武功","skill_15",{searchable:!0}),ke("ALL","skill2","16格武功","skill_16",{searchable:!0}),ke("ALL","skill2","17格武功","skill_17",{searchable:!0}),ke("ALL","skill2","18格武功","skill_18",{searchable:!0}),ke("ALL","skill2","19格武功","skill_19",{searchable:!0}),ke("ALL","skill2","20格武功","skill_20",{searchable:!0}),ke("ALL","skill2","21格武功","skill_21",{searchable:!0}),ke("ALL","skill2","22格武功","skill_22",{searchable:!0}),ke("ALL","skill2","23格武功","skill_23",{searchable:!0}),ke("ALL","skill2","24格武功","skill_24",{searchable:!0}),ke("ALL","skill2","25格武功","skill_25",{searchable:!0}),ke("ALL","skill2","26格武功","skill_26",{searchable:!0}),ke("ALL","skill2","27格武功","skill_27",{searchable:!0}),ke("ALL","skill2","28格武功","skill_28",{searchable:!0}),ke("ALL","skill2","29格武功","skill_29",{searchable:!0}),ke("ALL","skill2","30格武功","skill_30",{searchable:!0}),ke("ALL","item","1格物品","item_1",{searchable:!0}),ke("ALL","item","2格物品","item_2",{searchable:!0}),ke("ALL","item","3格物品","item_3",{searchable:!0}),ke("ALL","item","4格物品","item_4",{searchable:!0}),ke("ALL","status","生命","status_hp"),ke("ALL","status","内力","status_mp"),ke("ALL","status","体力","status_vigour"),ke("ALL","status","受伤","status_injury"),ke("ALL","status","中毒","status_poison"),ke("ALL","status","经验","status_exp"),ke("ALL","status","根骨","status_bone"),ke("ALL","spec","复制人物","spec_copyHero"),ke("ALL","spec","明玉丹额度","status_myd"),ke("ALL","spec","传奇隐藏","flag_hide"),ke("ALL","spec","结局编号","spec_ending")],Xa=[{text:"基本",value:"base",selected:!0},{text:"配置",value:"def",selected:!0},{text:"配置效果",value:"effect"},{text:"属性",value:"attr",selected:!0},{text:"武功",value:"skill",selected:!0},{text:"更多武功",value:"skill2"},{text:"物品",value:"item"},{text:"状态",value:"status"},{text:"其他",value:"spec",selected:!0}];function Wa(e){if(!e)return e;const t={};t["tabGroup"]=e["friend"]?"FRIEND":"NPC",Object.entries(e).forEach((([e,a])=>{t[e]=Qa[e]?Qa[e](a):a}));const a=$(e["equip_wp"],e["equip_ar"],e["equip_pt"]);a&&(t["suit"]=a.name,e["suit_bs"]=a.bsId,e["suit_fs"]=a.fsId,e["suit_talent"]=a.talentId,t["suit_bs"]=ze(a.bsId),t["suit_fs"]=ze(a.fsId),t["suit_talent"]=ze(a.talentId));let n=0;for(let s=0;s<30;s++){const a=e["skills"][s];if(a["skill"]){const e=1+Math.floor(a["exp"]/100);t["skill_"+(s+1)]=`${ze(a["skill"])}(${e}级)`,n++}}t["skill_cnt"]=n;for(let s=0;s<4;s++){const a=e["items"][s];a["item"]&&(t["item_"+(s+1)]=`${Je(a["item"])}*${a["amount"]}`)}e["equip_bs"]>0&&(t["bodySkillEffect"]=p(e["equip_bs"])["text_equip"]),e["equip_fs"]>0&&(t["footSkillEffect"]=p(e["equip_fs"])["text_equip"]),e["talent"]>0&&(t["talentEffect"]=p(e["talent"])["text_equip"]),t["suit_bs"]&&(t["suitBodySkillEffect"]=p(e["suit_bs"])["text_equip"]),t["suit_fs"]&&(t["suitFootSkillEffect"]=p(e["suit_fs"])["text_equip"]),t["suit_talent"]&&(t["suitTalentEffect"]=p(e["suit_talent"])["text_equip"]);const r=b(e["title"]);return r?(t["titleEffect"]=r["desc"],t["title"]=`[${e["title"]}]${r["name"]}`):t["title"]=`[${e["title"]}](未定义)`,t}var za={name:"HeroDataView",data(){return{selectType:"NPC",tabs:Ra,headerLabels:Xa,convertValue:Wa}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return Ya},items(){return Object.values(this.$store.state.HeroSource)}},components:{TabDataPage:ve}},Ja=za,en=(0,M.Z)(Ja,Za,Ua,!1,null,"65413552",null),tn=en.exports,an=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,"header-labels":e.headerLabels,mapper:e.convertValue},on:{tabChange:e.selectTab}})],1)},nn=[];const rn=(e,t)=>({type:"select",label:"路线",value:e,selected:t,filterFunc:(e,t)=>{if("全部"==e)return!0;const a=v(t.index);return a?a.group==e:"其他"==e}}),sn=(e,t)=>({type:"select",label:"类型",value:e,selected:t,filterFunc:(e,t)=>"全部"==e||t.op==e}),ln=[{title:"洗武",value:"xw",dataFilters:[rn(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),sn(["洗武功","洗天赋","洗专精","全部"],"全部")]},{title:"属性",value:"attr",dataFilters:[rn(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),sn(["改变生命","改变内力","改变攻击","改变防御","改变轻功","改变五系","改变资质","改变内力性质","改变性别","全部"],"全部")]},{title:"物品",value:"item",dataFilters:[{type:"select",label:"物品种类",value:["秘籍","装备","药品","暗器","剧情","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=h(t.index);return He(a.type)==e}},sn(["获得物品","增加/扣除物品","他人增加物品","初始装备","初始携带","全部"],"全部")]},{title:"品德",value:"moral"},{title:"队伍",value:"team",dataFilters:[rn(["女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),sn(["队员加入","队员离队","脱下装备","全部"],"全部")]}],cn=[],on=[ke("xw|attr|team","","人物","hero",{searchable:!0}),ke("item","","物品","item",{searchable:!0}),ke("ALL","","事件编号","eventId"),ke("ALL","","事件名","name"),ke("ALL","","指令","op"),ke("ALL","","描述","note")];function un(e){const t={...e};if("xw"==e["tabGroup"]||"attr"==e["tabGroup"]||"team"==e["tabGroup"]){const a=f(e["index"]);a&&(t["hero"]=`[${a.id}]${a.name}`)}else if("item"==e["tabGroup"]){const a=h(e["index"]);a&&(t["item"]=`[${a.id}]${a.name}`)}return t}var fn={name:"EventView",data(){return{selectType:"xw",tabs:ln,headerLabels:cn,convertValue:un}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return on},items(){return this.$store.state.EventSource[this.selectType]?this.$store.state.EventSource[this.selectType].map((e=>({...e,tabGroup:this.selectType}))):[]}},components:{TabDataPage:ve}},dn=fn,pn=(0,M.Z)(dn,an,nn,!1,null,"0aa08594",null),gn=pn.exports;n.ZP.use(E.ZP);const hn=[{path:"/",name:"home",component:K},{path:"/about",name:"about",component:()=>a.e(443).then(a.bind(a,1272))},{path:"/hero",name:"hero",component:tn},{path:"/item",name:"item",component:ut},{path:"/skill",name:"skill",component:ba},{path:"/suit",name:"suit",component:Da},{path:"/skill-config",name:"skill-config",component:Ka},{path:"/event",name:"event",component:gn},{path:"/coming",name:"coming",component:()=>a.e(390).then(a.bind(a,5390))}],mn=new E.ZP({routes:hn,mode:"hash",base:"/jshyl-data-web/"});var $n=mn,bn=a(998),Ln=a(6843),_n=a(5550),vn=a(9223),kn=a(4324),An=a(5808),yn=a(7397),On=a(4525),In=a(9471),Fn=a(4611),En=a(3059),xn=a(9709),Cn=a(5375),Dn=a(3687),Sn=function(){var e=this,t=e._self._c;return t(bn.Z,[t(xn.Z,{attrs:{app:""},model:{value:e.drawer,callback:function(t){e.drawer=t},expression:"drawer"}},[t(On.Z,{attrs:{to:"/"}},[t(Fn.Z,[t(kn.Z,[e._v("mdi-home-city")])],1),t(In.V9,[e._v("首页")])],1),t(vn.Z),t(An.Z,{attrs:{dense:"",nav:""}},e._l(e.items,(function(a){return t(yn.Z,{key:a.title,attrs:{value:!0,"sub-group":""},scopedSlots:e._u([{key:"activator",fn:function(){return[t(In.V9,[e._v(e._s(a.title))])]},proxy:!0}],null,!0)},e._l(a.sub,(function(a){return t(On.Z,{key:a.title,attrs:{to:a.to,link:""}},[t(In.km,[t(In.V9,[e._v(e._s(a.title))])],1)],1)})),1)})),1)],1),t(Ln.Z,{attrs:{app:"",color:"primary",height:"50vh",dark:""}},[t(_n.Z,{on:{click:function(t){t.stopPropagation(),e.drawer=!e.drawer}}}),t("div",{staticClass:"d-flex align-center"},[t("span",{staticClass:"mr-1"},[e._v("金书红颜录数据查看器")])]),t(Dn.Z),t("span",{staticClass:"mr-2"},[e._v("游戏版本：")]),t(Cn.Z,{staticClass:"text-subtitle-2",staticStyle:{"max-width":"100pt",height:"40px"},attrs:{dense:"",items:e.supportVersions,outlined:""},on:{change:e.changeVersion},model:{value:e.selectedVersion,callback:function(t){e.selectedVersion=t},expression:"selectedVersion"}})],1),t(En.Z,[t("router-view")],1)],1)},Tn=[],Vn={name:"App",data:()=>({selectedVersion:"v5.63K7",supportVersions:o.map((e=>e.name)),drawer:!0,items:[{title:"基本数据",sub:[{title:"人物",to:"/hero"},{title:"武功",to:"/skill"},{title:"物品",to:"/item"},{title:"套装",to:"/suit"},{title:"武功数值",to:"/skill-config"}]},{title:"高阶数据",sub:[{title:"事件",to:"/event"}]},{title:"辅助工具",sub:[{title:"分数计算（待开发）",to:"/coming"},{title:"武功模拟（待开发）",to:"/coming"}]}]}),methods:{changeVersion(){this.$store.commit("setVersion",this.selectedVersion),this.$store.dispatch("initStore")}},components:{}},Pn=Vn,Bn=(0,M.Z)(Pn,Sn,Tn,!1,null,null,null),wn=Bn.exports;n.ZP.config.productionTip=!1,new n.ZP({vuetify:F,store:O,router:$n,beforeCreate(){this.$store.dispatch("initStore")},render:e=>e(wn)}).$mount("#app")}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,a),s.exports}a.m=e,function(){var e=[];a.O=function(t,n,r,s){if(!n){var l=1/0;for(u=0;u<e.length;u++){n=e[u][0],r=e[u][1],s=e[u][2];for(var c=!0,o=0;o<n.length;o++)(!1&s||l>=s)&&Object.keys(a.O).every((function(e){return a.O[e](n[o])}))?n.splice(o--,1):(c=!1,s<l&&(l=s));if(c){e.splice(u--,1);var i=r();void 0!==i&&(t=i)}}return t}s=s||0;for(var u=e.length;u>0&&e[u-1][2]>s;u--)e[u]=e[u-1];e[u]=[n,r,s]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,n){return a.f[n](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+(443===e?"about":e)+"."+{390:"5f20b0f2",443:"59813d5b"}[e]+".js"}}(),function(){a.miniCssF=function(e){}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="jsproj-web:";a.l=function(n,r,s,l){if(e[n])e[n].push(r);else{var c,o;if(void 0!==s)for(var i=document.getElementsByTagName("script"),u=0;u<i.length;u++){var f=i[u];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+s){c=f;break}}c||(o=!0,c=document.createElement("script"),c.charset="utf-8",c.timeout=120,a.nc&&c.setAttribute("nonce",a.nc),c.setAttribute("data-webpack",t+s),c.src=n),e[n]=[r];var d=function(t,a){c.onerror=c.onload=null,clearTimeout(p);var r=e[n];if(delete e[n],c.parentNode&&c.parentNode.removeChild(c),r&&r.forEach((function(e){return e(a)})),t)return t(a)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=d.bind(null,c.onerror),c.onload=d.bind(null,c.onload),o&&document.head.appendChild(c)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.p="/jshyl-data-web/"}(),function(){var e={143:0};a.f.j=function(t,n){var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise((function(a,n){r=e[t]=[a,n]}));n.push(r[2]=s);var l=a.p+a.u(t),c=new Error,o=function(n){if(a.o(e,t)&&(r=e[t],0!==r&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;c.message="Loading chunk "+t+" failed.\n("+s+": "+l+")",c.name="ChunkLoadError",c.type=s,c.request=l,r[1](c)}};a.l(l,o,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,s,l=n[0],c=n[1],o=n[2],i=0;if(l.some((function(t){return 0!==e[t]}))){for(r in c)a.o(c,r)&&(a.m[r]=c[r]);if(o)var u=o(a)}for(t&&t(n);i<l.length;i++)s=l[i],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return a.O(u)},n=self["webpackChunkjsproj_web"]=self["webpackChunkjsproj_web"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=a.O(void 0,[998],(function(){return a(5878)}));n=a.O(n)})();
//# sourceMappingURL=app.9de33e7b.js.map