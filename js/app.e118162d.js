(function(){"use strict";var e={3053:function(e,t,a){var s=a(144),l=a(629),n=a(9669),r=a.n(n);function i(e,t){return t?r().request({url:`/data/${t.path}/${e}.json`,method:"get"}).then((e=>e.data)):r().request({url:`/data/${e}.json`,method:"get"}).then((e=>e.data))}function c(e){return nt.state.SupportedVersions.find((t=>t.name===e))}function o(e){return nt.state.HeroSource[e]}function u(e){return nt.state.SkillSource[e]}function f(e){const t=e.match(/\[(\d+)\]/)[1];return nt.state.SkillSource[t]}function d(e){return nt.state.ItemSource[e]}function p(e){const t=e.match(/\[(\d+)\]/)[1];return nt.state.ItemSource[t]}function m(e,t,a){const s=`${e}-${t}-${a}`;return nt.state.SuitIndex[s]}function g(e){return nt.state.TitleIndex[e]}function h(e){return nt.state.SkillConfigIndex[e]}function b(){Object.entries(nt.state.SkillExtConfigSource).forEach((([e,t])=>{const a=u(e),s=h(e)||[];t["range"]&&(a["ext_range"]=t["range"]),t["grade"]&&(a["ext_grade"]=t["grade"]),t["attrs"]&&t["attrs"].forEach((t=>{const a=s.find((e=>e["skillType"]===t["type"]));if(a)a["ext"]=t;else{const a=u(e),s={name:a["name"],skillId:e,skillType:t["type"],ext:t};nt.state.SkillConfigSource.push(s),nt.state.SkillConfigIndex[e]?nt.state.SkillConfigIndex[e].push(s):nt.state.SkillConfigIndex[e]=[s]}}))}))}function $(e){return nt.state.Const.friend[e]}function y(e,t){localStorage.setItem(e,JSON.stringify(t))}function v(e){const t=localStorage.getItem(e);return"undefined"!=t?JSON.parse(t):null}a(1703),a(2087);const k={"标准裸攻":1200,"标准裸防":1200,"标准裸轻":1200,"标准场攻":1400,"标准场防":1750,"标准场轻":1300,"标准时序":6400,"标准裸主系":1200,"标准场主系":1400,"标准副系":400,"标准敌方场攻":1250,"标准敌方场防":1250,"标准敌方场轻":950,"标准敌方时序":5e3,"标准敌方武常":700,"标准武功威力":2e3,"标准暴击威力":1280,"标准突防威力":900,"标准破甲威力":600,"标准破军威力":450,"破防指数系数":.001,"减破防指数系数":5e-4,"破防分值系数":.003,"主系分值权重":.9,"时序分值系数":10,"轻功命中基准值":9e3,"命中伤害分值系数":4,"吸血分值基础":1.5,"吸血分值系数":5,"双击分值系数":1.08,"三击分值系数":2.52,"被攻击受伤度分值系数":3.6,"攻击受伤度分值系数":.9,"伤害反弹分值系数":2,"伤害转移分值系数":1,"伤害反震分值系数":5,"异常概率基础值":.2,"主动伤害权重":.8},_=[[0,0,0],[5,.196269186,.385470032],[10,.361933895,.695426217],[15,.500343722,.941680016],[20,.614654319,1.134735539],[25,.707827406,1.283866457],[30,.78263076,1.397192897],[35,.841638223,1.481758346],[40,.8872297,1.543606558],[45,.921591157,1.587858451],[50,.946714622,1.618789015],[55,.964398185,1.63990421],[60,.976246001,1.654017874],[65,.983668285,1.663328621],[70,.987881313,1.669496746],[75,.989907427,1.673721126],[80,.990575029,1.676816127],[85,.990518582,1.679288503],[90,.990178615,1.681414297],[95,.98987473,1.690323893],[100,.98987473,1.71981649]],L=[[0,.25,.25,.5],[5,.25,.25,.5],[10,.2,.2,.4],[15,.15,.15,.3],[20,.1,.1,.2]],A=[[0,0],[10,1.111],[20,2.5],[30,4.286],[40,6.667],[50,9.667],[60,13.333],[70,17.778],[80,23.333],[90,30.222],[100,38.889]],x={"点穴":10,"封气":.7,"虚弱":.5,"盲目":.2,"定身":.6,"厌食":.1,"冰封":.2,"封招":.3,"剧毒":.4,"外伤":.2,"内伤":.2,"随机":.34},C={"封气":.5,"点穴":.3,"虚弱":.3,"盲目":.2,"定身":.2,"厌食":.2,"冰封":.2,"封招":.2,"剧毒":.1,"外伤":.1,"内伤":.1,"全部":2.4,"破甲":.3,"突防":.3,"杀气":.1,"杀内":.1,"杀体":.1,"杀命":.1,"中毒":.1,"秒杀":.2,"受伤":3.6,"双击":.3,"暴击":.5,"反击":.5,"击退":.3,"暗器":.1,"外功":1},S=["拳掌","御剑","兵器","指腿","暗毒"],F=["受伤","中毒","点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","暴击","双击","破甲","突防","反击","杀命","杀内","杀体","杀气","秒杀"],O=["点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封"];var I={constants:k,castConf:_,rangeConf:L,debuffConf:x,immuneConf:C,repelConf:A,classes:S,immuneTags:F,debuffTags:O,getTotalAtk(e){return e.getValueInc("裸攻")*k["标准裸攻"]+e.getValueInc("场攻")*k["标准场攻"]},getPower(e){return e.getValueInc("威力")*k["标准武功威力"]},getDePower(e){return-e.getValueInc("减威")*k["标准武功威力"]},getClassPower(e){return S.map((t=>e.getClassValueInc(t,"威力")*k["标准武功威力"]))},getClassDePower(e){return S.map((t=>-e.getClassValueInc(t,"减威")*k["标准武功威力"]))},getTotalDef(e){return e.getValueInc("裸防")*k["标准裸防"]+e.getValueInc("场防")*k["标准场防"]},getTotalAgi(e){return e.getValueInc("裸轻")*k["标准裸轻"]+e.getValueInc("场轻")*k["标准场轻"]},getTotalSeriesSpeed(e){return e.getValue("裸系")*(.2*k["标准裸主系"]+.8*k["标准副系"])+e.getValue("场系")*(.2*k["标准场主系"]+.8*k["标准副系"])}};function E(e,t){return t=t||0,a=>{const s=t+a*e;return{res:s,factor:e,base:t}}}function T(e){return t=>E(e)(t-1)}function D(e){return t=>{if(t<0){const a=E(e,0)(-t);return a.res=-a.res,a}const a=1/(1-t)-1,s=a*e;return{res:s,factor:e,base:0}}}function V(e){return t=>D(e)(1-t)}function w(e){return e=e||{},(t,a,s)=>{if(e.flag&&1==a)return t;e["num"]&&1!=e["pct"]||(a=`${(100*a).toFixed(0)}%`),e["rate"]&&(s=s||1,a=`${a}:${(100*s).toFixed(0)}%`);const l=e["symbol"]||"+";return`${t}${l}${a}`}}function B(e){return e["round"]?(e,t,a)=>(console.log(e,t,a),`${e}${t.toFixed(0)}%+${(100*a).toFixed(0)}%`):(e,t,a)=>`${e}${(100*t).toFixed(0)}%+${(100*a).toFixed(0)}%`}T(4),w({symbol:"*"}),T(4),w({symbol:"*"}),V(4),w({symbol:"*"}),V(4),w({symbol:"*"}),E(5,1.5),w(),w({symbol:"*"}),w({symbol:"*"}),w({symbol:"*"}),E(5),w(),E(3),w(),E(2),w(),E(2.5),w(),E(12),w({flag:!0}),E(16),w({flag:!0}),E(24),w({flag:!0}),E(2.4),w({flag:!0}),E(3.2),w({symbol:"*"}),E(3),w(),D(4),w(),w(),E(2),w({flag:!0}),E(4),w({flag:!0}),E(10),w({flag:!0}),E(20),w({flag:!0}),E(8),w({flag:!0}),E(6),w({flag:!0}),E(3),w({flag:!0}),E(5),w({flag:!0}),E(6),w({flag:!0}),E(5),w({flag:!0}),E(10),w({flag:!0}),E(16),w({flag:!0}),E(9),w({flag:!0}),E(6),w({flag:!0}),E(4),w({flag:!0}),E(3),w({flag:!0}),E(1),w({flag:!0}),E(3),w({flag:!0}),E(15),w({flag:!0}),E(3.5),w({flag:!0}),E(2.5),w({flag:!0}),E(8),w({flag:!0}),E(5),w({flag:!0}),E(6.25),w({flag:!0}),E(2),w({flag:!0}),E(3),w({flag:!0}),E(.002),w({pct:!1}),E(20),w(),E(25e-5),w({pct:!1}),E(2.5),w(),E(.02),w({pct:!1}),E(.03),w({pct:!1}),E(.01),w({pct:!1}),E(1.5),w({pct:!1}),E(.3),w({pct:!1}),E(3),w({pct:!1}),E(1.6),w({flag:!0}),E(.5),w({flag:!0}),E(3),w({flag:!0}),E(25e-5),w({pct:!1}),E(.003),w({pct:!1}),E(.02),w({pct:!1}),E(4e-4),w({pct:!1}),E(4),w(),E(10),w(),E(.05),w({pct:!1}),E(.3),w({pct:!1}),E(3),w({pct:!1}),E(.005),w({pct:!1}),E(1),w({pct:!1}),E(8),w(),E(5),w(),E(2),w(),E(3),w(),E(1),w(),E(.3),w(),E(1.6),w({flag:!0}),E(2),w({flag:!0}),E(1.5),w(),E(1.5),w(),E(1.5),w(),E(1.5),w({pct:!1}),E(.5),w({flag:!0}),E(3),w(),E(2.5),w(),E(2),w(),E(3),w(),E(1),w(),E(.5),w({flag:!0}),E(.5),w({flag:!0}),E(.5),w({flag:!0}),E(4),w({flag:!0}),E(1),w({flag:!0}),E(1),w(),E(.2),w({pct:!1}),E(.2),w({pct:!1}),E(5),w();class K{constructor(e,t){t=t||{},this.key=e,this.name=t.name||e,this.value=t.value||0,this.desc=t.desc||"",this.calcType=t.calcType||"linear",this.calcFlags=t.calcFlags||[],this.calcArgs=t.calcArgs||{},this.printType=t.printType||"attr",this.printFlags=t.printFlags||[],this.printOptions=t.printOptions||{}}hasCalcFlag(e){return this.calcFlags.indexOf(e)>=0}hasPrintFlag(e){return this.printFlags.indexOf(e)>=0}calcGrade(e){switch(this.calcType){case"linear":return E(this.value,this.calcArgs["base"])(e);case"inverse":return D(this.value)(e);case"linearPct":return T(this.value)(e);case"inversePct":return V(this.value)(e)}throw new Error(`Unknown calcType: ${this.calcType}`)}print(e,t,a){const s={...this.printOptions};switch(this.printFlags.forEach((e=>{s[e]=!0})),this.printType){case"attr":return w(s)(e,t,a);case"debuff":return B(s)(e,t,a)}throw new Error(`Unknown printType: ${this.printType}`)}}function P(e,t){return new K(e,t)}const Z=[P("伤害",{value:4,calcType:"linearPct",calcFlags:["cmn","pct"],printOptions:{symbol:"*"}}),P("命中",{value:4,calcType:"linearPct",calcFlags:["cmn","pct"],printOptions:{symbol:"*"}}),P("减伤",{value:4,calcType:"inversePct",calcFlags:["cmn","pct"],printOptions:{symbol:"*"}}),P("闪避",{value:4,calcType:"inversePct",calcFlags:["cmn","pct"],printOptions:{symbol:"*"}}),P("吸血",{value:5,calcArgs:{base:1.5},calcFlags:["cmn"],printOptions:{symbol:"*"}}),P("场系",{name:"战场五系",calcFlags:["cmn"],printOptions:{symbol:"*"}}),P("裸系",{name:"自身五系",calcFlags:["cmn"],printOptions:{symbol:"*"}}),P("攻系",{name:"攻防五系",calcFlags:["cmn"],printOptions:{symbol:"*"}}),P("武常",{value:12,printOptions:{symbol:"*"}}),P("降敌武常",{value:12,printOptions:{symbol:"*"}}),P("主动伤害",{value:3.2,printOptions:{symbol:"*"}}),P("暴击",{value:8,calcFlags:["cmn"]}),P("双击",{value:1.08,calcFlags:["cmn"]}),P("突防",{value:5}),P("破甲",{value:3}),P("三击",{value:2.5}),P("内力承伤",{value:3}),P("不受击",{value:4,calcType:"inverse",calcFlags:["cmn"],printOptions:{symbol:"*"}}),P("伤害减半",{value:4,calcFlags:["cmn"]}),P("回血",{value:.002,printFlags:["num"]}),P("回血比",{name:"百分比回血",value:20}),P("回内",{value:25e-5,printFlags:["num"]}),P("回内比",{name:"百分比回内",value:2.5}),P("回体",{value:.02,printFlags:["num"]}),P("回伤",{value:.03,printFlags:["num"]}),P("解毒",{value:.004,printFlags:["num"]}),P("清伤",{value:2,printFlags:["flag"]}),P("清毒",{value:.2,printFlags:["flag"]}),P("回气",{value:.3,printFlags:["num"]}),P("满气",{value:3,printFlags:["flag"]}),P("加速",{name:"回复行动条",value:5}),P("解除异常",{value:1.6,printFlags:["flag"]}),P("重伤复活",{value:.8,printFlags:["flag"]}),P("满血复活",{value:3,printFlags:["flag"]}),P("攻击回内",{value:25e-5,printFlags:["num"]}),P("直伤",{value:.003,printFlags:["num"]}),P("受伤",{value:.02,printFlags:["num"]}),P("杀内",{value:4e-4,printFlags:["num"]}),P("杀内比",{name:"百分比杀内",value:4}),P("吸内比",{name:"百分比吸内",value:10}),P("杀体",{value:.05,printFlags:["num"]}),P("杀气",{value:.3,printFlags:["num"]}),P("清气",{value:3,printFlags:["flag"]}),P("中毒",{value:.005,printFlags:["num"]}),P("随机异常",{value:1,printType:"debuff",printFlags:["round"]}),P("击退",{name:"击退行动条",value:10,calcFlags:["cmn"],printType:"debuff"}),P("反击",{value:2,printFlags:["flag"]}),P("星璇反击",{value:4,printFlags:["flag"]}),P("万相反击",{value:10,printFlags:["flag"]}),P("星阵反击",{value:20,printFlags:["flag"]}),P("无我",{value:8,printFlags:["flag"]}),P("狂宵",{value:6,printFlags:["flag"]}),P("天鹏",{value:3,printFlags:["flag"]}),P("追击",{value:5,printFlags:["flag"]}),P("再攻",{value:6,printFlags:["flag"]}),P("必中",{value:5,printFlags:["flag"]}),P("六龙",{value:10,printFlags:["flag"]}),P("天极",{value:16,printFlags:["flag"]}),P("再起",{value:9,printFlags:["flag"]}),P("无双",{value:6,printFlags:["flag"]}),P("破军",{value:2,printFlags:["flag"]}),P("百世",{value:4,printFlags:["flag"]}),P("法身",{value:3,printFlags:["flag"]}),P("不动",{value:1,printFlags:["flag"]}),P("星光",{value:3,printFlags:["flag"]}),P("天子",{value:15,printFlags:["flag"]}),P("涅槃",{value:3.5,printFlags:["flag"]}),P("解体",{value:2.5,printFlags:["flag"]}),P("忽视系数",{value:8,printFlags:["flag"]}),P("无视天赋",{value:5,printFlags:["flag"]}),P("无视特技",{value:6.25,printFlags:["flag"]}),P("无视称号",{value:2,printFlags:["flag"]}),P("无视内轻属性",{value:3,printFlags:["flag"]}),P("无视武常",{value:24,printFlags:["flag"]}),P("无视双方武常",{value:2.4,printFlags:["flag"]}),P("双击全伤",{value:1.2,printFlags:["flag"]}),P("左右全伤",{value:1.2,printFlags:["flag"]}),P("护体",{name:"护体概率",value:5}),P("爆内",{name:"爆内概率",value:2}),P("全屏爆绝",{value:3,printFlags:["flag"]}),P("两次爆绝",{value:1,printFlags:["flag"]}),P("爆内时爆绝",{value:.3,printFlags:["flag"]}),P("爆绝时爆内",{value:2.7,printFlags:["flag"]}),P("调息回合",{value:.2,printFlags:["num"]}),P("护体回合",{value:.2,printFlags:["num"]}),P("暗器必中",{value:1,printFlags:["flag"]}),P("暗器命中",{value:1}),P("暗器伤害",{value:.5}),P("暗器范围",{value:1,printFlags:["num"]}),P("暗器反击",{value:.1,printFlags:["flag"]}),P("医疗",{value:3}),P("服药",{value:1}),P("连续服药",{value:.5,printFlags:["flag"]}),P("立即服药",{value:.5,printFlags:["flag"]}),P("无负面服药",{value:.5,printFlags:["flag"]}),P("受医疗",{value:1}),P("修炼系数",{value:8}),P("无限制修炼",{value:4,printFlags:["flag"]}),P("无限制装备",{value:1,printFlags:["flag"]}),P("武器属性",{value:3}),P("防具属性",{value:2.5}),P("骑宠属性",{value:2})],G=Z.reduce(((e,t)=>(e[t.key]=t,e)),{}),M={"主系":{factor:.9},"单系":{factor:.2},"男性":{factor:.6},"女性":{factor:.4},"暴击":{factor:.3},"双击":{factor:.5},"击中":{factor:.9},"闪避":{factor:.7},"击杀":{factor:.3},"被击中":{factor:2},"被暴击":{factor:.2},"被双击":{factor:.3},"被闪避":{factor:.2},"战斗开始":{factor:.3},"行动后":{factor:.7},"退场":{factor:.1},"医疗":{factor:.3},"休息":{factor:.2},"流转":{factor:.2},"回复敌方":{factor:0},"爆内":{factor:.1},"低血":{factor:.3},"半体":{factor:.4}};class j{constructor(){this.valueAttrs={},this.classValueAttrs={},this.extValues=[],this.flags={},this.immunes={},this.deBuffMakes={}}isEmpty(){return 0===Object.keys(this.valueAttrs).length&&0===Object.keys(this.classValueAttrs).length&&0===this.extValues.length&&0===Object.keys(this.flags).length&&0===Object.keys(this.immunes).length&&0===Object.keys(this.deBuffMakes).length}getValue(e){return this.valueAttrs[e]||0}setValue(e,t){this.valueAttrs[e]=t}getValueInc(e){const t=this.getValue(e);return 0!=t?t-1:0}getClassValue(e,t){return this.classValueAttrs[e]&&this.classValueAttrs[e][t]||0}getMainClassValue(e){const t=Math.max;return t(...I.classes.map((t=>this.getClassValue(t,e))))}setClassValue(e,t,a){this.classValueAttrs[e]||(this.classValueAttrs[e]={}),this.classValueAttrs[e][t]=a}getClassValueInc(e,t){const a=this.getClassValue(e,t);return 0!=a?a-1:0}getMainClassValueInc(e,t){const a=t?Math.min:Math.max;return a(...I.classes.map((t=>this.getClassValueInc(t,e))))}getExtValues(){return this.extValues}setExtValue(e,t,a){const s={attrType:e,value:t,condition:a};this.extValues.push(s)}addDeBuffMake(e,t,a){this.deBuffMakes[e]||(this.deBuffMakes[e]=[]),this.deBuffMakes[e].push({rate:t,round:a})}addImmune(e){this.immunes[e]=!0}}function N(e){const t=e.toFixed(0);return t>=0?t:`(${t})`}function H(e){const t=e.toFixed(2);return t>=0?t:`(${t})`}class q{constructor(e){this.type=e,this.logs=[],this.gradePoint=0}log(e){this.logs.push(e)}toString(){return`${this.type}: ${this.gradePoint.toFixed(2)}`}detail(){return this.logs.join("\n")}}class U{constructor(e){this.entries=[],this.factor=e||1,this.totalGrade=0}addEntry(e){e&&0!=e.gradePoint&&this.entries.push(e)}calcTotalGradePoint(){let e=0;return this.entries.forEach((t=>{e+=t.gradePoint})),this.totalGrade=e*this.factor,{base:e,final:this.totalGrade}}toString(e){e=e||"";const t=this.calcTotalGradePoint(),a=this.entries.map((e=>e.toString())).join("，");return 1!=this.factor?`${e}分值：${t.final.toFixed(2)}（${t.base.toFixed(2)} * ${this.factor})，[${a}]`:`${e}分值：${t.final.toFixed(2)}，[${a}]`}detail(){const e=this.entries.map((e=>`[${e.toString()}]\n${e.detail()}\n`)).join("\n");return e}}function R(e,t){let a=new U(t);return a.addEntry(Q(e)),a.addEntry(X(e)),a.addEntry(J(e)),a.addEntry(ee(e)),a.addEntry(te(e)),a.addEntry(z(e)),a.addEntry(ae(e)),a.addEntry(se(e)),a.addEntry(le(e)),a.addEntry(ne(e)),a.addEntry(re(e)),a.addEntry(ie(e)),a.addEntry(oe(e)),a.addEntry(ce(e)),a.addEntry(ue(e)),a}function Q(e){const t=new q("时序分"),a=I.getTotalAtk(e),s=I.getTotalDef(e),l=I.getTotalAgi(e),n=I.getTotalSeriesSpeed(e);0==a&&0==s&&0==l&&0==n||t.log(`自身属性增幅：总攻击${N(a)}，总防御${N(s)}，总轻功${N(l)}，平均系数${N(n)}`);const r=-I.constants["标准敌方场攻"]*e.getValueInc("敌攻"),i=-I.constants["标准敌方场防"]*e.getValueInc("敌防"),c=-I.constants["标准敌方场轻"]*e.getValueInc("敌轻");0==r&&0==i&&0==c||t.log(`敌方属性降幅：攻击${N(r)}，防御${N(i)}，轻功${N(c)}`);const o=e.getValueInc("时序"),u=-e.getValueInc("敌时");0==o&&0==u||t.log(`时序系数：自身时序增加${H(o)}，敌方时序降低${H(u)}`);const f=I.constants["标准时序"],d=I.constants["标准敌方时序"],p=I.constants["时序分值系数"];t.log(`常数：标准时序${f}，标准敌方时序${d}，时序分值系数${p}`);const m=a+s+2*l+n;0!=m&&t.log(`自身属性时序增加值 = 总攻击+总防御+总轻功*2+平均系数 = ${N(a)}+${N(s)}+${N(l)}*2+${N(n)} = ${N(m)}`);const g=(f+m)*(1+o);g!=f&&t.log(`自身最终时序 = (标准时序+属性时序增加值)*(1+时序增加系数) = (${f}+${N(m)})*(1+${H(o)}) = ${N(g)}`);const h=r+i+2*c;0!=h&&t.log(`敌方时序属性降低值 = 攻击降低+防御降低+轻功降低*2 = ${N(r)}+${N(i)}+${N(c)}*2 = ${N(h)}`);const b=(d-h)*(1-u);t.log(`敌方最终时序 = (标准时序-属性时序降低值)*(1-时序降低系数) = (${d}-${N(h)})*(1-${H(u)}) = ${N(b)}`);const $=g/b/(f/d);t.log(`最终时序倍率 = (自身最终时序/标准时序)/(敌方最终时序/标准敌方时序) = (${N(g)}/${f})/(${N(b)}/${d}) = ${H($)}`);const y=($-1)*p;return t.log(`时序分值 = (最终时序倍率-1)*时序分值系数 = (${H($)}-1)*${p} = ${H(y)}`),t.gradePoint=y,t}function Y(e,t){const a=e.getValueInc("裸攻"),s=e.getValueInc("场攻"),l=I.constants["标准裸攻"],n=I.constants["标准场攻"],r=a*l+s*n;0==a&&0==s||(t.log(`属性：自身攻击加成${H(a)}，战场攻击加成${H(s)}；常数：标准自身攻击${N(l)}，标准战场攻击${N(n)}`),t.log(`计算：总攻击增加 = 自身攻击加成*标准自身攻击+战场攻击加成*标准战场攻击 = ${H(a)}*${l}+${H(s)}*${n} = ${N(r)}`));const i=-e.getValueInc("敌防"),c=I.constants["标准敌方场防"],o=i*c;0!=i&&(t.log(`属性：敌方防御减成：${H(i)}，常数：标准敌方防御${c}`),t.log(`计算：敌方防御降低 = 敌方防御减成*标准敌方防御 = ${H(i)}*${c} = ${H(o)}`));const u=e.getValueInc("威力"),f=I.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力加成${H(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系威力攻击增加 = 全系威力加成*标准威力攻击当量 = ${H(u)}*${f} = ${N(d)}`));const p=e.getMainClassValueInc("威力"),m=p*f;p>0&&(t.log(`属性：主系威力加成${H(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系威力攻击增加 = 主系威力加成*标准威力攻击当量 = ${H(p)}*${f} = ${N(m)}`));const g=e.getValue("裸系"),h=e.getValue("场系"),b=e.getValue("攻系"),$=e.getMainClassValue("攻系"),y=I.constants["标准裸主系"],v=I.constants["标准场主系"],k=I.constants["标准副系"],_=1.5*(g*y+(h+b+$)*v),L=1.5*(g*k+h*k+b*k);0==g&&0==h&&0==b&&0==$||(t.log(`属性：自身系数加成${H(g)}，战场系数加成${H(h)}，攻防系数加成${H(b)}，主系攻防系数加成${H($)}；常数：标准主系自身数值${N(y)}，标准主系战场数值${N(v)}，标准副系数值${N(k)}`),t.log(`计算：主系攻击增加 = (自身系数加成*标准主系自身数值+(战场系数加成+攻防系数加成+主系攻防系数加成)*标准主系战场数值)*1.5 = (${H(g)}*${N(y)}+(${H(h)}+${H(b)}+${H($)})*${N(v)})*1.5 = ${N(_)}`),t.log(`计算：副系攻击增加 = (自身系数加成*标准副系数值+(战场系数加成+攻防系数加成)*标准副系数值)*1.5 = (${H(g)}*${N(k)}+(${H(h)}+${H(b)})*${N(k)})*1.5 = ${N(L)}`));const A=r+2*o+d+m+_,x=r+2*o+d+L;return t.log("总攻击公式：总攻击 = 属性攻击+威力攻击+系数攻击+敌方防御降低*2"),t.log(`主系总攻击 = ${N(r)}+(${N(d)}+${N(m)})+${N(_)}+${N(o)}*2 = ${N(A)}`),t.log(`副系总攻击 = ${N(r)}+${N(d)}+${N(L)}+${N(o)}*2 = ${N(x)}`),[A,x]}function X(e){const t=new q("基本攻击分"),[a,s]=Y(e,t),l=I.constants["破防指数系数"],n=I.constants["破防分值系数"],r=I.constants["主系分值权重"];t.log(`分值公式：分值 = 攻击*(1+惩罚系数*攻击)*分值系数*主副系占比；常数：惩罚系数${l}，分值系数${n}，主系权重${r}`);const i=fe(a,l,n)*r,c=fe(s,l,n)*(1-r);return t.log(`主系分值 = ${N(a)}*(1+${l}*${N(a)})*${n}*${H(r)} = ${H(i)}`),t.log(`副系分值 = ${N(s)}*(1+${l}*${N(s)})*${n}*${H(1-r)} = ${H(c)}`),t.gradePoint=i+c,t.log(`总分值 = ${H(i)}+${H(c)} = ${H(t.gradePoint)}`),t}function W(e,t){const a=e.getValueInc("裸防"),s=e.getValueInc("场防"),l=I.constants["标准裸防"],n=I.constants["标准场防"],r=a*l+s*n;0==a&&0==s||(t.log(`属性：自身防御加成${H(a)}，战场防御加成${H(s)}；常数：标准自身防御${N(l)}，标准战场防御${N(n)}`),t.log(`计算：总防御增加 = 自身防御加成*标准自身防御+战场防御加成*标准战场防御 = ${H(a)}*${l}+${H(s)}*${n} = ${N(r)}`));const i=-e.getValueInc("敌攻"),c=I.constants["标准敌方场攻"],o=i*c;0!=i&&(t.log(`属性：敌方攻击减成：${H(i)}，常数：标准敌方攻击${c}`),t.log(`计算：敌方攻击降低 = 敌方攻击减成*标准敌方攻击 = ${H(i)}*${c} = ${H(o)}`));const u=-e.getValueInc("减威"),f=I.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力减成${H(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系减威防御增加 = 全系威力减成*标准威力攻击当量 = ${H(u)}*${f} = ${N(d)}`));const p=-e.getMainClassValueInc("减威"),m=p*f;0!=p&&(t.log(`属性：主系威力减成${H(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系减威防御增加 = 主系威力减成*标准威力攻击当量 = ${H(p)}*${f} = ${N(m)}`));const g=e.getValue("裸系"),h=e.getValue("场系"),b=e.getValue("攻系"),$=e.getMainClassValue("攻系"),y=I.constants["标准裸主系"],v=I.constants["标准场主系"],k=I.constants["标准副系"],_=1.5*(g*y+h*v+(b+$)*v),L=1.5*(g*k+h*k+b*k);0==g&&0==h&&0==b&&0==$||(t.log(`属性：自身系数加成${H(g)}，战场系数加成${H(h)}，攻防系数加成${H(b)}，主系攻防系数加成${H($)}；常数：标准主系自身数值${N(y)}，标准主系战场数值${N(v)}，标准副系数值${N(k)}`),t.log(`计算：主系防御增加 = (自身系数加成*标准主系自身数值+(战场系数加成+攻防系数加成+主系攻防系数加成)*标准主系战场数值)*1.5 = (${H(g)}*${N(y)}+(${H(h)}+${H(b)}+${H($)})*${N(v)})*1.5 = ${N(_)}`),t.log(`计算：副系防御增加 = (自身系数加成*标准副系数值+(战场系数加成+攻防系数加成)*标准副系数值)*1.5 = (${H(g)}*${N(k)}+(${H(h)}+${H(b)})*${N(k)})*1.5 = ${N(L)}`));const A=2*r+o+d+m+_,x=2*r+o+d+L;return t.log("总防御公式：总防御 = 属性防御*2+威力防御+系数防御+敌方攻击降低"),t.log(`主系总防御 = ${N(r)}*2+(${N(d)}+${N(m)})+${N(_)}+${N(o)} = ${N(A)}`),t.log(`副系总防御 = ${N(r)}*2+${N(d)}+${N(L)}+${N(o)} = ${N(x)}`),[A,x]}function J(e){const t=new q("基本防御分"),[a,s]=W(e,t),l=I.constants["减破防指数系数"],n=I.constants["破防分值系数"],r=.2;t.log(`分值公式：分值 = 防御*(1+惩罚系数*防御)*分值系数*主副系占比；常数：惩罚系数${l}，分值系数${n}，主系权重${r}`);const i=fe(a,l,n)*r,c=fe(s,l,n)*(1-r);return t.log(`主系分值 = ${N(a)}*(1+${l}*${N(a)})*${n}*${H(r)} = ${H(i)}`),t.log(`副系分值 = ${N(s)}*(1+${l}*${N(s)})*${n}*${H(1-r)} = ${H(c)}`),t.gradePoint=i+c,t.log(`总分值 = ${H(i)}+${H(c)} = ${H(t.gradePoint)}`),t}function z(e){const t=new q("暴击分"),a=e.getValue("暴击");if(0==a)return null;const s=Y(e,{log:()=>{}});t.log(`攻击属性: 主系攻击${N(s[0])}，副系攻击${N(s[1])}`);const l=I.constants["标准暴击威力"],n=I.constants["破防指数系数"],r=I.constants["破防分值系数"],i=I.constants["主系分值权重"],c=s.map((e=>fe(e,n,r)));t.log(`攻击分值: 主系分值${H(c[0])}，副系分值${H(c[1])}`);let o=0;const u=(e,a,l)=>{t.log(`计算${e}相关属性: ${e}率${H(a)}；常数：标准${e}威力${N(l)}`);const u=s.map((e=>e+l));t.log(`${e}时攻击威力 = 基本攻击威力+标准${e}威力；主系攻击 = ${N(s[0])}+${l} = ${N(u[0])}，副系攻击 = ${N(s[1])}+${l} = ${N(u[1])}`);const f=u.map((e=>fe(e,n,r)));t.log(`${e}时攻击分值计算：主系分值 = 计算攻击分值(${N(u[0])}) = ${H(f[0])}，副系分值 = 计算攻击分值(${N(u[1])}) = ${H(f[1])}`);const d=f.map(((e,t)=>(e-c[t])*a));t.log(`${e}附加分值 = (${e}时攻击分值-基础攻击分值)*${e}率；主系攻击分值 = (${H(f[0])}-${H(c[0])})*${H(a)}=${H(d[0])}，副系攻击分值 = (${H(f[1])} - ${H(c[1])})*${H(a)} = ${H(d[1])}`);const p=d[0]*i+d[1]*(1-i);return t.log(`综合${e}附加分值 = 主系攻击分值*主系分值权重+副系攻击分值*(1-主系分值权重) = ${H(d[0])}*${H(i)}+${H(d[1])}*${H(1-i)} = ${H(p)}`),o+=p,p},f=[];return a>0&&f.push(["暴击分值",u("暴击",a,l)]),t.log(`情景攻击总分 = ${f.map((([e,t])=>`${e}(${H(t)})`)).join(" + ")} = ${H(o)}`),t.gradePoint=o,t}function ee(e){const t=new q("增伤分"),a=e.getValueInc("命中"),s=e.getValueInc("伤害"),l=e.getMainClassValueInc("命中"),n=e.getMainClassValueInc("伤害");t.log(`属性：命中加成${H(a)}，伤害加成${H(s)}, 主系命中加成${H(l)}, 主系伤害加成${H(n)}`);const r=I.getTotalAgi(e),i=-I.constants["标准敌方场轻"]*e.getValueInc("敌轻"),c=I.constants["轻功命中基准值"],o=(r+i)/c;0==r&&0==i||(t.log(`属性计算：自身轻功增加 = ${N(r)}，敌方轻功降低 = ${N(i)}；常数：轻功命中基准值${c}`),t.log(`轻功命中加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${N(r)}+${N(i)})/${c}) = ${H(o)}`));const u=I.constants["命中伤害分值系数"],f=I.constants["主系分值权重"],d=(1+a)*(1+o)*(1+s),p=d*(1+l)*(1+n);t.log(`综合增伤 = (1+命中加成)*(1+轻功命中加成)*(1+伤害加成) = (1+${H(a)})*(1+${H(o)})*(1+${H(s)}) = ${H(d)}`),t.log(`主系增伤 = 综合增伤*(1+主系命中加成)*(1+主系伤害加成) = ${H(d)}*(1+${H(l)})*(1+${H(n)}) = ${H(p)}，副系增伤 = 综合增伤 = ${H(d)}`);const m=p>=1?p-1:1-1/p,g=d>=1?d-1:1-1/d;p<1?t.log(`主系增伤差值(修正) = 1-1/主系增伤 = 1-1/${H(p)} = ${H(m)}`):t.log(`主系增伤差值 = 主系增伤-1 = ${H(p)}-1 = ${H(m)}`),d<1?t.log(`副系增伤差值(修正) = 1-1/副系增伤 = 1-1/${H(d)} = ${H(g)}`):t.log(`副系增伤差值 = 副系增伤-1 = ${H(d)}-1 = ${H(g)}`);const h=m*u*f,b=g*u*(1-f),$=h+b;return t.log(`主系增伤分= 主系增伤差值*命中伤害分值系数*主系分值权重 = ${H(h)}*${u}*${f} = ${H(h)}`),t.log(`副系增伤分= 副系增伤差值*命中伤害分值系数*(1-主系分值权重) = ${H(b)}*${u}*(1-${f}) = ${H(b)}`),t.log(`总增伤分 = 主系增伤分+副系增伤分 = ${H(h)}+${H(b)} = ${H($)}`),t.gradePoint=$,t}function te(e){const t=new q("减伤分"),a=-e.getValueInc("闪避"),s=-e.getValueInc("减伤"),l=-e.getMainClassValueInc("闪避",!0),n=-e.getMainClassValueInc("减伤",!0);t.log(`属性：闪避加成${H(a)}，减伤加成${H(s)}, 主系闪避加成${H(l)}, 主系减伤加成${H(n)}`);const r=I.getTotalAgi(e),i=-I.constants["标准敌方场轻"]*e.getValueInc("敌轻"),c=I.constants["轻功命中基准值"],o=(r+i)/c;0==r&&0==i||(t.log(`属性计算：自身轻功增加 = ${N(r)}，敌方轻功降低 = ${N(i)}；常数：轻功命中基准值${c}`),t.log(`轻功闪避加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${N(r)}+${N(i)})/${c}) = ${H(o)}`));let u=1;const f=[],d=e.getValue("不受击");d>0&&(u*=1-d,f.push({type:"不受攻击",value:H(1-d)}));const p=e.getValue("伤害减半");if(p>0&&(u*=1-p/2,f.push({type:"伤害减半",value:H(1-p/2)})),f.length>0){const e=f.map((e=>`${e.type}：${e.value}`)).join("，");t.log(`特殊减伤因素${e}`),f.length>1?t.log(`特殊减伤期望值 = ${f.map((e=>e.value)).join("*")} = ${H(u)}`):t.log(`特殊减伤期望值 = ${f[0].value}`)}const m=I.constants["命中伤害分值系数"],g=.2,h=(1-a)*(1-o)*(1-s)*u,b=h*(1-l)*(1-n);t.log(`综合减伤 = (1-闪避加成)*(1-轻功闪避加成)*(1-减伤加成)*特殊减伤期望 = (1-${H(a)})*(1-${H(o)})*(1-${H(s)})*${H(u)} = ${H(h)}`),t.log(`主系减伤 = 综合减伤*(1-主系闪避加成)*(1-主系减伤加成) = ${H(h)}*(1-${H(l)})*(1-${H(n)}) = ${H(b)}，副系减伤 = 综合减伤 = ${H(h)}`);const $=b>=1?1-b:1/b-1,y=h>=1?1-b:1/h-1;b<1?t.log(`主系减伤差值(修正) = 1/主系减伤-1 = 1/${H(b)}-1 = ${H($)}`):t.log(`主系减伤差值(修正) = 1-主系减伤 = 1-${H(b)} = ${H($)}`),h<1?t.log(`副系减伤差值(修正) = 1/副系增伤-1 = 1/${H(h)}-1 = ${H(y)}`):t.log(`副系减伤差值(修正) = 1-副系减伤 = 1-${H(h)} = ${H(y)}`);const v=$*m*g,k=y*m*(1-g),_=v+k;return t.log(`主系减伤分= 主系减伤差值*命中伤害分值系数*主系分值权重 = ${H(v)}*${m}*${g} = ${H(v)}`),t.log(`副系减伤分= 副系减伤差值*命中伤害分值系数*(1-主系分值权重) = ${H(k)}*${m}*(1-${g}) = ${H(k)}`),t.log(`总减伤分 = 主系减伤分+副系减伤分 = ${H(v)}+${H(k)} = ${H(_)}`),t.gradePoint=_,t}function ae(e){const t=new q("双击分"),a=e.getValue("双击");if(0==a)return null;const s=I.constants["双击分值系数"];t.log(`属性：双击率 = ${H(a)}，常数：双击分值系数 = ${s}`);const l=de(a,0,s);return t.log(`双击分 = 双击率*双击分值系数 = ${H(a)}*${s} = ${H(l)}`),t.gradePoint=l,t}function se(e){const t=new q("出招分"),a=e.getValue("出招"),s=e.getMainClassValue("出招");t.log(`属性：全系出招率 = ${H(a)}；主系出招率 = ${H(s)}`);const l=me(a,I.castConf,(e=>e[2])),n=me(s,I.castConf,(e=>e[1]));return t.log(`查出招分表：全系出招分(${H(a)}) = ${H(l)}；主系出招分(${H(s)}) = ${H(n)}`),t.gradePoint=l+n,t.log(`出招分 = 全系出招分+主系出招分 = ${H(l)}+${H(n)} = ${H(t.gradePoint)}`),t}function le(e){const t=new q("距离分"),a=e.getValue("移动"),s=e.getValue("射程"),l=e.getValue("范围");t.log(`属性：移动${N(a)}，射程${N(s)}，范围${N(l)}`);const n=ge(a,I.rangeConf,(e=>e[1])),r=ge(s,I.rangeConf,(e=>e[2])),i=ge(l,I.rangeConf,(e=>e[3]));return t.log(`查表计算：移动分(${N(a)}) = ${H(n)}，射程分(${N(s)}) = ${H(r)}，范围分(${N(l)}) = ${H(i)}`),t.gradePoint=n+r+i,t.log(`距离分 = 移动分+射程分+范围分 = ${H(n)}+${H(r)}+${H(i)} = ${H(t.gradePoint)}`),t}function ne(e){const t=new q("吸血分"),a=e.getValue("吸血");if(0==a)return null;const s=I.constants["吸血分值基础"],l=I.constants["吸血分值系数"];t.log(`属性：吸血率${H(a)}，常数：吸血分值基础${s}，吸血分值系数${l}`);const n=de(a,s,l);return t.log(`吸血分 = 吸血率*吸血分值系数+吸血分值基础 = ${H(a)}*${l}+${s} = ${H(n)}`),t.gradePoint=n,t}function re(e){const t=new q("受伤分"),a=e.getValueInc("加受伤");let s=-e.getValueInc("减受伤");if(0==a&&0==s)return null;s>1&&(s=1);const l=I.constants["攻击受伤度分值系数"],n=I.constants["被攻击受伤度分值系数"];t.log(`属性：攻击受伤度${H(a)}，被攻击受伤度${H(s)}，常数：攻击受伤度分值系数${l}，被攻击受伤度分值系数${n}`);const r=a>0?pe(a,l):-pe(a,n);a>0?t.log(`攻击受伤度分 = 攻击受伤度^2*攻击受伤度分值系数 = ${H(a)}^2*${l} = ${H(r)}`):a<0&&t.log(`攻击受伤度分 = -攻击受伤度^2*被攻击受伤度分值系数 = ${H(a)}^2*${n} = ${H(r)}`);const i=s>0?pe(s,n):-pe(s,l);s>0?t.log(`被攻击受伤度分 = 被攻击受伤度^2*被攻击受伤度分值系数 = ${H(s)}^2*${n} = ${H(i)}`):s<0&&t.log(`被攻击受伤度分 = -被攻击受伤度^2*攻击受伤度分值系数 = -${H(s)}^2*${l} = ${H(i)}`);const c=r+i;return t.log(`受伤分 = 攻击受伤度分+被攻击受伤度分 = ${H(r)}+${H(i)} = ${H(c)}`),t.gradePoint=c,t}function ie(e){const t=new q("反伤分"),a=e.getValue("反弹"),s=e.getValue("反震"),l=e.getValue("挪移");if(0==a&&0==s&&0==l)return null;const n=I.constants["伤害反弹分值系数"],r=I.constants["伤害反震分值系数"],i=I.constants["伤害转移分值系数"];t.log(`属性：反弹率${H(a)}，反震率${H(s)}，挪移率${H(l)}，常数：反弹分值系数${n}，反震分值系数${r}，挪移分值系数${i}`);const c=de(a,0,n),o=de(s,0,r),u=de(l,0,i);t.log(`反弹分 = 反弹率*反弹分值系数 = ${H(a)}*${n} = ${H(c)}`),t.log(`反震分 = 反震率*反震分值系数 = ${H(s)}*${r} = ${H(o)}`),t.log(`挪移分 = 挪移率*转移分值系数 = ${H(l)}*${i} = ${H(u)}`);const f=c+o+u;return t.log(`反伤分 = 反弹分+反震分+挪移分 = ${H(c)}+${H(o)}+${H(u)} = ${H(f)}`),t.gradePoint=f,t}function ce(e){const t=new q("免疫分");if(0==e.immunes.length)return null;let a=0;const s=[];return Object.entries(I.immuneConf).forEach((([t,l])=>{e.immunes[t]&&(a+=l,s.push({key:t,value:l}))})),t.log(`免疫条目：${s.map((e=>`${e.key}(${e.value})`)).join("，")}`),s.length>1?t.log(`免疫分 = ${s.map((e=>e.value)).join("+")} = ${H(a)}`):t.log(`免疫分 = ${H(a)}`),t.gradePoint=a,t}function oe(e){const t=new q("异常分");if(0==e.deBuffMakes.length)return null;let a=0;const s=[];if(Object.entries(I.debuffConf).forEach((([t,l])=>{const n=e.deBuffMakes[t];null!=n&&n.forEach((e=>{const n={};"点穴"==t&&(n["square"]=!0);const r=he(e.rate/100,e.round,I.constants["异常概率基础值"],l,n);a+=r,s.push([t,e.rate,`${e.round}回合`,r])}))})),e.deBuffMakes["击退"]){const t=e.deBuffMakes["击退"];t.forEach((e=>{const t=10*(100/(100-e.round)-1),l=t*e.rate/100;a+=l,s.push(["击退",e.rate,`击退${e.round}%行动条`,l])}))}return t.log(`异常条目：${s.map((e=>`${e[0]}#${e[1]}%${e[2]}(${H(e[3])})`)).join("，")}`),s.length>1?t.log(`异常分 = ${s.map((e=>H(e[3]))).join("+")} = ${H(a)}`):t.log(`异常分 = ${H(a)}`),t.gradePoint=a,t}function ue(e){const t=new q("特殊词条分"),a=e.getExtValues();if(0==a.length)return null;let s=0;const l=[];return a.forEach((e=>{const t=e.attrType,a=G[t],n=e.value,r=a.calcGrade(n),i=e.condition;if(i){const e=M[i];if(e){const t=e.factor;r.res*=t,r.cond={name:i,factor:t}}}l.push({key:t,value:n,r:r}),s+=r.res})),l.forEach((e=>{e.r.cond?0!=e.r.base?t.log(`[${e.key}(${e.r.cond.name})](${H(e.r.res)})：数值${H(e.value)}，系数${e.r.factor}，基数${e.r.base}，条件系数${e.r.cond.factor}；分值 = (${H(e.value)}*${H(e.r.factor)}+${H(e.r.base)})*${e.r.cond.factor} = ${H(e.r.res)}`):t.log(`[${e.key}(${e.r.cond.name})](${H(e.r.res)})：数值${H(e.value)}，系数${e.r.factor}，条件系数${e.r.cond.factor}；分值 = (${H(e.value)}*${H(e.r.factor)})*${e.r.cond.factor} = ${H(e.r.res)}`):0!=e.r.base?t.log(`[${e.key}](${H(e.r.res)})：数值${H(e.value)}，系数${e.r.factor}，基数${e.r.base}；分值 = ${H(e.value)}*${H(e.r.factor)}+${H(e.r.base)} = ${H(e.r.res)}`):t.log(`[${e.key}](${H(e.r.res)})：数值${H(e.value)}，系数${e.r.factor}；分值 = ${H(e.value)}*${H(e.r.factor)} = ${H(e.r.res)}`)})),t.gradePoint=s,t}function fe(e,t,a){return e*(1+e*t)*a}function de(e,t,a){return t+e*a}function pe(e,t){return e*e*t}function me(e,t,a){const s=Math.round(100*e);if(s<=0)return 0;let l=t.findIndex((e=>s<e[0]))-1;return l<-1&&(l=t.length-1),a(t[l])}function ge(e,t,a){const s=Math.round(e);if(s<=0)return 0;let l=t.findIndex((e=>s<e[0]))-1,n=a(t[0]),r=0;l<-1&&(l=t.length-1);for(let i=0;i<l;i++)n+=(t[i][0]-r)*a(t[i]),r=t[i][0];return n+=(s-r)*a(t[l]),n>20*a(t[0])&&(n=20*a(t[0])),n}function he(e,t,a,s,l){if(0==e||0==t)return 0;let n=e+a;return n>1&&(n=1),l&&l["square"]&&(n*=n),n*t*s}class be{constructor(e,t){t=t||{},this.skillConfigs={},e.forEach((e=>{this.skillConfigs[e["skillType"]]=e})),this.rangeFactor=t.rangeFactor||1,this.energyGp=t.energyGp||0}}class $e{constructor(e){e&&(this.type=e.type,this.skillType=e.skillType,this.extGrade=null,this.mainAttr=e.mainAttr,this.viceAttr=e.viceAttr,this.teamAttr=e.teamAttr,this.rangeFactor=e.rangeFactor||1,this.energyGp=e.energyGp||0)}calcGrade(){const e={totalGrade:0,mainGp:0,viceGp:0,teamGp:0,extGp:0,otherGp:0};this.extGrade&&(this.extGrade.fixed?(e["extGp"]=Number(this.extGrade.fixed),e["totalGrade"]=Number(this.extGrade.fixed),e["extDesc"]=this.extGrade.desc):this.extGrade.add&&(e["extGp"]=Number(this.extGrade.add),e["totalGrade"]=Number(this.extGrade.add),e["extDesc"]=this.extGrade.desc)),this.mainAttr.isEmpty()||(e["mainGrade"]=R(this.mainAttr),e["mainGp"]=e["mainGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["mainGp"]),this.viceAttr.isEmpty()||(e["viceGrade"]=R(this.viceAttr),e["viceGp"]=e["viceGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["viceGp"]),this.teamAttr.isEmpty()||(e["teamGrade"]=R(this.teamAttr,this.rangeFactor),e["teamGp"]=e["teamGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["teamGp"]),this.energyGp>0&&(e["otherGp"]+=this.energyGp,e["totalGrade"]+=this.energyGp);const t=()=>{let t="",a="",s=[];const l=(e,t)=>{t=Number(t),0!=t&&s.push([e,t.toFixed(2)])};return"光环"===this.type?(a="单体",l("单体分值",e.mainGp),l("光环分值",e.teamGp),t+="光环，"):"防功"===this.type?(l("特技分值",e.mainGp),l("装备分值",e.viceGp),a="特技",t+="防功，"):(a="单体",l("单体分值",e.mainGp)),l("额外分值",e.extGp),l("其他分值",e.otherGp),s.length>1?t+=`综合分值：${e.totalGrade.toFixed(2)}，[${s.map((e=>`${e[0]}：${e[1]}`)).join("，")}]\n`:1==s.length&&(t+=`${s.map((e=>`${e[0]}：${e[1]}`)).join("，")}\n`),e["mainGrade"]&&(t+="==========================================\n",t+=e["mainGrade"].toString(a)+"\n",t+="------------------------\n",t+=e["mainGrade"].detail()),e["viceGrade"]&&(t+="==========================================\n",t+=e["viceGrade"].toString("装备")+"\n",t+="------------------------\n",t+=e["viceGrade"].detail()),e["teamGrade"]&&(t+="==========================================\n",t+=e["teamGrade"].toString("光环")+"\n",t+="------------------------\n",t+=e["teamGrade"].detail()),e["extGp"]&&(t+="==========================================\n",t+=`额外分值：${e["extGp"].toFixed(2)}，${e["extDesc"]}\n`),e["otherGp"]&&(t+="==========================================\n",t+=`其他分值：特技气格折算${e["otherGp"].toFixed(2)}\n`),t};return e["detail"]=t,e}}function ye(e,t){t=t||{};const a=new j,s=new j,l=new j;let n="";if(0===Object.values(e.skillConfigs).length);else if(1===Object.values(e.skillConfigs).length)Object.entries(e.skillConfigs).forEach((([e,s])=>{ve(s,a,"normal",t),"团队天赋"==e?(n="光环",ve(s,l,"team_talent",t)):"团队状态"==e&&(n="光环",ve(s,l,"normal",t))}));else{if(2!==Object.values(e.skillConfigs).length)throw new Error("技能配置数量异常");e.skillConfigs["装备技"]&&e.skillConfigs["状态"]?(n="防功",ve(e.skillConfigs["状态"],a,"normal",t),ve(e.skillConfigs["装备技"],s,"normal",t)):e.skillConfigs["团队天赋"]&&e.skillConfigs["团队状态"]?(n="光环",ve(e.skillConfigs["团队天赋"],a,"normal",t),ve(e.skillConfigs["团队天赋"],l,"team_talent",t),ve(e.skillConfigs["团队状态"],l,"team_buff",t)):console.log("技能配置数量异常",e)}return new $e({type:n,skillType:t.skillType,mainAttr:a,viceAttr:s,teamAttr:l,rangeFactor:e.rangeFactor,energyGp:e.energyGp})}function ve(e,t,a,s){const l=(e,a)=>{a>0&&(s.upFlag&&(a*=2),t.setValue(e,a))},n=(e,a)=>{a>0&&(a*=.01,s.upFlag&&(a*=2),t.setValue(e,a))},r=(e,a)=>{a>0&&(a*=.01,s.upFlag&&(a=2*a-1),t.setValue(e,a))},i=(e,a,l)=>{e&&l>0&&(l*=.01,s.upFlag&&(l*=2),t.setClassValue(e,a,l))},c=(e,a,l)=>{e&&l>0&&(l*=.01,s.upFlag&&(l=2*l-1),t.setClassValue(e,a,l))};if("normal"!=a&&"team_talent"!=a||(r("裸攻",e["bodyAtk"]),r("裸防",e["bodyDef"]),r("裸轻",e["bodyAgi"]),r("场攻",e["battleAtk"]),r("场防",e["battleDef"]),r("场轻",e["battleAgi"]),r("时序",e["battleAsp"]),r("敌攻",e["enemyAtk"]),r("敌防",e["enemyDef"]),r("敌轻",e["enemyAgi"]),r("敌时",e["enemyAsp"]),n("双击",e["doubleHit"]),n("暴击",e["critical"]),l("移动",e["moveDistance"]),l("射程",e["attackDistance"]),l("范围",e["attackRange"]),n("出招",e["castInc"]),i(e["specCastIncType"],"出招",e["specCastInc"])),("normal"==a||"team_buff"==a)&&(r("命中",e["hitInc"]),r("闪避",e["hitDec"]),r("威力",e["powerInc"]),r("减威",e["powerDec"]),r("伤害",e["damageInc"]),r("减伤",e["damageDec"]),c(e["specHitIncType"],"命中",e["specHitInc"]),c(e["specHitDecType"],"闪避",e["specHitDec"]),c(e["specPowerIncType"],"威力",e["specPowerInc"]),c(e["specPowerDecType"],"减威",e["specPowerDec"]),c(e["specDamageIncType"],"伤害",e["specDamageInc"]),c(e["specDamageDecType"],"减伤",e["specDamageDec"]),r("加受伤",e["injuryInc"]),r("减受伤",e["injuryDec"]),n("吸血",e["bloodSuck"]),n("反弹",e["damageCounter"]),n("挪移",e["damageTransfer"]),n("反震",e["damageReflect"]),e["deBuffImmune"]&&""!=e["deBuffImmune"].trim()&&e["deBuffImmune"].split(" ").map((e=>e.trim())).forEach((e=>t.addImmune(e))),e["deBuffMake"]&&""!=e["deBuffMake"].trim())){let a=e["deBuffRate"];s.upFlag&&(a*=2);const l=e["deBuffRound"];e["deBuffMake"].split(" ").map((e=>e.trim())).forEach((e=>t.addDeBuffMake(e,a,l)))}const o=e["ext"];o&&(o["values"]&&o["values"].forEach((e=>{const a=G[e["attr"]],l=e["condition"];if(a){let n=Number(e["value"]);s.upFlag&&(a.hasCalcFlag("pct")?n=2*n-1:n*=2),!a.hasCalcFlag("cmn")||l?t.setExtValue(e["attr"],n,l):t.setValue(e["attr"],n)}})),o["classValues"]&&o["classValues"].forEach((e=>{const a=G[e["attr"]],l=e["type"];if(a){let n=Number(e["value"]);s.upFlag&&(a.hasCalcFlag("pct")?n=2*n-1:n*=2),t.setClassValue(l,e["attr"],n)}})),o["flags"]&&o["flags"].forEach((e=>{const a=G[e];a&&t.setExtValue(e,1)})),o["debuffs"]&&o["debuffs"].forEach((e=>{let a=e["rate"];s.upFlag&&(a*=2),t.addDeBuffMake(e["attr"],100*a,"击退"==e["attr"]?100*e["value"]:e["value"])})),o["immunes"]&&o["immunes"].forEach((e=>{t.addImmune(e)})))}function ke(e){if(0==e)return 3;const t=2*e+1;return(t*t-1)/800}function _e(e,t){return t&&Math.max(.2*(7-e),0),Math.max(.2*(5-e),0)}const Le=e=>(t,a)=>(e=e||{},`${e.prefix||""}${t}${e.suffix||""}${e.symbol}${(100*a).toFixed(0)}%`),Ae=e=>(t,a)=>(e=e||{},`${e.prefix||""}${t}${e.suffix||""}+${a.toFixed(0)}`),xe={"拳掌":"拳系","御剑":"剑系","兵器":"兵系","指腿":"特系","暗毒":"暗系"};function Ce(e){const t=[];let a="";const s=(e,s)=>{e&&""!=e&&(s&&a!==s?(t.push(`${s}${e}`),a=s):t.push(e))};if(""==e.type){const a=Se(e.mainAttr);t.push(a.join("，"))}else if("防功"==e.type){const a=Se(e.mainAttr),s=Se(e.viceAttr);t.push(a.join("，")),t.push(`[装备效果]${s.join("，")}`)}else if("光环"==e.type){const t=Se(e.mainAttr,{type:"attr"}),a=Se(e.mainAttr,{type:"enemyAttr"}),l=Se(e.mainAttr,{type:"feature"}),n=Se(e.mainAttr,{type:"effect"}),r=Se(e.teamAttr,{type:"effect"});t.length>0&&s(t.join("，"),"本方"),l.length>0&&s(l.join("，"),"本方"),"天赋"==e.skillType?(n.length>0&&s(n.join("，"),"自身"),r.length>0&&s(r.join("，"),"队友"),a.length>0&&s(a.join("，"),"敌方")):(n.length>0&&s(n.join("，"),"本方"),a.length>0&&s(a.join("，"),"敌方"))}return t.join("，")}function Se(e,t){t=t||{};const a=t.type||"",s=[],l=t=>{const a=t(e);a&&s.push(...a)};return""!=a&&"attr"!=a||(l(Fe),l(Oe)),"enemyAttr"==a&&l(Ie),""!=a&&"feature"!=a||(l(Ke),l(Be),l(we)),""!=a&&"effect"!=a||(l(Ee),l(Te),l(De),l(Ve),l(Pe),l(Ze),l(Ge),l(Me)),s}function Fe(e){const t=[];return je(t,"攻击",e.getValue("裸攻")),je(t,"防御",e.getValue("裸防")),je(t,"轻功",e.getValue("裸轻")),He(t,Le({symbol:"*",prefix:"基础"}))}function Oe(e){const t=[];return je(t,"攻击",e.getValue("场攻")),je(t,"防御",e.getValue("场防")),je(t,"轻功",e.getValue("场轻")),je(t,"时序",e.getValue("时序")),He(t,Le({symbol:"*",prefix:"战场"}))}function Ie(e){const t=[];return je(t,"攻击",e.getValue("敌攻")),je(t,"防御",e.getValue("敌防")),je(t,"轻功",e.getValue("敌轻")),je(t,"时序",e.getValue("敌时")),He(t,Le({symbol:"*",prefix:""}),{asc:!0})}function Ee(e){const t=[];return je(t,"威力",e.getValue("威力")),je(t,"命中",e.getValue("命中")),je(t,"伤害",e.getValue("伤害")),He(t,Le({symbol:"*",prefix:"武功"}))}function Te(e){const t=[];return I.classes.forEach((a=>{const s=[];je(s,"威力",e.getClassValue(a,"威力")),je(s,"命中",e.getClassValue(a,"命中")),je(s,"伤害",e.getClassValue(a,"伤害")),t.push(...He(s,Le({symbol:"*",prefix:`${xe[a]}武功`})))})),t}function De(e){const t=[];return je(t,"威力",e.getValue("减威")),je(t,"命中",e.getValue("闪避")),je(t,"伤害",e.getValue("减伤")),He(t,Le({symbol:"*",prefix:"被攻击"}),{asc:!0})}function Ve(e){const t=[];return I.classes.forEach((a=>{const s=[];je(s,"威力",e.getClassValue(a,"减威")),je(s,"命中",e.getClassValue(a,"闪避")),je(s,"伤害",e.getClassValue(a,"减伤")),t.push(...He(s,Le({symbol:"*",prefix:`被${xe[a]}攻击`}),{asc:!0}))})),t}function we(e){const t=[];return I.classes.forEach((a=>{je(t,`${xe[a]}出招`,e.getClassValue(a,"出招"))})),Ne(t,Le({symbol:"+"}))}function Be(e){const t=[];return je(t,"暴击",e.getValue("暴击")),je(t,"双击",e.getValue("双击")),je(t,"出招",e.getValue("出招")),He(t,Le({symbol:"+"}))}function Ke(e){const t=[];return je(t,"移动距离",e.getValue("移动")),je(t,"武功移动",e.getValue("射程")),je(t,"杀伤范围",e.getValue("范围")),He(t,Ae())}function Pe(e){const t=[];return je(t,"攻击受伤度",e.getValue("加受伤")),je(t,"被攻击受伤度",e.getValue("减受伤")),Ne(t,Le({symbol:"*"}))}function Ze(e){const t=[];return je(t,"吸血",e.getValue("吸血")),je(t,"反震",e.getValue("反震")),je(t,"反弹",e.getValue("反弹")),je(t,"挪移",e.getValue("挪移")),He(t,Le({symbol:"+"}))}function Ge(e){const t=[];I.debuffTags.forEach((a=>{e.deBuffMakes[a]&&e.deBuffMakes[a].forEach((e=>{t.push([a,e.rate,e.round])}))})),e.deBuffMakes["随机"]&&e.deBuffMakes["随机"].forEach((e=>{t.push(["随机不利状态",e.rate,e.round])})),t.sort(((e,t)=>e[2]!=t[2]?t[2]-e[2]:t[1]-e[1]));const a=[];let[s,l]=[0,1];while(s<t.length){if(l>=t.length||t[l][2]!=t[s][2]||t[l][1]!=t[s][1]){const e=t.slice(s,l).map((e=>e[0])).join("/");a.push(`攻击造成${e}${t[s][2]}回合+${t[s][1].toFixed(0)}%`),s=l}l++}return a}function Me(e){if(0==Object.values(e.immunes).length)return[];const t=[];e.immunes["全部"]&&t.push("持续不利状态"),I.immuneTags.forEach((a=>{e.immunes[a]&&t.push(a)}));const a=t.join("/");return[`免疫${a}`]}function je(e,t,a){0!=a&&e.push({name:t,value:a})}function Ne(e,t){const a=[];return e.forEach((e=>{a.push(t(e.name,e.value))})),a}function He(e,t,a){a=a||{};const s=a.asc||!1;e.sort(((e,t)=>s?e.value-t.value:t.value-e.value));const l=[];let[n,r]=[0,1];while(n<e.length){if(r>=e.length||e[r].value!=e[n].value){const a=e.slice(n,r).map((e=>e.name)).join("/");l.push(t(a,e[n].value)),n=r}r++}return l}const qe=["全部","受伤","中毒","点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","暴击","双击","破甲","突防","反击","杀命","杀内","杀体","杀气","秒杀"],Ue=["点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","随机"],Re={"自身攻击":{key:"裸攻",confKey:"bodyAtk",csvKey:"裸攻加成",mul:!0,pct:!0},"自身防御":{key:"裸防",confKey:"bodyDef",csvKey:"裸防加成",mul:!0,pct:!0},"自身轻功":{key:"裸轻",confKey:"bodyAgi",csvKey:"裸轻加成",mul:!0,pct:!0},"战场攻击":{key:"场攻",confKey:"battleAtk",csvKey:"c攻击加成",mul:!0,pct:!0},"战场防御":{key:"场防",confKey:"battleDef",csvKey:"c防御加成",mul:!0,pct:!0},"战场轻功":{key:"场轻",confKey:"battleAgi",csvKey:"c轻功加成",mul:!0,pct:!0},"行动时序":{key:"时序",confKey:"battleAsp",csvKey:"c加行动次序",mul:!0,pct:!0},"敌方攻击":{key:"敌攻",confKey:"enemyAtk",csvKey:"c攻击对敌加成",mul:!0,pct:!0,onlyAura:!0},"敌方防御":{key:"敌防",confKey:"enemyDef",csvKey:"c防御对敌加成",mul:!0,pct:!0,onlyAura:!0},"敌方轻功":{key:"敌轻",confKey:"enemyAgi",csvKey:"c轻功对敌加成",mul:!0,pct:!0,onlyAura:!0},"敌方时序":{key:"敌时",confKey:"enemyAsp",csvKey:"次序对敌加成",mul:!0,pct:!0,onlyAura:!0},"双击":{key:"双击",confKey:"doubleHit",csvKey:"d加双击",pct:!0},"暴击":{key:"暴击",confKey:"critical",csvKey:"d加暴击",pct:!0},"移动距离":{key:"移动",confKey:"moveDistance",csvKey:"加移动格数"},"攻击距离":{key:"射程",confKey:"attackDistance",csvKey:"加攻击移动"},"杀伤范围":{key:"范围",confKey:"attackRange",csvKey:"加杀伤范围"},"命中":{key:"命中",confKey:"hitInc",csvKey:"6命中加成",mul:!0,pct:!0,auraSelf:!0},"主系命中":{key:"命中",confKey:"specHitInc",csvKey:"6专系命中加成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"闪避":{key:"闪避",confKey:"hitDec",csvKey:"7命中减成",mul:!0,pct:!0,auraSelf:!0},"主系闪避":{key:"闪避",confKey:"specHitDec",csvKey:"7专系命中减成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"威力":{key:"威力",confKey:"powerInc",csvKey:"威力加成",mul:!0,pct:!0,auraSelf:!0},"主系威力":{key:"威力",confKey:"specPowerInc",csvKey:"专系威力加成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"减威":{key:"减威",confKey:"powerDec",csvKey:"威力减成",mul:!0,pct:!0,auraSelf:!0},"主系减威":{key:"减威",confKey:"specPowerDec",csvKey:"专系威力减成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"伤害":{key:"伤害",confKey:"damageInc",csvKey:"伤害加成",mul:!0,pct:!0,auraSelf:!0},"主系伤害":{key:"伤害",confKey:"specDamageInc",csvKey:"专系伤害加成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"减伤":{key:"减伤",confKey:"damageDec",csvKey:"伤害减成",mul:!0,pct:!0,auraSelf:!0},"主系减伤":{key:"减伤",confKey:"specDamageDec",csvKey:"专系伤害减成",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"出招":{key:"出招",confKey:"castInc",csvKey:"大招触发概率加成",pct:!0},"主系出招":{key:"出招",confKey:"specCastInc",csvKey:"专系大招触发加成概率",pct:!0,mainClass:!0},"加受伤度":{key:"加受伤",confKey:"injuryInc",csvKey:"内伤加成",mul:!0,pct:!0,auraSelf:!0},"减受伤度":{key:"减受伤",confKey:"injuryDec",csvKey:"内伤减成",mul:!0,pct:!0,auraSelf:!0},"吸血":{key:"吸血",confKey:"bloodSuck",csvKey:"加攻击吸血",pct:!0,auraSelf:!0},"免疫":{type:"combobox",items:qe,wide:10,auraSelf:!0},"异常":{type:"combobox",items:Ue,wide:8,auraSelf:!0},"异常概率":{confKey:"deBuffRate",csvKey:"8造成异常概率",pct:!0,auraSelf:!0},"异常回合":{confKey:"deBuffRound",csvKey:"8造成异常回合",auraSelf:!0},"反弹":{key:"反弹",confKey:"damageCounter",csvKey:"反弹伤害",pct:!0,auraSelf:!0},"挪移":{key:"挪移",confKey:"damageTransfer",csvKey:"转移伤害",pct:!0,auraSelf:!0},"反震":{key:"反震",confKey:"damageReflect",csvKey:"反震伤害",pct:!0,auraSelf:!0},defValue(e){const t=this[e];return t?t.items?[]:t.mul?t.pct?100:1:0:0}};class Qe{constructor(){Object.keys(Re).forEach((e=>{this[e]=Re.defValue(e)}))}toAttrEntry(e){e=e||{};const t=new j,a=e.mode,s=e.teamAttr;if("ignoreAll"==a)return t;let l=this;return"useTeam"==a&&s&&(l=s),Object.entries(l).forEach((([n,r])=>{const i=Re[n];if(!i)return;"decideTeam"!=a||i.auraSelf||(r=s[n]);const c=Re.defValue(n);if(r!=c)if("异常"!==n)if("免疫"!==n)if(r=Number(r),i.pct&&(r/=100),i.mainClass){if("无"!=e.classType){const a=e.classType;t.setClassValue(a,i.key,r)}}else t.setValue(i.key,r);else r.forEach((e=>{t.addImmune(e)}));else{const e=l["异常回合"],a=l["异常概率"];e>0&&a>0&&r.forEach((s=>{t.addDeBuffMake(s,Number(a),Number(e))}))}})),t}match(e,t){return"talent"===e?!t.auraSelf:"buff"!==e||t.auraSelf}importConfig(e,t){t=t||{};const a=t.type||"";Object.entries(Re).forEach((([t,s])=>{if(this.match(a,s)&&s.confKey){const a=e[s.confKey];a>0&&(this[t]=a)}})),this.match(a,Re["异常"])&&""!=e["deBuffMake"]&&(this["异常"]=e["deBuffMake"].split(" ").map((e=>e.trim()))),this.match(a,Re["免疫"])&&""!=e["deBuffImmune"]&&(this["免疫"]=e["deBuffImmune"].split(" ").map((e=>e.trim())))}exportConfig(e){e=e||{};const t=e.type||"",a={};return Object.entries(Re).forEach((([s,l])=>{if(this.match(t,l)&&l.csvKey){const t=this[s];if(t>0&&t!=Re.defValue(s))switch(a[l.csvKey]=t,l.key){case"主系威力":a["专系加威力"]=e["mainClass"];break;case"主系命中":a["专系加命中"]=e["mainClass"];break;case"主系伤害":a["专系加伤害"]=e["mainClass"];break;case"主系减威":a["专系减威力"]=e["mainClass"];break;case"主系闪避":a["专系减命中"]=e["mainClass"];break;case"主系减伤":a["专系减伤害"]=e["mainClass"];break;case"主系出招":a["专系大招触发加成"]=e["mainClass"];break}}})),this.match(t,Re["异常"])&&this["异常"].length>0&&(a["8造成异常"]=this["异常"].join(" ")),this.match(t,Re["免疫"])&&this["免疫"].length>0&&(a["8免疫异常"]=this["免疫"].join(" ")),a}}class Ye{constructor(e){this.base={name:"新天赋",id:0,round:4,type:"天赋",classType:"无",buffTurn:0,energyCost:0,isAura:!1,auraRange:0,auraEffSelf:"",auraEffEnemy:""},this.mainAttr=new Qe,this.auraAttr=new Qe,e&&(Object.assign(this.base,e.base),Object.assign(this.mainAttr,e.mainAttr),Object.assign(this.auraAttr,e.auraAttr))}mainMode(){return this.base.isAura?"天赋"==this.base.type?"decideTeam":"useTeam":""}auraMode(){return this.base.isAura?"":"ignoreAll"}toAttrGroup(){const e=this.base.isAura?"光环":"",t=this.mainAttr.toAttrEntry({teamAttr:this.auraAttr,classType:this.base.classType,mode:this.mainMode()}),a=this.auraAttr.toAttrEntry({classType:this.base.classType,mode:this.auraMode()}),s=new j,l=this.base.isAura?ke(this.base.auraRange):0,n="特技"==this.base.type?_e(this.base.energyCost,this.base.isAura):0;return new $e({type:e,skillType:this.base.type,mainAttr:t,teamAttr:a,viceAttr:s,rangeFactor:l,energyGp:n})}calcGrade(){const e=this.toAttrGroup(),t=e.calcGrade();return t["desc"]=Ce(e),t}importConfig(e,t){if(e){this.base.name=e.name,this.base.id=e.id,this.base.type="7"==e.type?"天赋":"特技",this.base.isAura=null!=t.find((e=>"团队天赋"==e.skillType||"团队状态"==e.skillType)),this.base.isAura&&(this.base.auraRange=e["attr_selfRange"],t.forEach((e=>{""!=e.selfAdv&&(this.base.auraEffSelf=e.selfAdv),""!=e.enemyAdv&&(this.base.auraEffEnemy=e.enemyAdv)})));const a=t.find((e=>"状态"==e.skillType||"团队状态"==e.skillType));this.base.buffTurn=a?a["round"]:0,this.base.energyCost="特技"==this.base.type?e["attr_costEng"]:0,""==this.base.energyCost&&(this.base.energyCost=0);const s=[];t.forEach((e=>{const t=[e["specHitIncType"],e["specHitDecType"],e["specDamageIncType"],e["specDamageIncType"],e["specPowerIncType"],e["specPowerDecType"],e["specCastIncType"]];t.forEach((e=>{""!=e&&s.push(e)}))})),this.base.classType=s.length>0?s[0]:"无"}if(t)if(1==t.length)"团队天赋"==t[0].skillType?(this.mainAttr.importConfig(t[0],{type:"buff"}),this.auraAttr.importConfig(t[0],{type:"talent"})):"团队状态"==t[0].skillType?this.auraAttr.importConfig(t[0]):this.mainAttr.importConfig(t[0]);else if(2==t.length){const e=t.find((e=>"团队天赋"==e.skillType)),a=t.find((e=>"团队状态"==e.skillType));if(!e||!a)throw new Error("天赋配置错误");this.mainAttr.importConfig(e,{type:"buff"}),this.auraAttr.importConfig(e,{type:"talent"}),this.auraAttr.importConfig(a,{type:"buff"})}}exportSkill(){const e=[],t=()=>{const e={"1技能名":this.base.name,"技能id":this.base.id,"2技能类型":"","3状态回合":this.base.buffTurn>0?this.base.buffTurn:"","4对己方有利":this.base.auraEffSelf,"4对敌方有利":this.base.auraEffEnemy,"裸攻加成":"","裸防加成":"","裸轻加成":"","c攻击加成":"","c防御加成":"","c轻功加成":"","c加行动次序":"","c攻击对敌加成":"","c防御对敌加成":"","c轻功对敌加成":"","次序对敌加成":"","d加双击":"","d加暴击":"","加移动格数":"","加攻击移动":"","加杀伤范围":"","6命中加成":"","6专系加命中":"","6专系命中加成":"","7命中减成":"","7专系减命中":"","7专系命中减成":"","威力加成":"","专系加威力":"","专系威力加成":"","威力减成":"","专系减威力":"","专系威力减成":"","伤害加成":"","专系加伤害":"","专系伤害加成":"","伤害减成":"","专系减伤害":"","专系伤害减成":"","大招触发概率加成":"","专系大招触发加成":"","专系大招触发加成概率":"","内伤加成":"","内伤减成":"","加攻击吸血":"","8免疫异常":"","8造成异常":"","8造成异常概率":"","8造成异常回合":"","反弹伤害":"","转移伤害":"","反震伤害":"","9其它说明":""};return e};if(this.base.isAura){if("天赋"==this.base.type){const a=t();a["2技能类型"]="团队天赋",Object.assign(a,this.auraAttr.exportConfig({type:"talent",mainClass:this.base.classType})),Object.assign(a,this.mainAttr.exportConfig({type:"buff",mainClass:this.base.classType}));const s=t();s["2技能类型"]="团队状态",Object.assign(s,this.auraAttr.exportConfig({type:"talent",mainClass:this.base.classType})),Object.assign(s,this.auraAttr.exportConfig({type:"buff",mainClass:this.base.classType})),e.push(a),e.push(s)}else if("特技"==this.base.type){const a=t();a["2技能类型"]="团队状态",Object.assign(a,this.auraAttr.exportConfig({mainClass:this.base.classType})),e.push(a)}}else{const a=t();"天赋"==this.base.type?a["2技能类型"]="天赋":"特技"==this.base.type&&(a["2技能类型"]="状态"),Object.assign(a,this.mainAttr.exportConfig({mainClass:this.base.classType})),e.push(a)}return e}}function Xe(e){const t=u(e),a=h(e)||[];if(!t||"7"!=t.type&&"8"!=t.type)return null;const s=new Ye;return s.importConfig(t,a),s}const We=()=>({customSKills:[]}),Je={num:e=>e.customSKills.length},ze={async updateCustomSkill({commit:e},t){await e("updateCustomSkill",t),await e("saveCustomSkills")},async deleteCustomSkill({commit:e},t){await e("deleteCustomSkill",t),await e("saveCustomSkills")},async loadCustomSkills({commit:e}){await e("loadCustomSkills")}},et={updateCustomSkill(e,{name:t,skill:a}){const s=e.customSKills.findIndex((e=>e.name===t));-1===s?e.customSKills.push({name:t,skill:a}):e.customSKills[s].skill=a},deleteCustomSkill(e,{name:t}){const a=e.customSKills.findIndex((e=>e.name===t));e.customSKills.splice(a,1)},saveCustomSkills(e){y("customSkills",e.customSKills)},loadCustomSkills(e){const t=v("customSkills");t&&t.length>0&&(e.customSKills=t.map((e=>({name:e.name,skill:new Ye(e.skill)}))))}};var tt={namespaced:!0,state:We,getters:Je,actions:ze,mutations:et};function at(e){const t={};return Object.values(e).forEach((e=>{t[e.suitKey]=e})),t}function st(e){const t={};return e.forEach((e=>{void 0==t[e["skillId"]]&&(t[e["skillId"]]=[]),t[e["skillId"]].push(e)})),t}function lt(e){const t={};return e.forEach((e=>{t[e.skillId]=e})),t}s.ZP.use(l.ZP);var nt=new l.ZP.Store({state:{CurVersion:"",SupportedVersions:[],LoadingCount:0,HeroSource:{},ItemSource:{},SkillSource:{},SuitSource:{},SkillConfigSource:[],SkillExtConfigSource:{},TitleConfigSource:[],EventSource:{},Const:{},SuitIndex:{},SkillConfigIndex:{},TitleIndex:{}},getters:{isReady(e){return 0===e.LoadingCount}},mutations:{resetLoading(e){e.LoadingCount=9},loadingOne(e){e.LoadingCount--},setVersion(e,t){e.CurVersion=c(t)},setHeroSource(e,t){e.HeroSource=t},setItemSource(e,t){e.ItemSource=t},setSkillSource(e,t){e.SkillSource=t},setSuitSource(e,t){e.SuitSource=t,e.SuitIndex=at(t)},setSkillConfigSource(e,t){e.SkillConfigSource=t,e.SkillConfigIndex=st(t)},setTitleConfigSource(e,t){e.TitleConfigSource=t,e.TitleIndex=lt(t)},setSkillExtConfigSource(e,t){e.SkillExtConfigSource=t},setEventSource(e,t){e.EventSource=t},setConst(e,t){e.Const=t},bindSkillExt(){b()}},actions:{async initStore({commit:e,dispatch:t,state:a}){if(e("resetLoading"),0===a.SupportedVersions.length){const e=await i("versions");a.SupportedVersions=e,a.CurVersion=a.SupportedVersions[0]}await Promise.all([i("hero",a.CurVersion).then((t=>e("setHeroSource",t))).then((()=>e("loadingOne"))),i("item",a.CurVersion).then((t=>e("setItemSource",t))).then((()=>e("loadingOne"))),i("skill",a.CurVersion).then((t=>e("setSkillSource",t))).then((()=>e("loadingOne"))),i("suit",a.CurVersion).then((t=>e("setSuitSource",t))).then((()=>e("loadingOne"))),i("skill_config",a.CurVersion).then((t=>e("setSkillConfigSource",t))).then((()=>e("loadingOne"))),i("title_config",a.CurVersion).then((t=>e("setTitleConfigSource",t))).then((()=>e("loadingOne"))),i("event",a.CurVersion).then((t=>e("setEventSource",t))).then((()=>e("loadingOne"))),i("skill_ext").then((t=>e("setSkillExtConfigSource",t))).then((()=>e("loadingOne"))),i("const").then((t=>e("setConst",t))).then((()=>e("loadingOne"))),t("customSkill/loadCustomSkills")]),e("bindSkillExt")}},modules:{customSkill:tt}}),rt=a(1705);s.ZP.use(rt.Z);var it=new rt.Z({}),ct=a(8345),ot=function(){var e=this,t=e._self._c;return t("div",{staticClass:"home"},[t("HelloWorld")],1)},ut=[],ft=a(266),dt=a(2118),pt=a(1713),mt=function(){var e=this,t=e._self._c;return t(dt.Z,[t(pt.Z,{staticClass:"text-center"},[t(ft.Z,{staticClass:"mb-4"},[t("h1",{staticClass:"display-2 font-weight-bold mb-3"},[e._v(" 金书红颜录数据查看器 ")])]),t(ft.Z,{staticClass:"mb-5",attrs:{cols:"12"}},[t("h2",{staticClass:"headline font-weight-bold mb-3"},[e._v(" 数据查看 ")]),t(pt.Z,{attrs:{justify:"center"}},e._l(e.dataViews,(function(a,s){return t("router-link",{key:s,staticClass:"subheading mx-3",attrs:{to:a.to}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],1)},gt=[],ht={name:"HelloWorld",data:()=>({dataViews:[{text:"人物",to:"/hero"},{text:"物品",to:"/item"},{text:"套装",to:"/suit"},{text:"武功",to:"/skill"},{text:"武功数值",to:"/skill-config"}]})},bt=ht,$t=a(1001),yt=(0,$t.Z)(bt,mt,gt,!1,null,null,null),vt=yt.exports,kt={name:"HomeView",components:{HelloWorld:vt}},_t=kt,Lt=(0,$t.Z)(_t,ot,ut,!1,null,null,null),At=Lt.exports,xt=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},Ct=[],St=a(626),Ft=a(3011),Ot=function(){var e=this,t=e._self._c;return t(dt.Z,{staticStyle:{width:"95%","min-width":"95%",overflow:"auto"},attrs:{fluid:"","grid-list-md":""}},[t(Ft.Z,{attrs:{"center-active":""},on:{change:e.tabChange}},e._l(e.tabs,(function(a){return t(St.Z,{key:a.value},[e._v(" "+e._s(a.title)+" ")])})),1),t("DataPage",{attrs:{"headers-source":e.headersSource,"items-source":e.itemsSource,mapper:e.mapper,"header-labels":e.headerLabels,"header-filter":e.headerFilter,"data-filter":e.dataFilter,"extra-filters":e.extraFilters}})],1)},It=[],Et=a(6797),Tt=a(9582),Dt=a(4886),Vt=a(4127),wt=a(8242),Bt=a(3863),Kt=a(255),Pt=a(2348),Zt=a(400),Gt=a(1214),Mt=a(7423),jt=a(7808),Nt=a(6072),Ht=function(){var e=this,t=e._self._c;return t(dt.Z,{staticStyle:{width:"fit-content","min-width":"100%"}},[t(Gt.Z,{attrs:{flat:"",accordion:""},model:{value:e.option,callback:function(t){e.option=t},expression:"option"}},[t(Kt.Z,[t(Zt.Z,[e._v(" 选项 ")]),t(Pt.Z,[e._l(e.extraFilters,(function(a){return t("div",{key:a.label},[t(Tt.Z,{attrs:{flat:""}},[t(Dt.EB,{staticClass:"text-subtitle-2"},[e._v(" "+e._s(a.label)+" ")]),t(Dt.ZB,["select"===a.type?t(wt.Z,{attrs:{column:"",mandatory:"","active-class":"primary--text text--accent-4"},model:{value:a.selected,callback:function(t){e.$set(a,"selected",t)},expression:"filter.selected"}},e._l(a.value,(function(a){return t(Vt.Z,{key:a,attrs:{outlined:"",value:a}},[e._v(" "+e._s(a)+" ")])})),1):e._e(),"multiSelect"===a.type?t(wt.Z,{attrs:{column:"",multiple:"","active-class":"primary--text text--accent-4"},model:{value:a.selected,callback:function(t){e.$set(a,"selected",t)},expression:"filter.selected"}},e._l(a.value,(function(a){return t(Vt.Z,{key:a,attrs:{outlined:"",value:a}},[e._v(" "+e._s(a)+" ")])})),1):e._e()],1)],1)],1)})),t(Tt.Z,{attrs:{flat:""}},[e.selectedLabels.length>0?t(Dt.EB,{staticClass:"text-subtitle-2"},[e._v(" 表头筛选 ")]):e._e(),t(Dt.ZB,[t(wt.Z,{attrs:{column:"",multiple:"","active-class":"primary--text text--accent-4"},model:{value:e.selectedLabels,callback:function(t){e.selectedLabels=t},expression:"selectedLabels"}},e._l(e.headerLabels,(function(a){return t(Vt.Z,{key:a.value,attrs:{outlined:""}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],2)],1)],1),t(jt.Z,{staticClass:"mb-2",staticStyle:{"max-width":"100%"},attrs:{"append-icon":"mdi-magnify",label:"搜索","single-line":"","hide-details":"",clearable:""},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}}),t("div",{staticStyle:{"max-width":"100%",overflow:"scroll"}},[t("div",{staticStyle:{width:"max-content"}},[t(Bt.Z,{staticClass:"elevation-1 table",attrs:{dense:"","multi-sort":"","show-group-by":"","footer-props":{"items-per-page-options":[10,20,50,100,-1]},"calculate-widths":!0,headers:e.headers,items:e.items,"items-per-page":50,search:e.search},scopedSlots:e._u([e._l(e.slotCols,(function(a){return{key:`item.${a.name}`,fn:function({item:s}){return["searchable"==a.type&&s[`${a.name}`]?t("a",{key:`${a.name}_${s["id"]}`,on:{click:e.doSearch}},[e._v(e._s(s[`${a.name}`]))]):e._e(),"ext"==a.type&&s[`${a.name}`]?t("a",{key:`${a.name}_${s["id"]}`,on:{click:function(t){return e.extClick(t,s[`${a.name}_ext`])}}},[e._v(e._s(s[`${a.name}`]))]):e._e()]}}}))],null,!0)})],1)]),t(Et.Z,{attrs:{inset:""},model:{value:e.sheet,callback:function(t){e.sheet=t},expression:"sheet"}},[t(Mt.Z,{staticClass:"text-center"},[t("div",{staticStyle:{overflow:"scroll",height:"fit-content"}},[t(Nt.Z,{attrs:{rows:"12",readonly:"",filled:"",outlined:"","hide-details":""},model:{value:e.sheetContext,callback:function(t){e.sheetContext=t},expression:"sheetContext"}})],1)])],1)],1)},qt=[];function Ut(e){return t=>{let a=!0;return e&&e.forEach((e=>{e.selected&&(a=a&&e.filterFunc(e.selected,t))})),a}}function Rt(e){let t=[];return e.forEach(((e,a)=>{e.selected&&t.push(a)})),t}var Qt={name:"DataPage",data(){return{search:"",option:0,sheet:!1,sheetContext:"",selectedLabels:Rt(this.headerLabels)}},computed:{headers(){return this.headersSource.filter(this.headerFilter).filter((e=>!e.label||this.selectedLabels.includes(this.headerLabels.findIndex((t=>t.value==e.label)))))},items(){return this.$store.getters["isReady"]?this.itemsSource.map(this.mapper).filter(this.dataFilter).filter(Ut(this.extraFilters)):[]},slotCols(){return this.headers.filter((e=>e.searchable||e.ext)).map((e=>({name:e.value,type:e.searchable?"searchable":"ext"})))}},methods:{doSearch(e){this.search=e.target.innerText},extClick(e,t){this.sheetContext=t(),this.sheet=!0}},props:{headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function,headerFilter:{Function:Function,default:()=>()=>!0},dataFilter:{Function:Function,default:()=>()=>!0},extraFilters:Array}},Yt=Qt,Xt=(0,$t.Z)(Yt,Ht,qt,!1,null,"810484f2",null),Wt=Xt.exports,Jt={name:"TabDataPage",data(){return{selectedGroup:this.tabs.length>0?this.tabs[0].value:"",headerFilter:e=>"ALL"==e.group||e.group.split("|").includes(this.selectedGroup),dataFilter:e=>e.tabGroup.split("|").includes(this.selectedGroup)}},computed:{selectedTab(){return this.tabs.find((e=>e.value==this.selectedGroup))},searchableCol(){return this.headers.filter((e=>e.searchable)).map((e=>e.value))},extraFilters(){return this.selectedTab.dataFilters}},methods:{tabChange(e){const t=this.tabs[e];this.selectedGroup=t.value,this.$emit("tabChange",t.value)}},props:{tabs:Array,headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function},components:{DataPage:Wt}},zt=Jt,ea=(0,$t.Z)(zt,Ot,It,!1,null,"28fd8784",null),ta=ea.exports;function aa(e,t,a,s,l){return{group:e,label:t,text:a,value:s,groupable:!1,...l}}function sa(e,t){return t.has(e)?t.get(e):e}function la(e){return e>0?"是":""}const na=new Map([[0,"男"],[1,"女"],[2,"妖"],[3,"非男"],[-1,""]]);function ra(e){return sa(e,na)}const ia=new Map([[1,"慕容世家"],[2,"大理段氏"],[3,"黄金家族"],[4,"天波杨府"],[6,"爱新觉罗"],[7,"凤阳朱氏"],[0,""],[-1,""]]);function ca(e){return sa(e,ia)}const oa=new Map([[1,"峨眉派"],[2,"武当派"],[3,"逍遥派"],[4,"丐帮"],[5,"桃花岛"],[6,"日月教"],[7,"华山派"],[8,"明教"],[9,"古墓派"],[0,""],[-1,""]]);function ua(e){return sa(e,oa)}const fa=new Map([[-1,""],[0,"武器"],[1,"防具"],[2,"骑宠"]]);function da(e){return sa(e,fa)}const pa=new Map([[0,"阴"],[1,"阳"],[2,"调和"]]);function ma(e){return sa(e,pa)}function ga(e){return-1==e||2==e?"":sa(e,pa)}function ha(e){return 2==e?"调和":0==e||-1==e?"":e}function ba(e){return 0==e?"":1==e?"左右互搏":2==e?"双手":e}const $a=new Map([[1,"内伤"],[2,"虚弱"],[3,"盲目"],[4,"外伤"],[5,"剧毒"],[6,"厌食"],[7,"定身"],[8,"点穴"],[9,"封气"],[10,"冰封"],[11,"封招"],[100,"随机"]]);function ya(e){return 0==e?"":100==e?"解除全部":e<0?"造成"+sa(-e,$a):"解除"+sa(e,$a)}const va=new Map([[0,"剧情"],[1,"装备"],[2,"秘籍"],[3,"药品"],[4,"暗器"]]);function ka(e){return sa(e,va)}const _a=new Map([[0,"暗毒"],[1,"拳掌"],[2,"御剑"],[3,"兵器"],[4,"指腿"],[5,"内功"],[6,"轻功"],[7,"天赋"],[8,"特技"]]);function La(e){return sa(e,_a)}const Aa=new Map([[0,""],[1,"1级"],[2,"2级"],[3,"3级"],[4,"4级"],[5,"5级"],[6,"特殊"],[7,"防功"]]);function xa(e){return sa(e,Aa)}const Ca=new Map([[0,"伤害"],[1,"杀伤内力"],[2,"治疗"],[3,"恢复内力"]]);function Sa(e){return sa(e,Ca)}const Fa=new Map([[0,"点"],[1,"线"],[2,"十"],[3,"面"],[4,"菱"],[5,"全"],[6,"自"],[7,"田"],[8,"井"],[9,"米"],[10,"角"],[11,"楔"],[12,"卐"]]);function Oa(e){return sa(e,Fa)}function Ia(e,t){const a=t(e);return a?`[${a["id"]}]${a["name"]}`:e}function Ea(e){return-1==e?"":Ia(e,o)}function Ta(e){return-1==e||0==e?"":Ia(e,u)}function Da(e){return-1==e||0==e?"":Ia(e,d)}const Va=[{title:"武功秘籍",value:"BOOK",dataFilters:[{type:"select",label:"秘籍种类",value:["拳掌","御剑","兵器","指腿","暗毒","内功","轻功","制药","特殊","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;if(0!=t.prd_mtl)return"制药"==e;if(t.targetSkill){const a=f(t.targetSkill),s=La(a.type);return s==e}return"特殊"==e}}]},{title:"神兵宝甲",value:"EQUIP",dataFilters:[{type:"select",label:"装备位置",value:["武器","防具","骑宠","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.position==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"灵丹妙药",value:"MEDIC"},{title:"伤人暗器",value:"THROWN"},{title:"剧情物品",value:"STORY"}],wa={targetSkill:Ta,req_hero1:Ea,req_hero2:Ea,prd_mtl:Da,prd_item1:Da,prd_item2:Da,prd_item3:Da,prd_item4:Da,useSkill:Ta,type:ka,req_gender:ra,req_family:ca,req_party:ua,req_mpKind:ga,attr_mpKind:ha,position:da,debuff_type:ya,flag_newbie:la,flag_forge:la},Ba={0:"STORY",1:"EQUIP",2:"BOOK",3:"MEDIC",4:"THROWN"},Ka=[aa("ALL","","序号","id",{align:"start"}),aa("ALL","","名称","name"),aa("EQUIP","","装备位置","position"),aa("BOOK","","练出武功","targetSkill"),aa("BOOK","","级别","level"),aa("ALL","desc","物品说明","desc"),aa("BOOK","req","需内力性质","req_mpKind",{searchable:!0}),aa("BOOK|EQUIP","req","需性别","req_gender",{searchable:!0}),aa("BOOK|EQUIP","req","需血族","req_family",{searchable:!0}),aa("BOOK|EQUIP","req","需门派","req_party",{searchable:!0}),aa("BOOK|EQUIP","req","需特殊人物1","req_hero1",{searchable:!0}),aa("BOOK|EQUIP","req","需特殊人物2","req_hero2",{searchable:!0}),aa("BOOK","req","需资质","req_itl"),aa("BOOK|EQUIP","req","需拳掌","req_fs"),aa("BOOK|EQUIP","req","需御剑","req_ss"),aa("BOOK|EQUIP","req","需兵器","req_ws"),aa("BOOK|EQUIP","req","需指腿","req_rs"),aa("BOOK|EQUIP|THROWN","req","需暗毒","req_ts"),aa("BOOK|EQUIP|MEDIC","req","需内力","req_mp"),aa("BOOK|EQUIP","req","需攻击","req_atk"),aa("BOOK","req","需轻功","req_agi"),aa("BOOK","req","需医疗","req_heal"),aa("BOOK","req","需用毒","req_poiMk"),aa("BOOK|MEDIC|THROWN","attr","加生命","attr_hp"),aa("BOOK|MEDIC","attr","加血量","attr_hpMax"),aa("BOOK|MEDIC","attr","加内力","attr_mp"),aa("BOOK|MEDIC","attr","加功力","attr_mpMax"),aa("MEDIC","attr","加体力","attr_vgr"),aa("MEDIC|THROWN","attr","中毒/解毒","attr_poi"),aa("MEDIC","attr","加气格","attr_eng"),aa("MEDIC","attr","受伤度","attr_inj"),aa("BOOK|EQUIP","attr","总属性","attr_all"),aa("BOOK|EQUIP|MEDIC","attr","加攻击","attr_atk"),aa("BOOK|EQUIP|MEDIC","attr","加防御","attr_def"),aa("BOOK|EQUIP|MEDIC","attr","加轻功","attr_agi"),aa("BOOK|EQUIP|MEDIC","attr","加拳掌","attr_fs"),aa("BOOK|EQUIP|MEDIC","attr","加御剑","attr_ss"),aa("BOOK|EQUIP|MEDIC","attr","加兵器","attr_ws"),aa("BOOK|EQUIP|MEDIC","attr","加指腿","attr_rs"),aa("BOOK|EQUIP|MEDIC","attr","加暗毒","attr_ts"),aa("BOOK","attr","加医疗","attr_heal"),aa("BOOK","attr","加用毒","attr_poiMk"),aa("BOOK|EQUIP","attr","加解毒","attr_poiRd"),aa("BOOK|EQUIP|MEDIC","attr","加抗毒","attr_poiRs"),aa("BOOK|EQUIP","attr","加带毒","attr_poiAt"),aa("MEDIC","attr","加资质","attr_itl"),aa("MEDIC|BOOK","attr","加武常","attr_klg"),aa("BOOK","attr","改变内力性质","attr_mpKind"),aa("BOOK","attr","改变攻击次数","attr_atkCnt"),aa("EQUIP","spec","使用武功","useSkill"),aa("EQUIP|MEDIC|THROWN","spec","附加状态","debuff_type"),aa("EQUIP|MEDIC|THROWN","spec","附加状态几率","debuff_rate"),aa("EQUIP|MEDIC|THROWN","spec","附加状态回合","debuff_turn"),aa("BOOK|EQUIP|MEDIC|THROWN","spec","出售价格","price"),aa("BOOK","spec","需材料","prd_mtl"),aa("BOOK","spec","炼出物品1","prd_item1"),aa("BOOK","spec","炼出物品2","prd_item2"),aa("BOOK","spec","炼出物品3","prd_item3"),aa("BOOK","spec","炼出物品4","prd_item4"),aa("BOOK","spec","需材料数量1","prd_cnt1"),aa("BOOK","spec","需材料数量2","prd_cnt2"),aa("BOOK","spec","需材料数量3","prd_cnt3"),aa("BOOK","spec","需材料数量4","prd_cnt4"),aa("BOOK","spec","新手光环","flag_newbie"),aa("EQUIP","spec","限制打造","flag_forge")],Pa=[{text:"说明",value:"desc"},{text:"需求",value:"req",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function Za(e){if(!e)return e;const t={};if(t["tabGroup"]=Ba[e.type],e.targetSkill>0){const a=u(e.targetSkill);if(a)switch(a.type){case 0:t["level"]=e.attr_ts;break;case 1:t["level"]=e.attr_fs;break;case 2:t["level"]=e.attr_ss;break;case 3:t["level"]=e.attr_ws;break;case 4:t["level"]=e.attr_rs;break}}if(Object.entries(e).forEach((([e,a])=>{t[e]=wa[e]?wa[e](a):a})),t["attr_all"]=Ga(e),e["req_hero1"]>=0){const a=o(e["req_hero1"]);a&&a.ke&&(t["ke"]=1)}return t}function Ga(e){if(!e)return 0;const t=Number(e["attr_atk"])+Number(e["attr_def"])+Number(e["attr_agi"])+Number(e["attr_fs"])+Number(e["attr_ss"])+Number(e["attr_ws"])+Number(e["attr_rs"])+Number(e["attr_ts"]);return t>0?t:""}var Ma={name:"ItemDataView",data(){return{selectType:"BOOK",tabs:Va,headerLabels:Pa,convertValue:Za}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return Ka},items(){return Object.values(this.$store.state.ItemSource)}},components:{TabDataPage:ta}},ja=Ma,Na=(0,$t.Z)(ja,xt,Ct,!1,null,"72838e92",null),Ha=Na.exports,qa=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},Ua=[];function Ra(e){let t=[];return e.values&&e.values.forEach((({attr:e,value:a})=>{const s=G[e];s?(e=s.name||e,t.push(s.print(e,a))):(t.push(`${e}:${a}`),console.log(`未知属性:${e}`))})),e.debuffs&&e.debuffs.forEach((({attr:e,value:a,rate:s})=>{const l=G[e];l?(e=l.name||e,t.push(l.print(e,a,s))):(t.push(`${e}:${a}, ${s}`),console.log(`未知属性:${e}`))})),e.immunes&&t.push(`免疫${e.immunes.join("/")}`),e.flags&&e.flags.forEach((e=>{t.push(e)})),t.join("，")}var Qa={calcSkillGrade(e,t){const a=u(e),s=La(a["type"]),l=h(e)||[];let n=1;a["ext_range"]?"双人"===a["ext_range"]&&(n=.5):n=ke(a["attr_selfRange"]);const r=8==a["type"]?_e(a["attr_costEng"],n>0):0,i=new be(l,{rangeFactor:n,energyGp:r,skillId:e}),c=ye(i,{upFlag:t,skillType:s,skillId:e});a["ext_grade"]&&(c["extGrade"]=a["ext_grade"]);const o=c.calcGrade();return o["desc"]=Ce(c),o},fmtSkillExtAttr:Ra};function Ya(e,t){return"全部"==e||("只看氪金"==e?t.ke:!t.ke)}const Xa=[{title:"外功",value:"HAND",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Ya}]},{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","特殊","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"大绝",value:"EXPL",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"拳掌",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Ya}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Ya}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Ya}]}],Wa={trigBy:Ta,type:La,levelType:xa,debuff_type:ya,hurtType:Sa,rangeType:Oa,flag_autoCast:la},Ja={0:"HAND",1:"HAND",2:"HAND",3:"HAND",4:"HAND",5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},za=[aa("ALL","","序号","id",{align:"start"}),aa("ALL","","名称","name"),aa("ALL","","类型","type"),aa("BODY|FOOT|TALENT|BUFF","","强度分值","grade",{ext:!0}),aa("BODY","","护体分值","grade_up",{ext:!0}),aa("BODY|FOOT","","等级","levelType"),aa("HAND|EXPL|BUFF","attr","威力","attrl_power"),aa("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗气格","attr_costEng"),aa("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗内力","attr_costMp"),aa("HAND|BODY|EXPL|BUFF","attr","所属招式","trigBy"),aa("HAND|BODY|EXPL|BUFF","attr","出招率","attr_trig"),aa("HAND|BODY|EXPL|BUFF","attr","伤害类型","hurtType"),aa("HAND|BODY|EXPL|BUFF","attr","范围形状","rangeType"),aa("HAND|BODY|EXPL|BUFF","attr","移动范围","attrl_moveRange"),aa("HAND|BODY|EXPL|BUFF","attr","杀伤范围","attrl_hitRange"),aa("HAND|BODY|FOOT|EXPL|BUFF","attr","命中率","attr_hit"),aa("HAND|EXPL","attr","暴击率","attr_crit"),aa("HAND|EXPL","attr","双击率","attr_double"),aa("HAND|EXPL","attr","自伤系数","attr_selfHurt"),aa("HAND|BODY|EXPL","attr","造成中毒","attr_poison"),aa("HAND|EXPL","attr","杀命","attr_decHpMax"),aa("HAND|EXPL","attr","杀体","attr_decVigor"),aa("HAND|BODY|EXPL","attr","杀内","attrl_decMp"),aa("HAND|BODY|EXPL","attr","吸内","attrl_incMp"),aa("BODY|TALENT|BUFF","spec","我方光环范围","attr_selfRange"),aa("BODY|TALENT|BUFF","spec","敌方光环范围","attr_enemyRange"),aa("HAND|EXPL","spec","附加/解除状态","debuff_type"),aa("HAND|EXPL","spec","状态几率","debuff_rate"),aa("HAND|EXPL","spec","状态回合","debuff_turn"),aa("BODY|EXPL|BUFF","spec","满气自动释放","flag_autoCast"),aa("BODY|FOOT|TALENT","desc","装备效果","text_equip"),aa("BODY|FOOT|BUFF","desc","使用效果","text_use"),aa("HAND|BODY|FOOT|BUFF","desc","出招台词","text_cast")],es=[{text:"说明",value:"desc"},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function ts(e){const t={};e.type>=0&&e.type<=4?e.flag_autoCast?t.tabGroup="EXPL":t.tabGroup="HAND":t["tabGroup"]=Ja[e.type],Object.entries(e).forEach((([e,a])=>{t[e]=Wa[e]?Wa[e](a):a}));const a=Qa.calcSkillGrade(e.id);if(t["grade"]=a.totalGrade.toFixed(2),t["grade_ext"]=()=>`${e["name"]}分值计算\n`+a.detail(),t["gen_desc"]=a["desc"],5==e.type&&(4==e.levelType||5==e.levelType)){const a=Qa.calcSkillGrade(e.id,!0);t["grade_up"]=a.totalGrade.toFixed(2),t["grade_up_ext"]=()=>`${e["name"]}护体分值计算\n`+a.detail()}return t}var as={name:"ItemDataView",data(){return{selectType:"HAND",tabs:Xa,headerLabels:es,convertValue:ts}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return za},items(){return Object.values(this.$store.state.SkillSource)}},components:{TabDataPage:ta}},ss=as,ls=(0,$t.Z)(ss,qa,Ua,!1,null,"fd32d904",null),ns=ls.exports,rs=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels,"extra-filters":e.dataFilters}})],1)},is=[];const cs={weaponId:Da,armorId:Da,petId:Da,bsId:Ta,fsId:Ta,talentId:Ta},os=[{text:"配置",value:"def",selected:!0},{text:"套装属性",value:"attr",selected:!0},{text:"总属性",value:"attr_total",selected:!1}],us=[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=[t["weaponId"],t["armorId"],t["petId"]];for(const s of a){if(null==s)continue;const t=p(s);if(t["ke"]||t["req_hero1"]>0&&o(t["req_hero1"]).ke)return"只看氪金"==e}return"不看氪金"==e}}],fs=[aa("","","序号","id",{align:"start"}),aa("","","名称","name"),aa("","def","武器","weaponId",{searchable:!0}),aa("","def","防具","armorId",{searchable:!0}),aa("","def","骑宠","petId",{searchable:!0}),aa("","def","内功","bsId",{searchable:!0}),aa("","def","轻功","fsId",{searchable:!0}),aa("","def","天赋","talentId",{searchable:!0}),aa("","attr","套装属性","suitAttr"),aa("","attr","攻击","atk"),aa("","attr","防御","def"),aa("","attr","轻功","agi"),aa("","attr","拳掌","fs"),aa("","attr","御剑","ss"),aa("","attr","兵器","ws"),aa("","attr","指腿","rs"),aa("","attr","暗毒","ts"),aa("","attr_total","总属性","totalAttr"),aa("","attr_total","总攻击","total_atk"),aa("","attr_total","总防御","total_def"),aa("","attr_total","总轻功","total_agi"),aa("","attr_total","总拳掌","total_fs"),aa("","attr_total","总御剑","total_ss"),aa("","attr_total","总兵器","total_ws"),aa("","attr_total","总指腿","total_rs"),aa("","attr_total","总暗毒","total_ts")];function ds(e){if(!e)return e;const t={};Object.entries(e).forEach((([e,a])=>{t[e]=cs[e]?cs[e](a):a})),t["suitAttr"]=ps(e),t["totalAttr"]=t["suitAttr"]+ms(e);const a=["atk","def","agi","fs","ss","ws","rs","ts"];return a.forEach((a=>{t["total_"+a]=Number(e[a])+Number(d(e["weaponId"])["attr_"+a])+Number(d(e["armorId"])["attr_"+a])+Number(d(e["petId"])["attr_"+a]),0==t["total_"+a]&&(t["total_"+a]="")})),t}function ps(e){return Number(e["atk"])+Number(e["def"])+Number(e["agi"])+Number(e["fs"])+Number(e["ss"])+Number(e["ws"])+Number(e["rs"])+Number(e["ts"])}function ms(e){return Ga(d(e["weaponId"]))+Ga(d(e["armorId"]))+Ga(d(e["petId"]))}var gs={name:"SuitDataView",data(){return{headerLabels:os,dataFilters:us,convertValue:ds}},computed:{headers(){return fs},items(){return Object.values(this.$store.state.SuitSource)}},components:{DataPage:Wt}},hs=gs,bs=(0,$t.Z)(hs,rs,is,!1,null,"519e3105",null),$s=bs.exports,ys=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels}})],1)},vs=[];function ks(e,t){if("全部"==e)return!0;const a=u(t.skillId);return"只看氪金"==e?a.ke:!a.ke}const _s=[{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:ks}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:ks}]}],Ls={5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},As=[{text:"设定",value:"def",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"加成",value:"factor",selected:!0},{text:"几率",value:"rate",selected:!0},{text:"距离",value:"distance",selected:!0},{text:"异常",value:"debuff",selected:!0},{text:"特殊",value:"ext",selected:!0}],xs=[aa("ALL","","武功序号","skillId",{align:"start"}),aa("ALL","","名称","name"),aa("BODY|FOOT","","等级","levelType"),aa("ALL","def","效果类别","skillType",{groupable:!0}),aa("ALL","def","效果回合数","round"),aa("ALL","def","己方益害","selfAdv"),aa("ALL","def","敌方益害","enemyAdv"),aa("ALL","attr","自身攻击","bodyAtk"),aa("ALL","attr","自身防御","bodyDef"),aa("ALL","attr","自身轻功","bodyAgi"),aa("ALL","attr","战场攻击","battleAtk"),aa("ALL","attr","战场防御","battleDef"),aa("ALL","attr","战场轻功","battleAgi"),aa("ALL","attr","行动时序","battleAsp"),aa("ALL","attr","敌方攻击","enemyAtk"),aa("ALL","attr","敌方防御","enemyDef"),aa("ALL","attr","敌方轻功","enemyAgi"),aa("ALL","attr","敌方时序","enemyAsp"),aa("ALL","factor","命中加成","hitInc"),aa("ALL","factor","专系命中加成","specHitInc"),aa("ALL","factor","命中减成","hitDec"),aa("ALL","factor","专系命中减成","specHitDec"),aa("ALL","factor","威力加成","powerInc"),aa("ALL","factor","专系威力加成","specPowerInc"),aa("ALL","factor","威力减成","powerDec"),aa("ALL","factor","专系威力减成","specPowerDec"),aa("ALL","factor","伤害加成","damageInc"),aa("ALL","factor","专系伤害加成","specDamageInc"),aa("ALL","factor","伤害减成","damageDec"),aa("ALL","factor","专系伤害减成","specDamageDec"),aa("ALL","factor","受伤度加成","injuryInc"),aa("ALL","factor","受伤度减成","injuryDec"),aa("ALL","rate","外功出招","castInc"),aa("ALL","rate","专系外功出招","specCastInc"),aa("ALL","rate","双击","doubleHit"),aa("ALL","rate","暴击","critical"),aa("ALL","rate","吸血","bloodSuck"),aa("ALL","rate","反震","damageReflect"),aa("ALL","rate","反弹","damageCounter"),aa("ALL","rate","挪移","damageTransfer"),aa("ALL","distance","移动距离","moveDistance"),aa("ALL","distance","武功移动","attackDistance"),aa("ALL","distance","武功范围","attackRange"),aa("ALL","debuff","免疫","deBuffImmune"),aa("ALL","debuff","造成异常状态","deBuffMake"),aa("ALL","ext","特殊词条","ext")];function Cs(e){const t={};Object.entries(e).forEach((([e,a])=>{t[e]=0!=a?a:""}));const a=u(e["skillId"]);return a?(t["tabGroup"]=Ls[a.type],t["name"]=a["name"],t["levelType"]=xa(a["levelType"]),e["specHitIncType"]&&(t["specHitInc"]=`${e["specHitIncType"]}${e["specHitInc"]}`),e["specHitDecType"]&&(t["specHitDec"]=`${e["specHitDecType"]}${e["specHitDec"]}`),e["specPowerIncType"]&&(t["specPowerInc"]=`${e["specPowerIncType"]}${e["specPowerInc"]}`),e["specPowerDecType"]&&(t["specPowerDec"]=`${e["specPowerDecType"]}${e["specPowerDec"]}`),e["specDamageIncType"]&&(t["specDamageInc"]=`${e["specDamageIncType"]}${e["specDamageInc"]}`),e["specDamageDecType"]&&(t["specDamageDec"]=`${e["specDamageDecType"]}${e["specDamageDec"]}`),e["specCastIncType"]&&(t["specCastInc"]=`${e["specCastIncType"]}${e["specCastInc"]}`),e["deBuffImmune"]&&(t["deBuffImmune"]=Ss(e["deBuffImmune"])),e["deBuffMake"]&&(t["deBuffMake"]=`[${Ss(e["deBuffMake"])}]${e["deBuffRound"]}回合+${e["deBuffRate"]}%`),e["ext"]&&(t["ext"]=Ra(e["ext"])),t):null}function Ss(e){const t=e.split(" ").map((e=>e.trim()));return t.join("/")}var Fs={name:"SkillConfigView",data(){return{tabs:_s,headerLabels:As,convertValue:Cs}},computed:{headers(){return xs},items(){return Object.values(this.$store.state.SkillConfigSource)}},components:{DataPage:ta}},Os=Fs,Is=(0,$t.Z)(Os,ys,vs,!1,null,"6abd7608",null),Es=Is.exports,Ts=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},Ds=[];const Vs=[{title:"NPC",value:"NPC",dataFilters:[{type:"select",label:"等级段",value:[5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,"全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||t.level>e-5&&t.level<=e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"队友",value:"FRIEND",dataFilters:[{type:"select",label:"周目",value:[1,2,3,4,5,6,"全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||t["roleRound"]==e},{type:"select",label:"氪金人",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]}],ws={equip_wp:Da,equip_ar:Da,equip_pt:Da,equip_bs:Ta,equip_fs:Ta,talent:Ta,mastery:Ta,spec_copyHero:Ea,gender:ra,family:ca,party:ua,mpKind:ma,attr_atkCnt:ba,flag_hide:la},Bs=[aa("ALL","","序号","id",{align:"start"}),aa("ALL","","姓名","name"),aa("ALL","base","称号","nickname"),aa("ALL","base","头像","photo"),aa("ALL","base","性别","gender",{searchable:!0}),aa("ALL","base","血族","family",{searchable:!0}),aa("ALL","base","门派","party",{searchable:!0}),aa("ALL","base","等级","level",{groupable:!0}),aa("ALL","base","内力性质","mpKind",{searchable:!0}),aa("ALL","def","称号模板","title",{searchable:!0}),aa("ALL","effect","称号效果","titleEffect"),aa("ALL","def","天赋","talent",{searchable:!0}),aa("ALL","effect","天赋效果","talentEffect"),aa("ALL","def","专精武功","mastery",{searchable:!0}),aa("ALL","def","内功","equip_bs",{searchable:!0}),aa("ALL","effect","内功效果","bodySkillEffect"),aa("ALL","def","轻功","equip_fs",{searchable:!0}),aa("ALL","effect","轻功效果","footSkillEffect"),aa("ALL","def","装备武器","equip_wp",{searchable:!0}),aa("ALL","def","装备防具","equip_ar",{searchable:!0}),aa("ALL","def","装备骑宠","equip_pt",{searchable:!0}),aa("ALL","def","套装","suit",{searchable:!0}),aa("ALL","def","套装天赋","suit_talent",{searchable:!0}),aa("ALL","effect","套装天赋效果","suitTalentEffect"),aa("ALL","def","套装内功","suit_bs",{searchable:!0}),aa("ALL","effect","套装内功效果","suitBodySkillEffect"),aa("ALL","def","套装轻功","suit_fs",{searchable:!0}),aa("ALL","effect","套装轻功效果","suitFootSkillEffect"),aa("ALL","attr","血量","attr_hpMax"),aa("ALL","attr","功力","attr_mpMax"),aa("ALL","attr","攻击","attr_atk"),aa("ALL","attr","防御","attr_def"),aa("ALL","attr","轻功","attr_agi"),aa("ALL","attr","拳掌","attr_fs"),aa("ALL","attr","御剑","attr_ss"),aa("ALL","attr","兵器","attr_ws"),aa("ALL","attr","指腿","attr_rs"),aa("ALL","attr","暗毒","attr_ts"),aa("ALL","attr","医疗","attr_heal"),aa("ALL","attr","用毒","attr_poiMk"),aa("ALL","attr","解毒","attr_poiRd"),aa("ALL","attr","抗毒","attr_poiRs"),aa("ALL","attr","带毒","attr_poiAt"),aa("ALL","attr","武学常识","attr_klg"),aa("ALL","attr","攻击次数","attr_atkCnt",{searchable:!0}),aa("ALL","attr","资质","attr_itl"),aa("ALL","attr","体质","attr_str"),aa("ALL","attr","品德","attr_mrl"),aa("ALL","skill","武功格数","skill_cnt"),aa("ALL","skill","1格武功","skill_1",{searchable:!0}),aa("ALL","skill","2格武功","skill_2",{searchable:!0}),aa("ALL","skill","3格武功","skill_3",{searchable:!0}),aa("ALL","skill","4格武功","skill_4",{searchable:!0}),aa("ALL","skill","5格武功","skill_5",{searchable:!0}),aa("ALL","skill","6格武功","skill_6",{searchable:!0}),aa("ALL","skill","7格武功","skill_7",{searchable:!0}),aa("ALL","skill","8格武功","skill_8",{searchable:!0}),aa("ALL","skill","9格武功","skill_9",{searchable:!0}),aa("ALL","skill","10格武功","skill_10",{searchable:!0}),aa("ALL","skill2","11格武功","skill_11",{searchable:!0}),aa("ALL","skill2","12格武功","skill_12",{searchable:!0}),aa("ALL","skill2","13格武功","skill_13",{searchable:!0}),aa("ALL","skill2","14格武功","skill_14",{searchable:!0}),aa("ALL","skill2","15格武功","skill_15",{searchable:!0}),aa("ALL","skill2","16格武功","skill_16",{searchable:!0}),aa("ALL","skill2","17格武功","skill_17",{searchable:!0}),aa("ALL","skill2","18格武功","skill_18",{searchable:!0}),aa("ALL","skill2","19格武功","skill_19",{searchable:!0}),aa("ALL","skill2","20格武功","skill_20",{searchable:!0}),aa("ALL","skill2","21格武功","skill_21",{searchable:!0}),aa("ALL","skill2","22格武功","skill_22",{searchable:!0}),aa("ALL","skill2","23格武功","skill_23",{searchable:!0}),aa("ALL","skill2","24格武功","skill_24",{searchable:!0}),aa("ALL","skill2","25格武功","skill_25",{searchable:!0}),aa("ALL","skill2","26格武功","skill_26",{searchable:!0}),aa("ALL","skill2","27格武功","skill_27",{searchable:!0}),aa("ALL","skill2","28格武功","skill_28",{searchable:!0}),aa("ALL","skill2","29格武功","skill_29",{searchable:!0}),aa("ALL","skill2","30格武功","skill_30",{searchable:!0}),aa("ALL","item","1格物品","item_1",{searchable:!0}),aa("ALL","item","2格物品","item_2",{searchable:!0}),aa("ALL","item","3格物品","item_3",{searchable:!0}),aa("ALL","item","4格物品","item_4",{searchable:!0}),aa("ALL","status","生命","status_hp"),aa("ALL","status","内力","status_mp"),aa("ALL","status","体力","status_vigour"),aa("ALL","status","受伤","status_injury"),aa("ALL","status","中毒","status_poison"),aa("ALL","status","经验","status_exp"),aa("ALL","status","根骨","status_bone"),aa("FRIEND","spec","卡片周目","roleRound"),aa("FRIEND","spec","幽灵队友周目","ghostMember"),aa("ALL","spec","复制人物","spec_copyHero"),aa("ALL","spec","明玉丹额度","status_myd"),aa("ALL","spec","传奇隐藏","flag_hide"),aa("ALL","spec","结局编号","spec_ending")],Ks=[{text:"基本",value:"base",selected:!0},{text:"配置",value:"def",selected:!0},{text:"配置效果",value:"effect"},{text:"属性",value:"attr",selected:!0},{text:"武功",value:"skill",selected:!0},{text:"更多武功",value:"skill2"},{text:"物品",value:"item"},{text:"状态",value:"status"},{text:"其他",value:"spec",selected:!0}];function Ps(e){if(!e)return e;const t={};t["tabGroup"]=e["friend"]?"FRIEND":"NPC",Object.entries(e).forEach((([e,a])=>{t[e]=ws[e]?ws[e](a):a}));const a=m(e["equip_wp"],e["equip_ar"],e["equip_pt"]);a&&(t["suit"]=a.name,e["suit_bs"]=a.bsId,e["suit_fs"]=a.fsId,e["suit_talent"]=a.talentId,t["suit_bs"]=Ta(a.bsId),t["suit_fs"]=Ta(a.fsId),t["suit_talent"]=Ta(a.talentId));let s=0;for(let n=0;n<30;n++){const a=e["skills"][n];if(a["skill"]){const e=1+Math.floor(a["exp"]/100);t["skill_"+(n+1)]=`${Ta(a["skill"])}(${e}级)`,s++}}t["skill_cnt"]=s;for(let n=0;n<4;n++){const a=e["items"][n];a["item"]&&(t["item_"+(n+1)]=`${Da(a["item"])}*${a["amount"]}`)}e["equip_bs"]>0&&(t["bodySkillEffect"]=u(e["equip_bs"])["text_equip"]),e["equip_fs"]>0&&(t["footSkillEffect"]=u(e["equip_fs"])["text_equip"]),e["talent"]>0&&(t["talentEffect"]=u(e["talent"])["text_equip"]),t["suit_bs"]&&(t["suitBodySkillEffect"]=u(e["suit_bs"])["text_equip"]),t["suit_fs"]&&(t["suitFootSkillEffect"]=u(e["suit_fs"])["text_equip"]),t["suit_talent"]&&(t["suitTalentEffect"]=u(e["suit_talent"])["text_equip"]);const l=g(e["title"]);return l?(t["titleEffect"]=l["desc"],t["title"]=`[${e["title"]}]${l["name"]}`):t["title"]=`[${e["title"]}](未定义)`,t}var Zs={name:"HeroDataView",data(){return{selectType:"NPC",tabs:Vs,headerLabels:Ks,convertValue:Ps}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return Bs},items(){return Object.values(this.$store.state.HeroSource)}},components:{TabDataPage:ta}},Gs=Zs,Ms=(0,$t.Z)(Gs,Ts,Ds,!1,null,"65413552",null),js=Ms.exports,Ns=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,"header-labels":e.headerLabels,mapper:e.convertValue},on:{tabChange:e.selectTab}})],1)},Hs=[];const qs=(e,t)=>({type:"select",label:"路线",value:e,selected:t,filterFunc:(e,t)=>{if("全部"==e)return!0;const a=$(t.index);return a?a.group==e:"其他"==e}}),Us=(e,t)=>({type:"select",label:"类型",value:e,selected:t,filterFunc:(e,t)=>"全部"==e||t.op==e}),Rs=[{title:"洗武",value:"xw",dataFilters:[qs(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Us(["洗武功","洗天赋","洗专精","全部"],"全部")]},{title:"属性",value:"attr",dataFilters:[qs(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Us(["改变生命","改变内力","改变攻击","改变防御","改变轻功","改变五系","改变资质","改变内力性质","改变性别","全部"],"全部")]},{title:"物品",value:"item",dataFilters:[{type:"select",label:"物品种类",value:["秘籍","装备","药品","暗器","剧情","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=d(t.index);return ka(a.type)==e}},Us(["获得物品","增加/扣除物品","他人增加物品","初始装备","初始携带","全部"],"全部")]},{title:"品德",value:"moral"},{title:"队伍",value:"team",dataFilters:[qs(["女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Us(["队员加入","队员离队","脱下装备","全部"],"全部")]}],Qs=[],Ys=[aa("xw|attr|team","","人物","hero",{searchable:!0}),aa("item","","物品","item",{searchable:!0}),aa("ALL","","事件编号","eventId"),aa("ALL","","事件名","name"),aa("ALL","","指令","op"),aa("ALL","","描述","note")];function Xs(e){const t={...e};if("xw"==e["tabGroup"]||"attr"==e["tabGroup"]||"team"==e["tabGroup"]){const a=o(e["index"]);a&&(t["hero"]=`[${a.id}]${a.name}`)}else if("item"==e["tabGroup"]){const a=d(e["index"]);a&&(t["item"]=`[${a.id}]${a.name}`)}return t}var Ws={name:"EventView",data(){return{selectType:"xw",tabs:Rs,headerLabels:Qs,convertValue:Xs}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return Ys},items(){return this.$store.state.EventSource[this.selectType]?this.$store.state.EventSource[this.selectType].map((e=>({...e,tabGroup:this.selectType}))):[]}},components:{TabDataPage:ta}},Js=Ws,zs=(0,$t.Z)(Js,Ns,Hs,!1,null,"0aa08594",null),el=zs.exports,tl=a(2165),al=function(){var e=this,t=e._self._c;return t("div",[t(Ft.Z,[t(St.Z,[e._v("天赋特技模拟器")]),t(tl.Z,[t("SkillCustomView")],1)],1)],1)},sl=[],ll=a(6190),nl=a(120),rl=a(4061),il=a(9223),cl=a(5125),ol=a(4324),ul=a(5375),fl=a(3687),dl=function(){var e=this,t=e._self._c;return t(Tt.Z,[t(Dt.ZB,[t(cl.Z,[t(Tt.Z,{attrs:{flat:""}},[t(Dt.EB,[e._v("基本信息")]),t(Dt.ZB,[t(pt.Z,[t(ft.Z,{attrs:{cols:"12",md:"2"}},[t(jt.Z,{attrs:{label:"名称",outlined:"",dense:""},on:{change:function(t){e.modified=!0}},model:{value:e.skill.base.name,callback:function(t){e.$set(e.skill.base,"name",t)},expression:"skill.base.name"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(jt.Z,{attrs:{label:"序号",outlined:"",dense:""},on:{change:function(t){e.modified=!0}},model:{value:e.skill.base.id,callback:function(t){e.$set(e.skill.base,"id",t)},expression:"skill.base.id"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ll.Z,{on:{click:e.importSkill}},[t("span",{staticClass:"text-subtitle-2"},[e._v("导入")])])],1),t(ft.Z,{attrs:{cols:"12",md:"5"}}),t(ft.Z,{attrs:{cols:"12",md:"2"}},[t(jt.Z,{staticClass:"headline centered-input",attrs:{readonly:"",label:"总分",outlined:""},on:{click:e.clickGrade},model:{value:e.totalGrade,callback:function(t){e.totalGrade=t},expression:"totalGrade"}})],1)],1),t(pt.Z,{attrs:{dense:""}},[t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ul.Z,{attrs:{items:[2,4,6],label:"周目",outlined:"",dense:""},on:{change:function(t){e.modified=!0}},model:{value:e.skill.base.round,callback:function(t){e.$set(e.skill.base,"round",t)},expression:"skill.base.round"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ul.Z,{attrs:{items:["天赋","特技"],label:"种类",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.type,callback:function(t){e.$set(e.skill.base,"type",t)},expression:"skill.base.type"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ul.Z,{attrs:{items:["无","拳掌","御剑","兵器","指腿","暗毒"],label:"主系",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.classType,callback:function(t){e.$set(e.skill.base,"classType",t)},expression:"skill.base.classType"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(nl.Z,{attrs:{label:"光环",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.isAura,callback:function(t){e.$set(e.skill.base,"isAura",t)},expression:"skill.base.isAura"}})],1),"特技"==e.skill.base.type?t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(jt.Z,{attrs:{dense:"",label:"特技回合",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.buffTurn,callback:function(t){e.$set(e.skill.base,"buffTurn",t)},expression:"skill.base.buffTurn"}})],1):e._e(),"特技"==e.skill.base.type?t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(jt.Z,{attrs:{dense:"",label:"特技耗气",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.energyCost,callback:function(t){e.$set(e.skill.base,"energyCost",t)},expression:"skill.base.energyCost"}})],1):e._e(),e.skill.base.isAura?t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(jt.Z,{attrs:{dense:"",label:"光环范围",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.auraRange,callback:function(t){e.$set(e.skill.base,"auraRange",t)},expression:"skill.base.auraRange"}})],1):e._e(),e.skill.base.isAura?t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ul.Z,{attrs:{items:["","益","害"],label:"己方益害",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.auraEffSelf,callback:function(t){e.$set(e.skill.base,"auraEffSelf",t)},expression:"skill.base.auraEffSelf"}})],1):e._e(),e.skill.base.isAura?t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ul.Z,{attrs:{items:["","益","害"],label:"敌方益害",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.auraEffEnemy,callback:function(t){e.$set(e.skill.base,"auraEffEnemy",t)},expression:"skill.base.auraEffEnemy"}})],1):e._e()],1)],1)],1),"特技"==e.skill.base.type&&e.skill.base.isAura?e._e():t(Tt.Z,{attrs:{flat:""}},[t(Dt.EB,[e._v("自身词条")]),t(Dt.ZB,e._l(e.rows,(function(a){return t(pt.Z,{key:a.title,attrs:{dense:""}},[e._l(a.cols.filter((e=>!e.onlyAura)),(function(a){return[t(ft.Z,{key:a.label,attrs:{cols:"12",sm:a.wide||1,"align-self":"end"}},["combobox"!=a.type?t(jt.Z,{class:e.skill.mainAttr[a.label]!=a.defValue?"modified-input":"",staticStyle:{width:"80%"},attrs:{label:a.label,suffix:a.suffix,disabled:e.skill.base.isAura&&!a.auraSelf||a.mainClass&&"无"==e.skill.base.classType,dense:"",outlined:!1},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.mainAttr[a.label],callback:function(t){e.$set(e.skill.mainAttr,a.label,t)},expression:"skill.mainAttr[col.label]"}}):e._e(),"combobox"==a.type?t(ul.Z,{attrs:{items:a.items,label:a.label,dense:"",chips:"",multiple:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.mainAttr[a.label],callback:function(t){e.$set(e.skill.mainAttr,a.label,t)},expression:"skill.mainAttr[col.label]"}}):e._e()],1)]}))],2)})),1)],1),e.skill.base.isAura?t(Tt.Z,{attrs:{flat:""}},[t(Dt.EB,[e._v("光环词条")]),t(Dt.ZB,e._l(e.rows,(function(a){return t(pt.Z,{key:a.title,attrs:{dense:""}},[e._l(a.cols,(function(a){return[t(ft.Z,{key:a.label,attrs:{cols:"12",sm:a.wide||1,"align-self":"end"}},["combobox"!=a.type?t(jt.Z,{class:e.skill.auraAttr[a.label]!=a.defValue?"modified-input":"",staticStyle:{width:"80%"},attrs:{label:a.label,suffix:a.suffix,disabled:a.mainClass&&"无"==e.skill.base.classType,dense:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.auraAttr[a.label],callback:function(t){e.$set(e.skill.auraAttr,a.label,t)},expression:"skill.auraAttr[col.label]"}}):e._e(),"combobox"==a.type?t(ul.Z,{attrs:{items:a.items,label:a.label,dense:"",chips:"",multiple:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.auraAttr[a.label],callback:function(t){e.$set(e.skill.auraAttr,a.label,t)},expression:"skill.auraAttr[col.label]"}}):e._e()],1)]}))],2)})),1)],1):e._e(),t(pt.Z,{attrs:{dense:""}},[t(ft.Z,{attrs:{cols:"12",md:"1"}}),t(ft.Z,{attrs:{cols:"12",md:"8","align-self":"end"}},[t(Nt.Z,{attrs:{rows:"4",label:"自动生成描述",readonly:"",outlined:"","hide-details":""},model:{value:e.grade.desc,callback:function(t){e.$set(e.grade,"desc",t)},expression:"grade.desc"}})],1),t(ft.Z,{attrs:{cols:"12",md:"1"}}),t(ft.Z,{attrs:{cols:"12",md:"1"}},[t(ll.Z,{attrs:{disabled:!e.modified},on:{click:e.submit}},[t("span",{staticClass:"text-subtitle-2"},[e._v(e._s(e.isEdit?"保存":"创建"))])]),t("p"),t(ll.Z,{on:{click:e.reset}},[t("span",{staticClass:"text-subtitle-2"},[e._v("重置")])])],1)],1),t("p"),t(il.Z),t("p"),t(pt.Z,{attrs:{dense:""}},[t(ft.Z,{attrs:{cols:"12",md:"10"}},[t(Tt.Z,{attrs:{flat:""}},[t(Dt.EB,[e._v("提交记录")]),t(Dt.ZB,[t(Bt.Z,{staticClass:"elevation-1 table",staticStyle:{width:"100%"},attrs:{dense:"","show-select":"","hide-default-footer":"","calculate-widths":!0,headers:e.tableHeaders,items:e.tableItems,"items-per-page":100},scopedSlots:e._u([{key:"item.actions",fn:function({item:a}){return[t(ol.Z,{staticClass:"mr-2",attrs:{small:""},on:{click:function(t){return e.editItem(a)}}},[e._v(" mdi-pencil ")]),t(ol.Z,{attrs:{small:""},on:{click:function(t){return e.deleteItem(a)}}},[e._v(" mdi-delete ")])]}}],null,!0),model:{value:e.tableSelected,callback:function(t){e.tableSelected=t},expression:"tableSelected"}})],1)],1)],1),t(ft.Z,{attrs:{cols:"12",md:"1","align-self":"end"}},[t("p"),t(ll.Z,{attrs:{disabled:0==e.tableSelected.length},on:{click:e.exportSkill}},[t("span",{staticClass:"text-subtitle-2"},[e._v("导出")])])],1)],1)],1),t(Et.Z,{attrs:{inset:""},model:{value:e.bottom,callback:function(t){e.bottom=t},expression:"bottom"}},[t(Mt.Z,{staticClass:"text-center"},[t("div",{staticStyle:{overflow:"scroll",height:"fit-content"}},[t(Nt.Z,{attrs:{rows:"12",readonly:"",filled:"",outlined:"","hide-details":""},model:{value:e.gradeDetail,callback:function(t){e.gradeDetail=t},expression:"gradeDetail"}})],1)])],1),t(rl.Z,{attrs:{"max-width":"500px"},model:{value:e.dialogDelete,callback:function(t){e.dialogDelete=t},expression:"dialogDelete"}},[t(Tt.Z,[t(Dt.EB,[e._v("确认删除["+e._s(e.deletingItem?e.deletingItem.name:"")+"]？")]),t(Dt.h7,[t(fl.Z),t(ll.Z,{attrs:{color:"blue darken-1",text:""},on:{click:function(t){e.dialogDelete=!1}}},[e._v("取消")]),t(ll.Z,{attrs:{color:"blue darken-1",text:""},on:{click:e.deleteItemConfirm}},[e._v("确认")]),t(fl.Z)],1)],1)],1)],1)],1)},pl=[],ml=a(7460),gl=a.n(ml);function hl(e,t){const a=gl().unparse(e),s=new Blob(["\ufeff"+a],{type:"text/csv;charset=utf-8;"}),l=URL.createObjectURL(s),n=document.createElement("a");n.setAttribute("href",l),n.setAttribute("download",t),n.click(),URL.revokeObjectURL(l)}const bl=[{title:"属性",cols:["自身攻击","自身防御","自身轻功","战场攻击","战场防御","战场轻功","行动时序","敌方攻击","敌方防御","敌方轻功","敌方时序"]},{title:"特性",cols:["移动距离","攻击距离","杀伤范围","暴击","双击","出招","主系出招"]},{title:"攻击效果",cols:["威力","命中","伤害","加受伤度","主系威力","主系命中","主系伤害","吸血"]},{title:"防御效果",cols:["减威","闪避","减伤","减受伤度","主系减威","主系闪避","主系减伤","反震","反弹","挪移"]},{title:"异常",cols:["异常","异常概率","异常回合"]},{title:"免疫",cols:["免疫"]}],$l=[{text:"名称",value:"name"},{text:"序号",value:"sid"},{text:"分数",value:"grade"},{text:"描述",value:"desc",width:"60%"},{text:"操作",value:"actions",sortable:!1}];var yl={name:"SkillCustomView",data(){return{bottom:!1,modified:!1,dialogDelete:!1,tableSelected:[],deletingItem:null,skill:new Ye,grade:{desc:"",detail:()=>""},totalGrade:"0.00",gradeDetail:""}},methods:{save(){this.modified&&(y("curSkill",this.skill),this.modified=!1)},submit(){this.$store.dispatch("customSkill/updateCustomSkill",{name:this.skill.base.name,skill:new Ye(this.skill)}),this.modified=!1},editItem(e){const t=this.$store.state["customSkill"].customSKills.find((t=>t.name===e.name));this.skill=new Ye(t.skill),this.elementChanged()},deleteItem(e){this.dialogDelete=!0,this.deletingItem=e},deleteItemConfirm(){this.$store.dispatch("customSkill/deleteCustomSkill",{name:this.deletingItem.name}),this.dialogDelete=!1},elementChanged(){this.modified=!0,this.grade=this.skill.calcGrade(),this.totalGrade=this.grade.totalGrade.toFixed(2)},clickGrade(){this.gradeDetail=this.grade.detail(),this.bottom=!0},reset(){this.skill=new Ye,this.elementChanged()},importSkill(){const e=Xe(this.skill.base.id);null!=e&&(this.skill=e,this.elementChanged())},exportSkill(){const e=[];this.tableSelected.forEach((t=>{const a=this.$store.state["customSkill"].customSKills.find((e=>e.name===t.name));e.push(...a.skill.exportSkill()),e.push({"1技能名":t.desc})})),e.length>0&&hl(e,"games.csv")}},computed:{isEdit(){return void 0!==this.$store.state["customSkill"].customSKills.find((e=>e.name===this.skill.base.name))},rows(){const e=bl.map((e=>({title:e.title,cols:e.cols.map((e=>{const t=Re[e];return{...t,label:e,suffix:t.pct?"%":"",defValue:Re.defValue(e)}}))})));return e},tableHeaders(){return $l},tableItems(){return this.$store.state["customSkill"].customSKills.map((({name:e,skill:t})=>{const a=t.calcGrade();return{id:e,name:e,sid:t.base.id,grade:a.totalGrade.toFixed(2),desc:a.desc,action:"删除"}}))}}},vl=yl,kl=(0,$t.Z)(vl,dl,pl,!1,null,"0a2bbd90",null),_l=kl.exports,Ll={name:"CustomSimulatorView",data(){return{}},components:{SkillCustomView:_l}},Al=Ll,xl=(0,$t.Z)(Al,al,sl,!1,null,"366c2928",null),Cl=xl.exports;s.ZP.use(ct.ZP);const Sl=[{path:"/",name:"home",component:At},{path:"/about",name:"about",component:()=>a.e(443).then(a.bind(a,1272))},{path:"/hero",name:"hero",component:js},{path:"/item",name:"item",component:Ha},{path:"/skill",name:"skill",component:ns},{path:"/suit",name:"suit",component:$s},{path:"/skill-config",name:"skill-config",component:Es},{path:"/event",name:"event",component:el},{path:"/custom-sim",name:"custom",component:Cl},{path:"/coming",name:"coming",component:()=>a.e(390).then(a.bind(a,5390))}],Fl=new ct.ZP({routes:Sl,mode:"hash",base:"/"});var Ol=Fl,Il=a(998),El=a(6843),Tl=a(5550),Dl=a(5808),Vl=a(7397),wl=a(4525),Bl=a(9471),Kl=a(4611),Pl=a(3059),Zl=a(9709),Gl=function(){var e=this,t=e._self._c;return t(Il.Z,[t(Zl.Z,{attrs:{app:""},model:{value:e.drawer,callback:function(t){e.drawer=t},expression:"drawer"}},[t(wl.Z,{attrs:{to:"/"}},[t(Kl.Z,[t(ol.Z,[e._v("mdi-home-city")])],1),t(Bl.V9,[e._v("首页")])],1),t(il.Z),t(Dl.Z,{attrs:{dense:"",nav:""}},e._l(e.items,(function(a){return t(Vl.Z,{key:a.title,attrs:{value:!0,"sub-group":""},scopedSlots:e._u([{key:"activator",fn:function(){return[t(Bl.V9,[e._v(e._s(a.title))])]},proxy:!0}],null,!0)},e._l(a.sub,(function(a){return t(wl.Z,{key:a.title,attrs:{to:a.to,link:""}},[t(Bl.km,[t(Bl.V9,[e._v(e._s(a.title))])],1)],1)})),1)})),1)],1),t(El.Z,{attrs:{app:"",color:"primary",height:"50vh",dark:""}},[t(Tl.Z,{on:{click:function(t){t.stopPropagation(),e.drawer=!e.drawer}}}),t("div",{staticClass:"d-flex align-center"},[t("span",{staticClass:"mr-1"},[e._v("金书红颜录数据查看器")])]),t(fl.Z),t("span",{staticClass:"mr-2"},[e._v("游戏版本：")]),t(ul.Z,{staticClass:"text-subtitle-2",staticStyle:{"max-width":"100pt",height:"40px"},attrs:{dense:"",items:e.SupportedVersions.map((e=>e.name)),value:e.selectedVersion,outlined:""},on:{change:e.changeVersion}})],1),t(Pl.Z,[t("router-view")],1)],1)},Ml=[],jl={name:"App",data:()=>({drawer:!0,items:[{title:"基本数据",sub:[{title:"人物",to:"/hero"},{title:"武功",to:"/skill"},{title:"物品",to:"/item"},{title:"套装",to:"/suit"},{title:"武功数值",to:"/skill-config"}]},{title:"高阶数据",sub:[{title:"事件",to:"/event"}]},{title:"辅助工具",sub:[{title:"分数计算器",to:"/custom-sim"},{title:"武功模拟（待开发）",to:"/coming"}]}]}),computed:{...(0,l.rn)(["SupportedVersions"]),selectedVersion(){return this.$store.state.CurVersion?.name||""}},methods:{changeVersion(e){this.$store.commit("setVersion",e),this.$store.dispatch("initStore")}},components:{}},Nl=jl,Hl=(0,$t.Z)(Nl,Gl,Ml,!1,null,null,null),ql=Hl.exports;s.ZP.config.productionTip=!1,new s.ZP({vuetify:it,store:nt,router:Ol,beforeCreate(){this.$store.dispatch("initStore")},render:e=>e(ql)}).$mount("#app")}},t={};function a(s){var l=t[s];if(void 0!==l)return l.exports;var n=t[s]={exports:{}};return e[s].call(n.exports,n,n.exports,a),n.exports}a.m=e,function(){var e=[];a.O=function(t,s,l,n){if(!s){var r=1/0;for(u=0;u<e.length;u++){s=e[u][0],l=e[u][1],n=e[u][2];for(var i=!0,c=0;c<s.length;c++)(!1&n||r>=n)&&Object.keys(a.O).every((function(e){return a.O[e](s[c])}))?s.splice(c--,1):(i=!1,n<r&&(r=n));if(i){e.splice(u--,1);var o=l();void 0!==o&&(t=o)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[s,l,n]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var s in t)a.o(t,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,s){return a.f[s](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+(443===e?"about":e)+"."+{390:"5f20b0f2",443:"59813d5b"}[e]+".js"}}(),function(){a.miniCssF=function(e){}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="jsproj-web:";a.l=function(s,l,n,r){if(e[s])e[s].push(l);else{var i,c;if(void 0!==n)for(var o=document.getElementsByTagName("script"),u=0;u<o.length;u++){var f=o[u];if(f.getAttribute("src")==s||f.getAttribute("data-webpack")==t+n){i=f;break}}i||(c=!0,i=document.createElement("script"),i.charset="utf-8",i.timeout=120,a.nc&&i.setAttribute("nonce",a.nc),i.setAttribute("data-webpack",t+n),i.src=s),e[s]=[l];var d=function(t,a){i.onerror=i.onload=null,clearTimeout(p);var l=e[s];if(delete e[s],i.parentNode&&i.parentNode.removeChild(i),l&&l.forEach((function(e){return e(a)})),t)return t(a)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),c&&document.head.appendChild(i)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.p="/"}(),function(){var e={143:0};a.f.j=function(t,s){var l=a.o(e,t)?e[t]:void 0;if(0!==l)if(l)s.push(l[2]);else{var n=new Promise((function(a,s){l=e[t]=[a,s]}));s.push(l[2]=n);var r=a.p+a.u(t),i=new Error,c=function(s){if(a.o(e,t)&&(l=e[t],0!==l&&(e[t]=void 0),l)){var n=s&&("load"===s.type?"missing":s.type),r=s&&s.target&&s.target.src;i.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",i.name="ChunkLoadError",i.type=n,i.request=r,l[1](i)}};a.l(r,c,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,s){var l,n,r=s[0],i=s[1],c=s[2],o=0;if(r.some((function(t){return 0!==e[t]}))){for(l in i)a.o(i,l)&&(a.m[l]=i[l]);if(c)var u=c(a)}for(t&&t(s);o<r.length;o++)n=r[o],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(u)},s=self["webpackChunkjsproj_web"]=self["webpackChunkjsproj_web"]||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var s=a.O(void 0,[998],(function(){return a(3053)}));s=a.O(s)})();
//# sourceMappingURL=app.e118162d.js.map