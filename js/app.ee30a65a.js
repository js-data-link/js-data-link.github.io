(function(){"use strict";var e={3382:function(e,t,a){var l=a(144),s=a(629),n=a(9669),r=a.n(n);function c(e,t){return r().request({url:`/data/${t.path}/${e}.json`,method:"get"}).then((e=>e.data))}const o=[{name:"v5.63K11",path:"latest"}],i=o[0];function u(e){return o.find((t=>t.name===e))}function f(e){return A.state.HeroSource[e]}function d(e){return A.state.SkillSource[e]}function p(e){const t=e.match(/\[(\d+)\]/)[1];return A.state.SkillSource[t]}function m(e){return A.state.ItemSource[e]}function g(e){const t=e.match(/\[(\d+)\]/)[1];return A.state.ItemSource[t]}function h(e,t,a){const l=`${e}-${t}-${a}`;return A.state.SuitIndex[l]}function $(e){return A.state.TitleIndex[e]}function b(e){return A.state.SkillConfigIndex[e]}function k(){Object.entries(A.state.SkillExtConfigSource).forEach((([e,t])=>{const a=d(e),l=b(e)||[];t["range"]&&(a["ext_range"]=t["range"]),t["grade"]&&(a["ext_grade"]=t["grade"]),t["attrs"]&&t["attrs"].forEach((t=>{const a=l.find((e=>e["skillType"]===t["type"]));if(a)a["ext"]=t;else{const a=d(e),l={name:a["name"],skillId:e,skillType:t["type"],ext:t};A.state.SkillConfigSource.push(l),A.state.SkillConfigIndex[e]?A.state.SkillConfigIndex[e].push(l):A.state.SkillConfigIndex[e]=[l]}}))}))}function _(e){return A.state.Const.friend[e]}function L(e){const t={};return Object.values(e).forEach((e=>{t[e.suitKey]=e})),t}function v(e){const t={};return e.forEach((e=>{void 0==t[e["skillId"]]&&(t[e["skillId"]]=[]),t[e["skillId"]].push(e)})),t}function y(e){const t={};return e.forEach((e=>{t[e.skillId]=e})),t}l.ZP.use(s.ZP);var A=new s.ZP.Store({state:{CurVersion:i,LoadingCount:0,HeroSource:{},ItemSource:{},SkillSource:{},SuitSource:{},SkillConfigSource:[],SkillExtConfigSource:{},TitleConfigSource:[],EventSource:{},Const:{},SuitIndex:{},SkillConfigIndex:{},TitleIndex:{}},getters:{isReady(e){return 0===e.LoadingCount}},mutations:{resetLoading(e){e.LoadingCount=9},loadingOne(e){e.LoadingCount--},setVersion(e,t){e.CurVersion=u(t)},setHeroSource(e,t){e.HeroSource=t},setItemSource(e,t){e.ItemSource=t},setSkillSource(e,t){e.SkillSource=t},setSuitSource(e,t){e.SuitSource=t,e.SuitIndex=L(t)},setSkillConfigSource(e,t){e.SkillConfigSource=t,e.SkillConfigIndex=v(t)},setTitleConfigSource(e,t){e.TitleConfigSource=t,e.TitleIndex=y(t)},setSkillExtConfigSource(e,t){e.SkillExtConfigSource=t},setEventSource(e,t){e.EventSource=t},setConst(e,t){e.Const=t},bindSkillExt(){k()}},actions:{initStore({commit:e,state:t}){return new Promise((()=>{e("resetLoading")})).then(Promise.all([c("hero",t.CurVersion).then((t=>e("setHeroSource",t))).then((()=>e("loadingOne"))),c("item",t.CurVersion).then((t=>e("setItemSource",t))).then((()=>e("loadingOne"))),c("skill",t.CurVersion).then((t=>e("setSkillSource",t))).then((()=>e("loadingOne"))),c("suit",t.CurVersion).then((t=>e("setSuitSource",t))).then((()=>e("loadingOne"))),c("skill_config",t.CurVersion).then((t=>e("setSkillConfigSource",t))).then((()=>e("loadingOne"))),c("skill_ext",t.CurVersion).then((t=>e("setSkillExtConfigSource",t))).then((()=>e("loadingOne"))),c("title_config",t.CurVersion).then((t=>e("setTitleConfigSource",t))).then((()=>e("loadingOne"))),c("event",t.CurVersion).then((t=>e("setEventSource",t))).then((()=>e("loadingOne"))),c("const",t.CurVersion).then((t=>e("setConst",t))).then((()=>e("loadingOne")))]).then((()=>{e("bindSkillExt")})))}}}),F=a(1705);l.ZP.use(F.Z);var x=new F.Z({}),O=a(8345),I=function(){var e=this,t=e._self._c;return t("div",{staticClass:"home"},[t("HelloWorld")],1)},C=[],E=a(266),V=a(2118),S=a(1713),D=function(){var e=this,t=e._self._c;return t(V.Z,[t(S.Z,{staticClass:"text-center"},[t(E.Z,{staticClass:"mb-4"},[t("h1",{staticClass:"display-2 font-weight-bold mb-3"},[e._v(" 金书红颜录数据查看器 ")])]),t(E.Z,{staticClass:"mb-5",attrs:{cols:"12"}},[t("h2",{staticClass:"headline font-weight-bold mb-3"},[e._v(" 数据查看 ")]),t(S.Z,{attrs:{justify:"center"}},e._l(e.dataViews,(function(a,l){return t("router-link",{key:l,staticClass:"subheading mx-3",attrs:{to:a.to}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],1)},T=[],w={name:"HelloWorld",data:()=>({dataViews:[{text:"人物",to:"/hero"},{text:"物品",to:"/item"},{text:"套装",to:"/suit"},{text:"武功",to:"/skill"},{text:"武功数值",to:"/skill-config"}]})},B=w,P=a(1001),Z=(0,P.Z)(B,D,T,!1,null,null,null),G=Z.exports,M={name:"HomeView",components:{HelloWorld:G}},N=M,j=(0,P.Z)(N,I,C,!1,null,null,null),q=j.exports,H=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},K=[],U=a(626),R=a(3011),Q=function(){var e=this,t=e._self._c;return t(V.Z,{staticStyle:{width:"95%","min-width":"95%",overflow:"auto"},attrs:{fluid:"","grid-list-md":""}},[t(R.Z,{attrs:{"center-active":""},on:{change:e.tabChange}},e._l(e.tabs,(function(a){return t(U.Z,{key:a.value},[e._v(" "+e._s(a.title)+" ")])})),1),t("DataPage",{attrs:{"headers-source":e.headersSource,"items-source":e.itemsSource,mapper:e.mapper,"header-labels":e.headerLabels,"header-filter":e.headerFilter,"data-filter":e.dataFilter,"extra-filters":e.extraFilters}})],1)},Y=[],X=a(2685),W=a(9582),z=a(4886),J=a(4127),ee=a(8242),te=a(3863),ae=a(255),le=a(2348),se=a(400),ne=a(1214),re=a(7423),ce=a(7808),oe=a(6072),ie=function(){var e=this,t=e._self._c;return t(V.Z,{staticStyle:{width:"fit-content","min-width":"100%"}},[t(ne.Z,{attrs:{flat:"",accordion:""},model:{value:e.option,callback:function(t){e.option=t},expression:"option"}},[t(ae.Z,[t(se.Z,[e._v(" 选项 ")]),t(le.Z,[e._l(e.extraFilters,(function(a){return t("div",{key:a.label},[t(W.Z,{attrs:{flat:""}},[t(z.EB,{staticClass:"text-subtitle-2"},[e._v(" "+e._s(a.label)+" ")]),t(z.ZB,["select"===a.type?t(ee.Z,{attrs:{column:"",mandatory:"","active-class":"primary--text text--accent-4"},model:{value:a.selected,callback:function(t){e.$set(a,"selected",t)},expression:"filter.selected"}},e._l(a.value,(function(a){return t(J.Z,{key:a,attrs:{outlined:"",value:a}},[e._v(" "+e._s(a)+" ")])})),1):e._e(),"multiSelect"===a.type?t(ee.Z,{attrs:{column:"",multiple:"","active-class":"primary--text text--accent-4"},model:{value:a.selected,callback:function(t){e.$set(a,"selected",t)},expression:"filter.selected"}},e._l(a.value,(function(a){return t(J.Z,{key:a,attrs:{outlined:"",value:a}},[e._v(" "+e._s(a)+" ")])})),1):e._e()],1)],1)],1)})),t(W.Z,{attrs:{flat:""}},[e.selectedLabels.length>0?t(z.EB,{staticClass:"text-subtitle-2"},[e._v(" 表头筛选 ")]):e._e(),t(z.ZB,[t(ee.Z,{attrs:{column:"",multiple:"","active-class":"primary--text text--accent-4"},model:{value:e.selectedLabels,callback:function(t){e.selectedLabels=t},expression:"selectedLabels"}},e._l(e.headerLabels,(function(a){return t(J.Z,{key:a.value,attrs:{outlined:""}},[e._v(" "+e._s(a.text)+" ")])})),1)],1)],1)],2)],1)],1),t(ce.Z,{staticClass:"mb-2",staticStyle:{"max-width":"100%"},attrs:{"append-icon":"mdi-magnify",label:"搜索","single-line":"","hide-details":"",clearable:""},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}}),t("div",{staticStyle:{"max-width":"100%",overflow:"scroll"}},[t("div",{staticStyle:{width:"max-content"}},[t(te.Z,{staticClass:"elevation-1 table",attrs:{dense:"","multi-sort":"","show-group-by":"","footer-props":{"items-per-page-options":[10,20,50,100,-1]},"calculate-widths":!0,headers:e.headers,items:e.items,"items-per-page":50,search:e.search},scopedSlots:e._u([e._l(e.slotCols,(function(a){return{key:`item.${a.name}`,fn:function({item:l}){return["searchable"==a.type&&l[`${a.name}`]?t("a",{key:a,on:{click:e.doSearch}},[e._v(e._s(l[`${a.name}`]))]):e._e(),"ext"==a.type&&l[`${a.name}`]?t("a",{key:a,on:{click:function(t){return e.extClick(t,l[`${a.name}_ext`])}}},[e._v(e._s(l[`${a.name}`]))]):e._e()]}}}))],null,!0)})],1)]),t(X.Z,{attrs:{inset:""},model:{value:e.sheet,callback:function(t){e.sheet=t},expression:"sheet"}},[t(re.Z,{staticClass:"text-center"},[t("div",{staticStyle:{overflow:"scroll",height:"fit-content"}},[t(oe.Z,{attrs:{rows:"12",readonly:"",filled:"",outlined:"","hide-details":""},model:{value:e.sheetContext,callback:function(t){e.sheetContext=t},expression:"sheetContext"}})],1)])],1)],1)},ue=[];function fe(e){return t=>{let a=!0;return e&&e.forEach((e=>{e.selected&&(a=a&&e.filterFunc(e.selected,t))})),a}}function de(e){let t=[];return e.forEach(((e,a)=>{e.selected&&t.push(a)})),t}var pe={name:"DataPage",data(){return{search:"",option:0,sheet:!1,sheetContext:"",selectedLabels:de(this.headerLabels)}},computed:{headers(){return this.headersSource.filter(this.headerFilter).filter((e=>!e.label||this.selectedLabels.includes(this.headerLabels.findIndex((t=>t.value==e.label)))))},items(){return this.$store.getters["isReady"]?this.itemsSource.map(this.mapper).filter(this.dataFilter).filter(fe(this.extraFilters)):[]},slotCols(){return this.headers.filter((e=>e.searchable||e.ext)).map((e=>({name:e.value,type:e.searchable?"searchable":"ext"})))}},methods:{doSearch(e){this.search=e.target.innerText},extClick(e,t){this.sheetContext=t(),this.sheet=!0}},props:{headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function,headerFilter:{Function:Function,default:()=>()=>!0},dataFilter:{Function:Function,default:()=>()=>!0},extraFilters:Array}},me=pe,ge=(0,P.Z)(me,ie,ue,!1,null,"a7c251f2",null),he=ge.exports,$e={name:"TabDataPage",data(){return{selectedGroup:this.tabs.length>0?this.tabs[0].value:"",headerFilter:e=>"ALL"==e.group||e.group.split("|").includes(this.selectedGroup),dataFilter:e=>e.tabGroup.split("|").includes(this.selectedGroup)}},computed:{selectedTab(){return this.tabs.find((e=>e.value==this.selectedGroup))},searchableCol(){return this.headers.filter((e=>e.searchable)).map((e=>e.value))},extraFilters(){return this.selectedTab.dataFilters}},methods:{tabChange(e){const t=this.tabs[e];this.selectedGroup=t.value,this.$emit("tabChange",t.value)}},props:{tabs:Array,headersSource:Array,itemsSource:Array,headerLabels:Array,mapper:Function},components:{DataPage:he}},be=$e,ke=(0,P.Z)(be,Q,Y,!1,null,"28fd8784",null),_e=ke.exports;function Le(e,t,a,l,s){return{group:e,label:t,text:a,value:l,groupable:!1,...s}}function ve(e,t){return t.has(e)?t.get(e):e}function ye(e){return e>0?"是":""}const Ae=new Map([[0,"男"],[1,"女"],[2,"妖"],[3,"非男"],[-1,""]]);function Fe(e){return ve(e,Ae)}const xe=new Map([[1,"慕容世家"],[2,"大理段氏"],[3,"黄金家族"],[4,"天波杨府"],[6,"爱新觉罗"],[7,"凤阳朱氏"],[0,""],[-1,""]]);function Oe(e){return ve(e,xe)}const Ie=new Map([[1,"峨眉派"],[2,"武当派"],[3,"逍遥派"],[4,"丐帮"],[5,"桃花岛"],[6,"日月教"],[7,"华山派"],[8,"明教"],[9,"古墓派"],[0,""],[-1,""]]);function Ce(e){return ve(e,Ie)}const Ee=new Map([[-1,""],[0,"武器"],[1,"防具"],[2,"骑宠"]]);function Ve(e){return ve(e,Ee)}const Se=new Map([[0,"阴"],[1,"阳"],[2,"调和"]]);function De(e){return ve(e,Se)}function Te(e){return-1==e||2==e?"":ve(e,Se)}function we(e){return 2==e?"调和":0==e||-1==e?"":e}function Be(e){return 0==e?"":1==e?"左右互搏":2==e?"双手":e}const Pe=new Map([[1,"内伤"],[2,"虚弱"],[3,"盲目"],[4,"外伤"],[5,"剧毒"],[6,"厌食"],[7,"定身"],[8,"点穴"],[9,"封气"],[10,"冰封"],[11,"封招"],[100,"随机"]]);function Ze(e){return 0==e?"":100==e?"解除全部":e<0?"造成"+ve(-e,Pe):"解除"+ve(e,Pe)}const Ge=new Map([[0,"剧情"],[1,"装备"],[2,"秘籍"],[3,"药品"],[4,"暗器"]]);function Me(e){return ve(e,Ge)}const Ne=new Map([[0,"暗毒"],[1,"拳掌"],[2,"御剑"],[3,"兵器"],[4,"指腿"],[5,"内功"],[6,"轻功"],[7,"天赋"],[8,"特技"]]);function je(e){return ve(e,Ne)}const qe=new Map([[0,""],[1,"1级"],[2,"2级"],[3,"3级"],[4,"4级"],[5,"5级"],[6,"特殊"],[7,"防功"]]);function He(e){return ve(e,qe)}const Ke=new Map([[0,"伤害"],[1,"杀伤内力"],[2,"治疗"],[3,"恢复内力"]]);function Ue(e){return ve(e,Ke)}const Re=new Map([[0,"点"],[1,"线"],[2,"十"],[3,"面"],[4,"菱"],[5,"全"],[6,"自"],[7,"田"],[8,"井"],[9,"米"],[10,"角"],[11,"楔"],[12,"卐"]]);function Qe(e){return ve(e,Re)}function Ye(e,t){const a=t(e);return a?`[${a["id"]}]${a["name"]}`:e}function Xe(e){return-1==e?"":Ye(e,f)}function We(e){return-1==e||0==e?"":Ye(e,d)}function ze(e){return-1==e||0==e?"":Ye(e,m)}const Je=[{title:"武功秘籍",value:"BOOK",dataFilters:[{type:"select",label:"秘籍种类",value:["拳掌","御剑","兵器","指腿","暗毒","内功","轻功","制药","特殊","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;if(0!=t.prd_mtl)return"制药"==e;if(t.targetSkill){const a=p(t.targetSkill),l=je(a.type);return l==e}return"特殊"==e}}]},{title:"神兵宝甲",value:"EQUIP",dataFilters:[{type:"select",label:"装备位置",value:["武器","防具","骑宠","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.position==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"灵丹妙药",value:"MEDIC"},{title:"伤人暗器",value:"THROWN"},{title:"剧情物品",value:"STORY"}],et={targetSkill:We,req_hero1:Xe,req_hero2:Xe,prd_mtl:ze,prd_item1:ze,prd_item2:ze,prd_item3:ze,prd_item4:ze,useSkill:We,type:Me,req_gender:Fe,req_family:Oe,req_party:Ce,req_mpKind:Te,attr_mpKind:we,position:Ve,debuff_type:Ze,flag_newbie:ye,flag_forge:ye},tt={0:"STORY",1:"EQUIP",2:"BOOK",3:"MEDIC",4:"THROWN"},at=[Le("ALL","","序号","id",{align:"start"}),Le("ALL","","名称","name"),Le("EQUIP","","装备位置","position"),Le("BOOK","","练出武功","targetSkill"),Le("BOOK","","级别","level"),Le("ALL","desc","物品说明","desc"),Le("BOOK","req","需内力性质","req_mpKind",{searchable:!0}),Le("BOOK|EQUIP","req","需性别","req_gender",{searchable:!0}),Le("BOOK|EQUIP","req","需血族","req_family",{searchable:!0}),Le("BOOK|EQUIP","req","需门派","req_party",{searchable:!0}),Le("BOOK|EQUIP","req","需特殊人物1","req_hero1",{searchable:!0}),Le("BOOK|EQUIP","req","需特殊人物2","req_hero2",{searchable:!0}),Le("BOOK","req","需资质","req_itl"),Le("BOOK|EQUIP","req","需拳掌","req_fs"),Le("BOOK|EQUIP","req","需御剑","req_ss"),Le("BOOK|EQUIP","req","需兵器","req_ws"),Le("BOOK|EQUIP","req","需指腿","req_rs"),Le("BOOK|EQUIP|THROWN","req","需暗毒","req_ts"),Le("BOOK|EQUIP|MEDIC","req","需内力","req_mp"),Le("BOOK|EQUIP","req","需攻击","req_atk"),Le("BOOK","req","需轻功","req_agi"),Le("BOOK","req","需医疗","req_heal"),Le("BOOK","req","需用毒","req_poiMk"),Le("BOOK|MEDIC|THROWN","attr","加生命","attr_hp"),Le("BOOK|MEDIC","attr","加血量","attr_hpMax"),Le("BOOK|MEDIC","attr","加内力","attr_mp"),Le("BOOK|MEDIC","attr","加功力","attr_mpMax"),Le("MEDIC","attr","加体力","attr_vgr"),Le("MEDIC|THROWN","attr","中毒/解毒","attr_poi"),Le("MEDIC","attr","加气格","attr_eng"),Le("MEDIC","attr","受伤度","attr_inj"),Le("BOOK|EQUIP","attr","总属性","attr_all"),Le("BOOK|EQUIP|MEDIC","attr","加攻击","attr_atk"),Le("BOOK|EQUIP|MEDIC","attr","加防御","attr_def"),Le("BOOK|EQUIP|MEDIC","attr","加轻功","attr_agi"),Le("BOOK|EQUIP|MEDIC","attr","加拳掌","attr_fs"),Le("BOOK|EQUIP|MEDIC","attr","加御剑","attr_ss"),Le("BOOK|EQUIP|MEDIC","attr","加兵器","attr_ws"),Le("BOOK|EQUIP|MEDIC","attr","加指腿","attr_rs"),Le("BOOK|EQUIP|MEDIC","attr","加暗毒","attr_ts"),Le("BOOK","attr","加医疗","attr_heal"),Le("BOOK","attr","加用毒","attr_poiMk"),Le("BOOK|EQUIP","attr","加解毒","attr_poiRd"),Le("BOOK|EQUIP|MEDIC","attr","加抗毒","attr_poiRs"),Le("BOOK|EQUIP","attr","加带毒","attr_poiAt"),Le("MEDIC","attr","加资质","attr_itl"),Le("MEDIC|BOOK","attr","加武常","attr_klg"),Le("BOOK","attr","改变内力性质","attr_mpKind"),Le("BOOK","attr","改变攻击次数","attr_atkCnt"),Le("EQUIP","spec","使用武功","useSkill"),Le("EQUIP|MEDIC|THROWN","spec","附加状态","debuff_type"),Le("EQUIP|MEDIC|THROWN","spec","附加状态几率","debuff_rate"),Le("EQUIP|MEDIC|THROWN","spec","附加状态回合","debuff_turn"),Le("BOOK|EQUIP|MEDIC|THROWN","spec","出售价格","price"),Le("BOOK","spec","需材料","prd_mtl"),Le("BOOK","spec","炼出物品1","prd_item1"),Le("BOOK","spec","炼出物品2","prd_item2"),Le("BOOK","spec","炼出物品3","prd_item3"),Le("BOOK","spec","炼出物品4","prd_item4"),Le("BOOK","spec","需材料数量1","prd_cnt1"),Le("BOOK","spec","需材料数量2","prd_cnt2"),Le("BOOK","spec","需材料数量3","prd_cnt3"),Le("BOOK","spec","需材料数量4","prd_cnt4"),Le("BOOK","spec","新手光环","flag_newbie"),Le("EQUIP","spec","限制打造","flag_forge")],lt=[{text:"说明",value:"desc"},{text:"需求",value:"req",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function st(e){if(!e)return e;const t={};if(t["tabGroup"]=tt[e.type],e.targetSkill>0){const a=d(e.targetSkill);if(a)switch(a.type){case 0:t["level"]=e.attr_ts;break;case 1:t["level"]=e.attr_fs;break;case 2:t["level"]=e.attr_ss;break;case 3:t["level"]=e.attr_ws;break;case 4:t["level"]=e.attr_rs;break}}if(Object.entries(e).forEach((([e,a])=>{t[e]=et[e]?et[e](a):a})),t["attr_all"]=nt(e),e["req_hero1"]>=0){const a=f(e["req_hero1"]);a&&a.ke&&(t["ke"]=1)}return t}function nt(e){if(!e)return 0;const t=Number(e["attr_atk"])+Number(e["attr_def"])+Number(e["attr_agi"])+Number(e["attr_fs"])+Number(e["attr_ss"])+Number(e["attr_ws"])+Number(e["attr_rs"])+Number(e["attr_ts"]);return t>0?t:""}var rt={name:"ItemDataView",data(){return{selectType:"BOOK",tabs:Je,headerLabels:lt,convertValue:st}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return at},items(){return Object.values(this.$store.state.ItemSource)}},components:{TabDataPage:_e}},ct=rt,ot=(0,P.Z)(ct,H,K,!1,null,"72838e92",null),it=ot.exports,ut=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},ft=[];a(1703),a(2087);const dt={"标准裸攻":1200,"标准裸防":1200,"标准裸轻":1200,"标准场攻":1400,"标准场防":1750,"标准场轻":1300,"标准时序":6400,"标准裸主系":1200,"标准场主系":1400,"标准副系":400,"标准敌方场攻":1250,"标准敌方场防":1250,"标准敌方场轻":950,"标准敌方时序":5e3,"标准敌方武常":700,"标准武功威力":2e3,"标准暴击威力":1280,"标准突防威力":900,"标准破甲威力":600,"标准破军威力":450,"破防指数系数":.001,"减破防指数系数":5e-4,"破防分值系数":.003,"主系分值权重":.9,"时序分值系数":10,"轻功命中基准值":9e3,"命中伤害分值系数":4,"吸血分值基础":1.5,"吸血分值系数":5,"双击分值系数":1.08,"三击分值系数":2.52,"被攻击受伤度分值系数":3.6,"攻击受伤度分值系数":.9,"伤害反弹分值系数":2,"伤害转移分值系数":1,"伤害反震分值系数":5,"异常概率基础值":.2,"主动伤害权重":.8},pt=[[0,0,0],[5,.196269186,.385470032],[10,.361933895,.695426217],[15,.500343722,.941680016],[20,.614654319,1.134735539],[25,.707827406,1.283866457],[30,.78263076,1.397192897],[35,.841638223,1.481758346],[40,.8872297,1.543606558],[45,.921591157,1.587858451],[50,.946714622,1.618789015],[55,.964398185,1.63990421],[60,.976246001,1.654017874],[65,.983668285,1.663328621],[70,.987881313,1.669496746],[75,.989907427,1.673721126],[80,.990575029,1.676816127],[85,.990518582,1.679288503],[90,.990178615,1.681414297],[95,.98987473,1.690323893],[100,.98987473,1.71981649]],mt=[[0,.25,.25,.5],[5,.25,.25,.5],[10,.2,.2,.4],[15,.15,.15,.3],[20,.1,.1,.2]],gt=[[0,0],[10,1.111],[20,2.5],[30,4.286],[40,6.667],[50,9.667],[60,13.333],[70,17.778],[80,23.333],[90,30.222],[100,38.889]],ht={"点穴":10,"封气":.7,"虚弱":.5,"盲目":.2,"定身":.6,"厌食":.1,"冰封":.2,"封招":.3,"剧毒":.4,"外伤":.2,"内伤":.2,"随机":.34},$t={"封气":.5,"点穴":.3,"虚弱":.3,"盲目":.2,"定身":.2,"厌食":.2,"冰封":.2,"封招":.2,"剧毒":.1,"外伤":.1,"内伤":.1,"全部":2.4,"破甲":.3,"突防":.3,"杀气":.1,"杀内":.1,"杀体":.1,"杀命":.1,"中毒":.1,"秒杀":.2,"受伤":3.6,"双击":.3,"暴击":.5,"反击":.5,"击退":.3,"暗器":.1,"外功":1},bt=["拳掌","御剑","兵器","指腿","暗毒"],kt=["受伤","中毒","点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","暴击","双击","破甲","突防","反击","杀命","杀内","杀体","杀气","秒杀"],_t=["点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封"];var Lt={constants:dt,castConf:pt,rangeConf:mt,debuffConf:ht,immuneConf:$t,repelConf:gt,classes:bt,immuneTags:kt,debuffTags:_t,getTotalAtk(e){return e.getValueInc("裸攻")*dt["标准裸攻"]+e.getValueInc("场攻")*dt["标准场攻"]},getPower(e){return e.getValueInc("威力")*dt["标准武功威力"]},getDePower(e){return-e.getValueInc("减威")*dt["标准武功威力"]},getClassPower(e){return bt.map((t=>e.getClassValueInc(t,"威力")*dt["标准武功威力"]))},getClassDePower(e){return bt.map((t=>-e.getClassValueInc(t,"减威")*dt["标准武功威力"]))},getTotalDef(e){return e.getValueInc("裸防")*dt["标准裸防"]+e.getValueInc("场防")*dt["标准场防"]},getTotalAgi(e){return e.getValueInc("裸轻")*dt["标准裸轻"]+e.getValueInc("场轻")*dt["标准场轻"]},getTotalSeriesSpeed(e){return e.getValue("裸系")*(.2*dt["标准裸主系"]+.8*dt["标准副系"])+e.getValue("场系")*(.2*dt["标准场主系"]+.8*dt["标准副系"])}};function vt(e,t){return t=t||0,a=>{const l=t+a*e;return{res:l,factor:e,base:t}}}function yt(e){return t=>{const a=1/(1-t)-1;return a*e}}function At(e){return e=e||{},(t,a,l)=>{if(e.flag&&1==a)return t;void 0!=e["pct"]&&1!=e["pct"]||(a=`${(100*a).toFixed(0)}%`),e["rate"]&&(l=l||1,a=`${a}:${(100*l).toFixed(0)}%`);const s=e["symbol"]||"+";return`${t}${s}${a}`}}const Ft={"伤害":{cmn:!0,pct:!0,calcFunc:vt(4),fmtFunc:At({symbol:"*"})},"命中":{cmn:!0,pct:!0,calcFunc:vt(4),fmtFunc:At({symbol:"*"})},"减伤":{cmn:!0,pct:!0,calcFunc:yt(4),fmtFunc:At({symbol:"*"})},"闪避":{cmn:!0,pct:!0,calcFunc:yt(4),fmtFunc:At({symbol:"*"})},"吸血":{cmn:!0,calcFunc:vt(5,1.5),fmtFunc:At()},"场系":{name:"战场五系",cmn:!0,fmtFunc:At({symbol:"*"})},"裸系":{name:"自身五系",cmn:!0,fmtFunc:At({symbol:"*"})},"攻系":{name:"攻防五系",cmn:!0,fmtFunc:At({symbol:"*"})},"突防":{calcFunc:vt(5),fmtFunc:At()},"破甲":{calcFunc:vt(3),fmtFunc:At()},"破军":{calcFunc:vt(2),fmtFunc:At()},"三击":{calcFunc:vt(2.5),fmtFunc:At()},"无视武常":{calcFunc:vt(24),fmtFunc:At({flag:!0})},"无视双方武常":{calcFunc:vt(2.4),fmtFunc:At({flag:!0})},"主动伤害":{calcFunc:vt(3.2),fmtFunc:At({symbol:"*"})},"不受击":{cmn:!0,fmtFunc:At()},"伤害减半":{cmn:!0,fmtFunc:At()},"反击":{calcFunc:vt(2),fmtFunc:At({flag:!0})},"星璇反击":{calcFunc:vt(4),fmtFunc:At({flag:!0})},"万相反击":{calcFunc:vt(10),fmtFunc:At({flag:!0})},"星阵反击":{calcFunc:vt(20),fmtFunc:At({flag:!0})},"六龙":{calcFunc:vt(10),fmtFunc:At({flag:!0})},"天极":{calcFunc:vt(16),fmtFunc:At({flag:!0})},"无视天赋":{calcFunc:vt(5),fmtFunc:At({flag:!0})},"无视特技":{calcFunc:vt(6.25),fmtFunc:At({flag:!0})},"无视称号":{calcFunc:vt(2),fmtFunc:At({flag:!0})},"无视内轻属性":{calcFunc:vt(3),fmtFunc:At({flag:!0})},"回血":{calcFunc:vt(.002),fmtFunc:At({pct:!1})},"回血比":{name:"百分比回血",calcFunc:vt(20),fmtFunc:At()},"回内":{calcFunc:vt(25e-5),fmtFunc:At({pct:!1})},"回内比":{name:"百分比回内",calcFunc:vt(2.5),fmtFunc:At()},"回体":{calcFunc:vt(.02),fmtFunc:At({pct:!1})},"回伤":{calcFunc:vt(.03),fmtFunc:At({pct:!1})},"回气":{calcFunc:vt(.3),fmtFunc:At({pct:!1})},"解除异常":{calcFunc:vt(1.6),fmtFunc:At({flag:!0})},"重伤复活":{calcFunc:vt(.5),fmtFunc:At({flag:!0})},"满血复活":{calcFunc:vt(1.5),fmtFunc:At({flag:!0})},"攻击回内":{calcFunc:vt(25e-5),fmtFunc:At({pct:!1})},"杀内":{calcFunc:vt(4e-4),fmtFunc:At({pct:!1})},"杀内比":{name:"百分比杀内",calcFunc:vt(4),fmtFunc:At()},"吸内比":{name:"百分比吸内",calcFunc:vt(10),fmtFunc:At()},"杀体":{calcFunc:vt(.05),fmtFunc:At({pct:!1})},"杀气":{calcFunc:vt(.3),fmtFunc:At({pct:!1})},"清气":{calcFunc:vt(3),fmtFunc:At({pct:!1})},"中毒":{calcFunc:vt(.005),fmtFunc:At({pct:!1})},"护体":{calcFunc:vt(5),fmtFunc:At()},"全屏爆绝":{calcFunc:vt(3),fmtFunc:At()},"爆内时爆绝":{calcFunc:vt(.3),fmtFunc:At()},"双击全伤":{calcFunc:vt(1.6),fmtFunc:At({flag:!0})},"击退":{name:"击退行动条",cmn:!0,fmtFunc:(e,t,a)=>`${e}${(100*t).toFixed(0)}%+${(100*a).toFixed(0)}%`}},xt={"主系":{factor:.9},"单系":{factor:.2},"被击中":{factor:2},"闪避":{factor:.7},"男性":{factor:.6},"女性":{factor:.4}};class Ot{constructor(){this.valueAttrs={},this.classValueAttrs={},this.extValues=[],this.flags={},this.immunes={},this.deBuffMakes={}}isEmpty(){return 0===Object.keys(this.valueAttrs).length&&0===Object.keys(this.classValueAttrs).length&&0===this.extValues.length&&0===Object.keys(this.flags).length&&0===Object.keys(this.immunes).length&&0===Object.keys(this.deBuffMakes).length}getValue(e){return this.valueAttrs[e]||0}setValue(e,t){this.valueAttrs[e]=t}getValueInc(e){const t=this.getValue(e);return 0!=t?t-1:0}getClassValue(e,t){return this.classValueAttrs[e]&&this.classValueAttrs[e][t]||0}getMainClassValue(e){const t=Math.max;return t(...Lt.classes.map((t=>this.getClassValue(t,e))))}setClassValue(e,t,a){this.classValueAttrs[e]||(this.classValueAttrs[e]={}),this.classValueAttrs[e][t]=a}getClassValueInc(e,t){const a=this.getClassValue(e,t);return 0!=a?a-1:0}getMainClassValueInc(e,t){const a=t?Math.min:Math.max;return a(...Lt.classes.map((t=>this.getClassValueInc(t,e))))}getExtValues(){return this.extValues}setExtValue(e,t,a){const l={attrType:e,value:t,condition:a};this.extValues.push(l)}addDeBuffMake(e,t,a){this.deBuffMakes[e]||(this.deBuffMakes[e]=[]),this.deBuffMakes[e].push({rate:t,round:a})}addImmune(e){this.immunes[e]=!0}}function It(e){const t=e.toFixed(0);return t>=0?t:`(${t})`}function Ct(e){const t=e.toFixed(2);return t>=0?t:`(${t})`}class Et{constructor(e){this.type=e,this.logs=[],this.gradePoint=0}log(e){this.logs.push(e)}toString(){return`${this.type}: ${this.gradePoint.toFixed(2)}`}detail(){return this.logs.join("\n")}}class Vt{constructor(e){this.entries=[],this.factor=e||1,this.totalGrade=0}addEntry(e){e&&0!=e.gradePoint&&this.entries.push(e)}calcTotalGradePoint(){let e=0;return this.entries.forEach((t=>{e+=t.gradePoint})),this.totalGrade=e*this.factor,{base:e,final:this.totalGrade}}toString(e){e=e||"";const t=this.calcTotalGradePoint(),a=this.entries.map((e=>e.toString())).join("，");return 1!=this.factor?`${e}分值：${t.final.toFixed(2)}（${t.base.toFixed(2)} * ${this.factor})，[${a}]`:`${e}分值：${t.final.toFixed(2)}，[${a}]`}detail(){const e=this.entries.map((e=>`[${e.toString()}]\n${e.detail()}\n`)).join("\n");return e}}function St(e,t){let a=new Vt(t);return a.addEntry(Dt(e)),a.addEntry(wt(e)),a.addEntry(Pt(e)),a.addEntry(Gt(e)),a.addEntry(Mt(e)),a.addEntry(Zt(e)),a.addEntry(Nt(e)),a.addEntry(jt(e)),a.addEntry(qt(e)),a.addEntry(Ht(e)),a.addEntry(Kt(e)),a.addEntry(Ut(e)),a.addEntry(Qt(e)),a.addEntry(Rt(e)),a.addEntry(Yt(e)),a}function Dt(e){const t=new Et("时序分"),a=Lt.getTotalAtk(e),l=Lt.getTotalDef(e),s=Lt.getTotalAgi(e),n=Lt.getTotalSeriesSpeed(e);0==a&&0==l&&0==s&&0==n||t.log(`自身属性增幅：总攻击${It(a)}，总防御${It(l)}，总轻功${It(s)}，平均系数${It(n)}`);const r=-Lt.constants["标准敌方场攻"]*e.getValueInc("敌攻"),c=-Lt.constants["标准敌方场防"]*e.getValueInc("敌防"),o=-Lt.constants["标准敌方场轻"]*e.getValueInc("敌轻");0==r&&0==c&&0==o||t.log(`敌方属性降幅：攻击${It(r)}，防御${It(c)}，轻功${It(o)}`);const i=e.getValueInc("时序"),u=-e.getValueInc("敌时");0==i&&0==u||t.log(`时序系数：自身时序增加${Ct(i)}，敌方时序降低${Ct(u)}`);const f=Lt.constants["标准时序"],d=Lt.constants["标准敌方时序"],p=Lt.constants["时序分值系数"];t.log(`常数：标准时序${f}，标准敌方时序${d}，时序分值系数${p}`);const m=a+l+2*s+n;0!=m&&t.log(`自身属性时序增加值 = 总攻击+总防御+总轻功*2+平均系数 = ${It(a)}+${It(l)}+${It(s)}*2+${It(n)} = ${It(m)}`);const g=(f+m)*(1+i);g!=f&&t.log(`自身最终时序 = (标准时序+属性时序增加值)*(1+时序增加系数) = (${f}+${It(m)})*(1+${Ct(i)}) = ${It(g)}`);const h=r+c+2*o;0!=h&&t.log(`敌方时序属性降低值 = 攻击降低+防御降低+轻功降低*2 = ${It(r)}+${It(c)}+${It(o)}*2 = ${It(h)}`);const $=(d-h)*(1-u);t.log(`敌方最终时序 = (标准时序-属性时序降低值)*(1-时序降低系数) = (${d}-${It(h)})*(1-${Ct(u)}) = ${It($)}`);const b=g/$/(f/d);t.log(`最终时序倍率 = (自身最终时序/标准时序)/(敌方最终时序/标准敌方时序) = (${It(g)}/${f})/(${It($)}/${d}) = ${Ct(b)}`);const k=(b-1)*p;return t.log(`时序分值 = (最终时序倍率-1)*时序分值系数 = (${Ct(b)}-1)*${p} = ${Ct(k)}`),t.gradePoint=k,t}function Tt(e,t){const a=e.getValueInc("裸攻"),l=e.getValueInc("场攻"),s=Lt.constants["标准裸攻"],n=Lt.constants["标准场攻"],r=a*s+l*n;0==a&&0==l||(t.log(`属性：自身攻击加成${Ct(a)}，战场攻击加成${Ct(l)}；常数：标准自身攻击${It(s)}，标准战场攻击${It(n)}`),t.log(`计算：总攻击增加 = 自身攻击加成*标准自身攻击+战场攻击加成*标准战场攻击 = ${Ct(a)}*${s}+${Ct(l)}*${n} = ${It(r)}`));const c=-e.getValueInc("敌防"),o=Lt.constants["标准敌方场防"],i=c*o;0!=c&&(t.log(`属性：敌方防御减成：${Ct(c)}，常数：标准敌方防御${o}`),t.log(`计算：敌方防御降低 = 敌方防御减成*标准敌方防御 = ${Ct(c)}*${o} = ${Ct(i)}`));const u=e.getValueInc("威力"),f=Lt.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力加成${Ct(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系威力攻击增加 = 全系威力加成*标准威力攻击当量 = ${Ct(u)}*${f} = ${It(d)}`));const p=e.getMainClassValueInc("威力"),m=p*f;p>0&&(t.log(`属性：主系威力加成${Ct(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系威力攻击增加 = 主系威力加成*标准威力攻击当量 = ${Ct(p)}*${f} = ${It(m)}`));const g=e.getValue("裸系"),h=e.getValue("场系"),$=e.getValue("攻系"),b=e.getMainClassValue("攻系"),k=Lt.constants["标准裸主系"],_=Lt.constants["标准场主系"],L=Lt.constants["标准副系"],v=1.5*(g*k+(h+$+b)*_),y=1.5*(g*L+h*L+$*L);0==g&&0==h&&0==$&&0==b||(t.log(`属性：自身系数加成${Ct(g)}，战场系数加成${Ct(h)}，攻防系数加成${Ct($)}，主系攻防系数加成${Ct(b)}；常数：标准主系自身数值${It(k)}，标准主系战场数值${It(_)}，标准副系数值${It(L)}`),t.log(`计算：主系攻击增加 = (自身系数加成*标准主系自身数值+(战场系数加成+攻防系数加成+主系攻防系数加成)*标准主系战场数值)*1.5 = (${Ct(g)}*${It(k)}+(${Ct(h)}+${Ct($)}+${Ct(b)})*${It(_)})*1.5 = ${It(v)}`),t.log(`计算：副系攻击增加 = (自身系数加成*标准副系数值+(战场系数加成+攻防系数加成)*标准副系数值)*1.5 = (${Ct(g)}*${It(L)}+(${Ct(h)}+${Ct($)})*${It(L)})*1.5 = ${It(y)}`));const A=r+2*i+d+m+v,F=r+2*i+d+y;return t.log("总攻击公式：总攻击 = 属性攻击+威力攻击+系数攻击+敌方防御降低*2"),t.log(`主系总攻击 = ${It(r)}+(${It(d)}+${It(m)})+${It(v)}+${It(i)}*2 = ${It(A)}`),t.log(`副系总攻击 = ${It(r)}+${It(d)}+${It(y)}+${It(i)}*2 = ${It(F)}`),[A,F]}function wt(e){const t=new Et("基本攻击分"),[a,l]=Tt(e,t),s=Lt.constants["破防指数系数"],n=Lt.constants["破防分值系数"],r=Lt.constants["主系分值权重"];t.log(`分值公式：分值 = 攻击*(1+惩罚系数*攻击)*分值系数*主副系占比；常数：惩罚系数${s}，分值系数${n}，主系权重${r}`);const c=Xt(a,s,n)*r,o=Xt(l,s,n)*(1-r);return t.log(`主系分值 = ${It(a)}*(1+${s}*${It(a)})*${n}*${Ct(r)} = ${Ct(c)}`),t.log(`副系分值 = ${It(l)}*(1+${s}*${It(l)})*${n}*${Ct(1-r)} = ${Ct(o)}`),t.gradePoint=c+o,t.log(`总分值 = ${Ct(c)}+${Ct(o)} = ${Ct(t.gradePoint)}`),t}function Bt(e,t){const a=e.getValueInc("裸防"),l=e.getValueInc("场防"),s=Lt.constants["标准裸防"],n=Lt.constants["标准场防"],r=a*s+l*n;0==a&&0==l||(t.log(`属性：自身防御加成${Ct(a)}，战场防御加成${Ct(l)}；常数：标准自身防御${It(s)}，标准战场防御${It(n)}`),t.log(`计算：总防御增加 = 自身防御加成*标准自身防御+战场防御加成*标准战场防御 = ${Ct(a)}*${s}+${Ct(l)}*${n} = ${It(r)}`));const c=-e.getValueInc("敌攻"),o=Lt.constants["标准敌方场攻"],i=c*o;0!=c&&(t.log(`属性：敌方攻击减成：${Ct(c)}，常数：标准敌方攻击${o}`),t.log(`计算：敌方攻击降低 = 敌方攻击减成*标准敌方攻击 = ${Ct(c)}*${o} = ${Ct(i)}`));const u=-e.getValueInc("减威"),f=Lt.constants["标准武功威力"],d=u*f;0!=u&&(t.log(`属性：全系威力减成${Ct(u)}；常数：标准威力攻击当量${f}`),t.log(`计算：全系减威防御增加 = 全系威力减成*标准威力攻击当量 = ${Ct(u)}*${f} = ${It(d)}`));const p=-e.getMainClassValueInc("减威"),m=p*f;0!=p&&(t.log(`属性：主系威力减成${Ct(p)}；常数：标准威力攻击当量${f}`),t.log(`计算：主系减威防御增加 = 主系威力减成*标准威力攻击当量 = ${Ct(p)}*${f} = ${It(m)}`));const g=e.getValue("裸系"),h=e.getValue("场系"),$=e.getValue("攻系"),b=e.getMainClassValue("攻系"),k=Lt.constants["标准裸主系"],_=Lt.constants["标准场主系"],L=Lt.constants["标准副系"],v=1.5*(g*k+h*_+($+b)*_),y=1.5*(g*L+h*L+$*L);0==g&&0==h&&0==$&&0==b||(t.log(`属性：自身系数加成${Ct(g)}，战场系数加成${Ct(h)}，攻防系数加成${Ct($)}，主系攻防系数加成${Ct(b)}；常数：标准主系自身数值${It(k)}，标准主系战场数值${It(_)}，标准副系数值${It(L)}`),t.log(`计算：主系防御增加 = (自身系数加成*标准主系自身数值+(战场系数加成+攻防系数加成+主系攻防系数加成)*标准主系战场数值)*1.5 = (${Ct(g)}*${It(k)}+(${Ct(h)}+${Ct($)}+${Ct(b)})*${It(_)})*1.5 = ${It(v)}`),t.log(`计算：副系防御增加 = (自身系数加成*标准副系数值+(战场系数加成+攻防系数加成)*标准副系数值)*1.5 = (${Ct(g)}*${It(L)}+(${Ct(h)}+${Ct($)})*${It(L)})*1.5 = ${It(y)}`));const A=2*r+i+d+m+v,F=2*r+i+d+y;return t.log("总防御公式：总防御 = 属性防御*2+威力防御+系数防御+敌方攻击降低"),t.log(`主系总防御 = ${It(r)}*2+(${It(d)}+${It(m)})+${It(v)}+${It(i)} = ${It(A)}`),t.log(`副系总防御 = ${It(r)}*2+${It(d)}+${It(y)}+${It(i)} = ${It(F)}`),[A,F]}function Pt(e){const t=new Et("基本防御分"),[a,l]=Bt(e,t),s=Lt.constants["减破防指数系数"],n=Lt.constants["破防分值系数"],r=.2;t.log(`分值公式：分值 = 防御*(1+惩罚系数*防御)*分值系数*主副系占比；常数：惩罚系数${s}，分值系数${n}，主系权重${r}`);const c=Xt(a,s,n)*r,o=Xt(l,s,n)*(1-r);return t.log(`主系分值 = ${It(a)}*(1+${s}*${It(a)})*${n}*${Ct(r)} = ${Ct(c)}`),t.log(`副系分值 = ${It(l)}*(1+${s}*${It(l)})*${n}*${Ct(1-r)} = ${Ct(o)}`),t.gradePoint=c+o,t.log(`总分值 = ${Ct(c)}+${Ct(o)} = ${Ct(t.gradePoint)}`),t}function Zt(e){const t=new Et("暴击分"),a=e.getValue("暴击");if(0==a)return null;const l=Tt(e,{log:()=>{}});t.log(`攻击属性: 主系攻击${It(l[0])}，副系攻击${It(l[1])}`);const s=Lt.constants["标准暴击威力"],n=Lt.constants["破防指数系数"],r=Lt.constants["破防分值系数"],c=Lt.constants["主系分值权重"],o=l.map((e=>Xt(e,n,r)));t.log(`攻击分值: 主系分值${Ct(o[0])}，副系分值${Ct(o[1])}`);let i=0;const u=(e,a,s)=>{t.log(`计算${e}相关属性: ${e}率${Ct(a)}；常数：标准${e}威力${It(s)}`);const u=l.map((e=>e+s));t.log(`${e}时攻击威力 = 基本攻击威力+标准${e}威力；主系攻击 = ${It(l[0])}+${s} = ${It(u[0])}，副系攻击 = ${It(l[1])}+${s} = ${It(u[1])}`);const f=u.map((e=>Xt(e,n,r)));t.log(`${e}时攻击分值计算：主系分值 = 计算攻击分值(${It(u[0])}) = ${Ct(f[0])}，副系分值 = 计算攻击分值(${It(u[1])}) = ${Ct(f[1])}`);const d=f.map(((e,t)=>(e-o[t])*a));t.log(`${e}附加分值 = (${e}时攻击分值-基础攻击分值)*${e}率；主系攻击分值 = (${Ct(f[0])}-${Ct(o[0])})*${Ct(a)}=${Ct(d[0])}，副系攻击分值 = (${Ct(f[1])} - ${Ct(o[1])})*${Ct(a)} = ${Ct(d[1])}`);const p=d[0]*c+d[1]*(1-c);return t.log(`综合${e}附加分值 = 主系攻击分值*主系分值权重+副系攻击分值*(1-主系分值权重) = ${Ct(d[0])}*${Ct(c)}+${Ct(d[1])}*${Ct(1-c)} = ${Ct(p)}`),i+=p,p},f=[];return a>0&&f.push(["暴击分值",u("暴击",a,s)]),t.log(`情景攻击总分 = ${f.map((([e,t])=>`${e}(${Ct(t)})`)).join(" + ")} = ${Ct(i)}`),t.gradePoint=i,t}function Gt(e){const t=new Et("增伤分"),a=e.getValueInc("命中"),l=e.getValueInc("伤害"),s=e.getMainClassValueInc("命中"),n=e.getMainClassValueInc("伤害");t.log(`属性：命中加成${Ct(a)}，伤害加成${Ct(l)}, 主系命中加成${Ct(s)}, 主系伤害加成${Ct(n)}`);const r=Lt.getTotalAgi(e),c=-Lt.constants["标准敌方场轻"]*e.getValueInc("敌轻"),o=Lt.constants["轻功命中基准值"],i=(r+c)/o;0==r&&0==c||(t.log(`属性计算：自身轻功增加 = ${It(r)}，敌方轻功降低 = ${It(c)}；常数：轻功命中基准值${o}`),t.log(`轻功命中加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${It(r)}+${It(c)})/${o}) = ${Ct(i)}`));const u=Lt.constants["命中伤害分值系数"],f=Lt.constants["主系分值权重"],d=(1+a)*(1+i)*(1+l),p=d*(1+s)*(1+n);t.log(`综合增伤 = (1+命中加成)*(1+轻功命中加成)*(1+伤害加成) = (1+${Ct(a)})*(1+${Ct(i)})*(1+${Ct(l)}) = ${Ct(d)}`),t.log(`主系增伤 = 综合增伤*(1+主系命中加成)*(1+主系伤害加成) = ${Ct(d)}*(1+${Ct(s)})*(1+${Ct(n)}) = ${Ct(p)}，副系增伤 = 综合增伤 = ${Ct(d)}`);const m=p>=1?p-1:1-1/p,g=d>=1?d-1:1-1/d;p<1?t.log(`主系增伤差值(修正) = 1-1/主系增伤 = 1-1/${Ct(p)} = ${Ct(m)}`):t.log(`主系增伤差值 = 主系增伤-1 = ${Ct(p)}-1 = ${Ct(m)}`),d<1?t.log(`副系增伤差值(修正) = 1-1/副系增伤 = 1-1/${Ct(d)} = ${Ct(g)}`):t.log(`副系增伤差值 = 副系增伤-1 = ${Ct(d)}-1 = ${Ct(g)}`);const h=m*u*f,$=g*u*(1-f),b=h+$;return t.log(`主系增伤分= 主系增伤差值*命中伤害分值系数*主系分值权重 = ${Ct(h)}*${u}*${f} = ${Ct(h)}`),t.log(`副系增伤分= 副系增伤差值*命中伤害分值系数*(1-主系分值权重) = ${Ct($)}*${u}*(1-${f}) = ${Ct($)}`),t.log(`总增伤分 = 主系增伤分+副系增伤分 = ${Ct(h)}+${Ct($)} = ${Ct(b)}`),t.gradePoint=b,t}function Mt(e){const t=new Et("减伤分"),a=-e.getValueInc("闪避"),l=-e.getValueInc("减伤"),s=-e.getMainClassValueInc("闪避",!0),n=-e.getMainClassValueInc("减伤",!0);t.log(`属性：闪避加成${Ct(a)}，减伤加成${Ct(l)}, 主系闪避加成${Ct(s)}, 主系减伤加成${Ct(n)}`);const r=Lt.getTotalAgi(e),c=-Lt.constants["标准敌方场轻"]*e.getValueInc("敌轻"),o=Lt.constants["轻功命中基准值"],i=(r+c)/o;0==r&&0==c||(t.log(`属性计算：自身轻功增加 = ${It(r)}，敌方轻功降低 = ${It(c)}；常数：轻功命中基准值${o}`),t.log(`轻功闪避加成 = (1+(自身轻功增加+敌方轻功降低)/轻功命中基准值) = (1+(${It(r)}+${It(c)})/${o}) = ${Ct(i)}`));let u=1;const f=[],d=e.getValue("不受击");d>0&&(u*=1-d,f.push({type:"不受攻击",value:Ct(1-d)}));const p=e.getValue("伤害减半");if(p>0&&(u*=1-p/2,f.push({type:"伤害减半",value:Ct(1-p/2)})),f.length>0){const e=f.map((e=>`${e.type}：${e.value}`)).join("，");t.log(`特殊减伤因素${e}`),f.length>1?t.log(`特殊减伤期望值 = ${f.map((e=>e.value)).join("*")} = ${Ct(u)}`):t.log(`特殊减伤期望值 = ${f[0].value}`)}const m=Lt.constants["命中伤害分值系数"],g=.2,h=(1-a)*(1-i)*(1-l)*u,$=h*(1-s)*(1-n);t.log(`综合减伤 = (1-闪避加成)*(1-轻功闪避加成)*(1-减伤加成)*特殊减伤期望 = (1-${Ct(a)})*(1-${Ct(i)})*(1-${Ct(l)})*${Ct(u)} = ${Ct(h)}`),t.log(`主系减伤 = 综合减伤*(1-主系闪避加成)*(1-主系减伤加成) = ${Ct(h)}*(1-${Ct(s)})*(1-${Ct(n)}) = ${Ct($)}，副系减伤 = 综合减伤 = ${Ct(h)}`);const b=$>=1?1-$:1/$-1,k=h>=1?1-$:1/h-1;$<1?t.log(`主系减伤差值(修正) = 1/主系减伤-1 = 1/${Ct($)}-1 = ${Ct(b)}`):t.log(`主系减伤差值(修正) = 1-主系减伤 = 1-${Ct($)} = ${Ct(b)}`),h<1?t.log(`副系减伤差值(修正) = 1/副系增伤-1 = 1/${Ct(h)}-1 = ${Ct(k)}`):t.log(`副系减伤差值(修正) = 1-副系减伤 = 1-${Ct(h)} = ${Ct(k)}`);const _=b*m*g,L=k*m*(1-g),v=_+L;return t.log(`主系减伤分= 主系减伤差值*命中伤害分值系数*主系分值权重 = ${Ct(_)}*${m}*${g} = ${Ct(_)}`),t.log(`副系减伤分= 副系减伤差值*命中伤害分值系数*(1-主系分值权重) = ${Ct(L)}*${m}*(1-${g}) = ${Ct(L)}`),t.log(`总减伤分 = 主系减伤分+副系减伤分 = ${Ct(_)}+${Ct(L)} = ${Ct(v)}`),t.gradePoint=v,t}function Nt(e){const t=new Et("双击分"),a=e.getValue("双击");if(0==a)return null;const l=Lt.constants["双击分值系数"];t.log(`属性：双击率 = ${Ct(a)}，常数：双击分值系数 = ${l}`);const s=Wt(a,0,l);return t.log(`双击分 = 双击率*双击分值系数 = ${Ct(a)}*${l} = ${Ct(s)}`),t.gradePoint=s,t}function jt(e){const t=new Et("出招分"),a=e.getValue("出招"),l=e.getMainClassValue("出招");t.log(`属性：全系出招率 = ${Ct(a)}；主系出招率 = ${Ct(l)}`);const s=Jt(a,Lt.castConf,(e=>e[2])),n=Jt(l,Lt.castConf,(e=>e[1]));return t.log(`查出招分表：全系出招分(${Ct(a)}) = ${Ct(s)}；主系出招分(${Ct(l)}) = ${Ct(n)}`),t.gradePoint=s+n,t.log(`出招分 = 全系出招分+主系出招分 = ${Ct(s)}+${Ct(n)} = ${Ct(t.gradePoint)}`),t}function qt(e){const t=new Et("距离分"),a=e.getValue("移动"),l=e.getValue("射程"),s=e.getValue("范围");t.log(`属性：移动${It(a)}，射程${It(l)}，范围${It(s)}`);const n=ea(a,Lt.rangeConf,(e=>e[1])),r=ea(l,Lt.rangeConf,(e=>e[2])),c=ea(s,Lt.rangeConf,(e=>e[3]));return t.log(`查表计算：移动分(${It(a)}) = ${Ct(n)}，射程分(${It(l)}) = ${Ct(r)}，范围分(${It(s)}) = ${Ct(c)}`),t.gradePoint=n+r+c,t.log(`距离分 = 移动分+射程分+范围分 = ${Ct(n)}+${Ct(r)}+${Ct(c)} = ${Ct(t.gradePoint)}`),t}function Ht(e){const t=new Et("吸血分"),a=e.getValue("吸血");if(0==a)return null;const l=Lt.constants["吸血分值基础"],s=Lt.constants["吸血分值系数"];t.log(`属性：吸血率${Ct(a)}，常数：吸血分值基础${l}，吸血分值系数${s}`);const n=Wt(a,l,s);return t.log(`吸血分 = 吸血率*吸血分值系数+吸血分值基础 = ${Ct(a)}*${s}+${l} = ${Ct(n)}`),t.gradePoint=n,t}function Kt(e){const t=new Et("受伤分"),a=e.getValueInc("加受伤");let l=-e.getValueInc("减受伤");if(0==a&&0==l)return null;l>1&&(l=1);const s=Lt.constants["攻击受伤度分值系数"],n=Lt.constants["被攻击受伤度分值系数"];t.log(`属性：攻击受伤度${Ct(a)}，被攻击受伤度${Ct(l)}，常数：攻击受伤度分值系数${s}，被攻击受伤度分值系数${n}`);const r=a>0?zt(a,s):-zt(a,n);a>0?t.log(`攻击受伤度分 = 攻击受伤度^2*攻击受伤度分值系数 = ${Ct(a)}^2*${s} = ${Ct(r)}`):a<0&&t.log(`攻击受伤度分 = -攻击受伤度^2*被攻击受伤度分值系数 = ${Ct(a)}^2*${n} = ${Ct(r)}`);const c=l>0?zt(l,n):-zt(l,s);l>0?t.log(`被攻击受伤度分 = 被攻击受伤度^2*被攻击受伤度分值系数 = ${Ct(l)}^2*${n} = ${Ct(c)}`):l<0&&t.log(`被攻击受伤度分 = -被攻击受伤度^2*攻击受伤度分值系数 = -${Ct(l)}^2*${s} = ${Ct(c)}`);const o=r+c;return t.log(`受伤分 = 攻击受伤度分+被攻击受伤度分 = ${Ct(r)}+${Ct(c)} = ${Ct(o)}`),t.gradePoint=o,t}function Ut(e){const t=new Et("反伤分"),a=e.getValue("反弹"),l=e.getValue("反震"),s=e.getValue("挪移");if(0==a&&0==l&&0==s)return null;const n=Lt.constants["伤害反弹分值系数"],r=Lt.constants["伤害反震分值系数"],c=Lt.constants["伤害转移分值系数"];t.log(`属性：反弹率${Ct(a)}，反震率${Ct(l)}，挪移率${Ct(s)}，常数：反弹分值系数${n}，反震分值系数${r}，挪移分值系数${c}`);const o=Wt(a,0,n),i=Wt(l,0,r),u=Wt(s,0,c);t.log(`反弹分 = 反弹率*反弹分值系数 = ${Ct(a)}*${n} = ${Ct(o)}`),t.log(`反震分 = 反震率*反震分值系数 = ${Ct(l)}*${r} = ${Ct(i)}`),t.log(`挪移分 = 挪移率*转移分值系数 = ${Ct(s)}*${c} = ${Ct(u)}`);const f=o+i+u;return t.log(`反伤分 = 反弹分+反震分+挪移分 = ${Ct(o)}+${Ct(i)}+${Ct(u)} = ${Ct(f)}`),t.gradePoint=f,t}function Rt(e){const t=new Et("免疫分");if(0==e.immunes.length)return null;let a=0;const l=[];return Object.entries(Lt.immuneConf).forEach((([t,s])=>{e.immunes[t]&&(a+=s,l.push({key:t,value:s}))})),t.log(`免疫条目：${l.map((e=>`${e.key}(${e.value})`)).join("，")}`),l.length>1?t.log(`免疫分 = ${l.map((e=>e.value)).join("+")} = ${Ct(a)}`):t.log(`免疫分 = ${Ct(a)}`),t.gradePoint=a,t}function Qt(e){const t=new Et("异常分");if(0==e.deBuffMakes.length)return null;let a=0;const l=[];if(Object.entries(Lt.debuffConf).forEach((([t,s])=>{const n=e.deBuffMakes[t];null!=n&&n.forEach((e=>{const n={};"点穴"==t&&(n["square"]=!0);const r=ta(e.rate/100,e.round,Lt.constants["异常概率基础值"],s,n);a+=r,l.push([t,e.rate,`${e.round}回合`,r])}))})),e.deBuffMakes["击退"]){const t=e.deBuffMakes["击退"];t.forEach((e=>{const t=10*(100/(100-e.round)-1),s=t*e.rate/100;a+=s,l.push(["击退",e.rate,`击退${e.round}%行动条`,s])}))}return t.log(`异常条目：${l.map((e=>`${e[0]}#${e[1]}%${e[2]}(${Ct(e[3])})`)).join("，")}`),l.length>1?t.log(`异常分 = ${l.map((e=>Ct(e[3]))).join("+")} = ${Ct(a)}`):t.log(`异常分 = ${Ct(a)}`),t.gradePoint=a,t}function Yt(e){const t=new Et("特殊词条分"),a=e.getExtValues();if(0==a.length)return null;let l=0;const s=[];return a.forEach((e=>{const t=e.attrType,a=Ft[t],n=e.value,r=a.calcFunc(n),c=e.condition;if(c){const e=xt[c];if(e){const t=e.factor;r.res*=t,r.cond={name:c,factor:t}}}s.push({key:t,value:n,r:r}),l+=r.res})),s.forEach((e=>{e.r.cond?0!=e.r.base?t.log(`[${e.key}(${e.r.cond.name})](${Ct(e.r.res)})：数值${Ct(e.value)}，系数${e.r.factor}，基数${e.r.base}，条件系数${e.r.cond.factor}；分值 = (${Ct(e.value)}*${Ct(e.r.factor)}+${Ct(e.r.base)})*${e.r.cond.factor} = ${Ct(e.r.res)}`):t.log(`[${e.key}(${e.r.cond.name})](${Ct(e.r.res)})：数值${Ct(e.value)}，系数${e.r.factor}，条件系数${e.r.cond.factor}；分值 = (${Ct(e.value)}*${Ct(e.r.factor)})*${e.r.cond.factor} = ${Ct(e.r.res)}`):0!=e.r.base?t.log(`[${e.key}](${Ct(e.r.res)})：数值${Ct(e.value)}，系数${e.r.factor}，基数${e.r.base}；分值 = ${Ct(e.value)}*${Ct(e.r.factor)}+${Ct(e.r.base)} = ${Ct(e.r.res)}`):t.log(`[${e.key}](${Ct(e.r.res)})：数值${Ct(e.value)}，系数${e.r.factor}；分值 = ${Ct(e.value)}*${Ct(e.r.factor)} = ${Ct(e.r.res)}`)})),t.gradePoint=l,t}function Xt(e,t,a){return e*(1+e*t)*a}function Wt(e,t,a){return t+e*a}function zt(e,t){return e*e*t}function Jt(e,t,a){const l=Math.round(100*e);if(l<=0)return 0;let s=t.findIndex((e=>l<e[0]))-1;return s<-1&&(s=t.length-1),a(t[s])}function ea(e,t,a){const l=Math.round(e);if(l<=0)return 0;let s=t.findIndex((e=>l<e[0]))-1,n=a(t[0]),r=0;s<-1&&(s=t.length-1);for(let c=0;c<s;c++)n+=(t[c][0]-r)*a(t[c]),r=t[c][0];return n+=(l-r)*a(t[s]),n>20*a(t[0])&&(n=20*a(t[0])),n}function ta(e,t,a,l,s){if(0==e||0==t)return 0;let n=e+a;return n>1&&(n=1),s&&s["square"]&&(n*=n),n*t*l}class aa{constructor(e,t){this.skillConfigs={},e.forEach((e=>{this.skillConfigs[e["skillType"]]=e})),this.rangeFactor=t||1}getRangeFactor(){return this.rangeFactor}}class la{constructor(e){e&&(this.type=e.type,this.extGrade=null,this.mainAttr=e.mainAttr,this.viceAttr=e.viceAttr,this.teamAttr=e.teamAttr,this.rangeFactor=e.rangeFactor||1)}calcGrade(){const e={totalGrade:0,mainGp:0,viceGp:0,teamGp:0,extGp:0};this.extGrade&&(this.extGrade.fixed?(e["extGp"]=Number(this.extGrade.fixed),e["totalGrade"]=Number(this.extGrade.fixed),e["extDesc"]=this.extGrade.desc):this.extGrade.add&&(e["extGp"]=Number(this.extGrade.add),e["totalGrade"]=Number(this.extGrade.add),e["extDesc"]=this.extGrade.desc)),this.mainAttr.isEmpty()||(e["mainGrade"]=St(this.mainAttr),e["mainGp"]=e["mainGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["mainGp"]),this.viceAttr.isEmpty()||(e["viceGrade"]=St(this.viceAttr),e["viceGp"]=e["viceGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["viceGp"]),this.teamAttr.isEmpty()||(e["teamGrade"]=St(this.teamAttr,this.rangeFactor),e["teamGp"]=e["teamGrade"].calcTotalGradePoint().final,e["totalGrade"]+=e["teamGp"]);const t=()=>{let t="",a="",l=[];const s=(e,t)=>{t=Number(t),0!=t&&l.push([e,t.toFixed(2)])};return"光环"===this.type?(a="单体",s("单体分值",e.mainGp),s("光环分值",e.teamGp),t+="光环，"):"防功"===this.type?(s("特技分值",e.mainGp),s("装备分值",e.viceGp),a="特技",t+="防功，"):(a="单体",s("单体分值",e.mainGp)),s("额外分值",e.extGp),l.length>1?t+=`综合分值：${e.totalGrade.toFixed(2)}，[${l.map((e=>`${e[0]}：${e[1]}`)).join("，")}]\n`:1==l.length&&(t+=`${l.map((e=>`${e[0]}：${e[1]}`)).join("，")}\n`),e["mainGrade"]&&(t+="==========================================\n",t+=e["mainGrade"].toString(a)+"\n",t+="------------------------\n",t+=e["mainGrade"].detail()),e["viceGrade"]&&(t+="==========================================\n",t+=e["viceGrade"].toString("装备")+"\n",t+="------------------------\n",t+=e["viceGrade"].detail()),e["teamGrade"]&&(t+="==========================================\n",t+=e["teamGrade"].toString("光环")+"\n",t+="------------------------\n",t+=e["teamGrade"].detail()),e["extGp"]&&(t+="==========================================\n",t+=`额外分值：${e["extGp"].toFixed(2)}，${e["extDesc"]}\n`),t};return e["detail"]=t,e}}function sa(e,t){t=t||{};const a=new Ot,l=new Ot,s=new Ot;let n="";if(0===Object.values(e.skillConfigs).length);else if(1===Object.values(e.skillConfigs).length)Object.entries(e.skillConfigs).forEach((([e,l])=>{na(l,a,"normal",t),"团队天赋"==e?(n="光环",na(l,s,"team_talent",t)):"团队状态"==e&&(n="光环",na(l,s,"normal",t))}));else{if(2!==Object.values(e.skillConfigs).length)throw new Error("技能配置数量异常");e.skillConfigs["装备技"]&&e.skillConfigs["状态"]?(n="防功",na(e.skillConfigs["状态"],a,"normal",t),na(e.skillConfigs["装备技"],l,"normal",t)):e.skillConfigs["团队天赋"]&&e.skillConfigs["团队状态"]?(n="光环",na(e.skillConfigs["团队天赋"],a,"normal",t),na(e.skillConfigs["团队天赋"],s,"team_talent",t),na(e.skillConfigs["团队状态"],s,"team_buff",t)):console.log("技能配置数量异常",e)}return new la({type:n,mainAttr:a,viceAttr:l,teamAttr:s,rangeFactor:e.getRangeFactor()})}function na(e,t,a,l){const s=(e,a)=>{a>0&&(l.upFlag&&(a*=2),t.setValue(e,a))},n=(e,a)=>{a>0&&(a*=.01,l.upFlag&&(a*=2),t.setValue(e,a))},r=(e,a)=>{a>0&&(a*=.01,l.upFlag&&(a=2*a-1),t.setValue(e,a))},c=(e,a,s)=>{e&&s>0&&(s*=.01,l.upFlag&&(s*=2),t.setClassValue(e,a,s))},o=(e,a,s)=>{e&&s>0&&(s*=.01,l.upFlag&&(s=2*s-1),t.setClassValue(e,a,s))};if("normal"!=a&&"team_talent"!=a||(r("裸攻",e["bodyAtk"]),r("裸防",e["bodyDef"]),r("裸轻",e["bodyAgi"]),r("场攻",e["battleAtk"]),r("场防",e["battleDef"]),r("场轻",e["battleAgi"]),r("时序",e["battleAsp"]),r("敌攻",e["enemyAtk"]),r("敌防",e["enemyDef"]),r("敌轻",e["enemyAgi"]),r("敌时",e["enemyAsp"]),n("双击",e["doubleHit"]),n("暴击",e["critical"]),s("移动",e["moveDistance"]),s("射程",e["attackDistance"]),s("范围",e["attackRange"]),n("出招",e["castInc"]),c(e["specCastIncType"],"出招",e["specCastInc"])),("normal"==a||"team_buff"==a)&&(r("命中",e["hitInc"]),r("闪避",e["hitDec"]),r("威力",e["powerInc"]),r("减威",e["powerDec"]),r("伤害",e["damageInc"]),r("减伤",e["damageDec"]),o(e["specHitIncType"],"命中",e["specHitInc"]),o(e["specHitDecType"],"闪避",e["specHitDec"]),o(e["specPowerIncType"],"威力",e["specPowerInc"]),o(e["specPowerDecType"],"减威",e["specPowerDec"]),o(e["specDamageIncType"],"伤害",e["specDamageInc"]),o(e["specDamageDecType"],"减伤",e["specDamageDec"]),r("加受伤",e["injuryInc"]),r("减受伤",e["injuryDec"]),n("吸血",e["bloodSuck"]),n("反弹",e["damageCounter"]),n("挪移",e["damageTransfer"]),n("反震",e["damageReflect"]),e["deBuffImmune"]&&""!=e["deBuffImmune"].trim()&&e["deBuffImmune"].split(" ").map((e=>e.trim())).forEach((e=>t.addImmune(e))),e["deBuffMake"]&&""!=e["deBuffMake"].trim())){let a=e["deBuffRate"];l.upFlag&&(a*=2);const s=e["deBuffRound"];e["deBuffMake"].split(" ").map((e=>e.trim())).forEach((e=>t.addDeBuffMake(e,a,s)))}const i=e["ext"];i&&(i["values"]&&i["values"].forEach((e=>{const a=Ft[e["attr"]],s=e["condition"];if(a){let n=Number(e["value"]);l.upFlag&&(a.pct?n=2*n-1:n*=2),!a.cmn||s?t.setExtValue(e["attr"],n,s):t.setValue(e["attr"],n)}})),i["classValues"]&&i["classValues"].forEach((e=>{const a=Ft[e["attr"]],s=e["type"];if(a){let n=Number(e["value"]);l.upFlag&&(a.pct?n=2*n-1:n*=2),t.setClassValue(s,e["attr"],n)}})),i["flags"]&&i["flags"].forEach((e=>{const a=Ft[e];a&&a.calcFunc&&t.setExtValue(e,1)})),i["debuffs"]&&i["debuffs"].forEach((e=>{let a=e["rate"];l.upFlag&&(a*=2),t.addDeBuffMake(e["attr"],100*a,"击退"==e["attr"]?100*e["value"]:e["value"])})),i["immunes"]&&i["immunes"].forEach((e=>{t.addImmune(e)})))}function ra(e){if(0==e)return 3;const t=2*e+1;return(t*t-1)/800}function ca(e){let t=[];return e.values&&e.values.forEach((({attr:e,value:a})=>{const l=Ft[e];l?(e=l.name||e,t.push(l.fmtFunc(e,a))):t.push(`${e}:${a}`)})),e.debuffs&&e.debuffs.forEach((({attr:e,value:a,rate:l})=>{const s=Ft[e];s?(e=s.name||e,t.push(s.fmtFunc(e,a,l))):t.push(`${e}:${a}, ${l}`)})),e.immunes&&t.push(`免疫${e.immunes.join("/")}`),e.flags&&e.flags.forEach((e=>{t.push(e)})),t.join("，")}const oa=e=>(t,a)=>(e=e||{},`${e.prefix||""}${t}${e.suffix||""}${e.symbol}${(100*a).toFixed(0)}%`),ia=e=>(t,a)=>(e=e||{},`${e.prefix||""}${t}${e.suffix||""}+${a.toFixed(0)}`),ua={"拳掌":"拳系","御剑":"剑系","兵器":"兵系","指腿":"特系","暗毒":"暗系"};function fa(e){const t=da(e.mainAttr),a=da(e.teamAttr),l=da(e.viceAttr),s=[];return t.length>0&&s.push(t.join("，")),a.length>0&&s.push(`[光环效果]${a.join("，")}`),l.length>0&&s.push(`[装备效果]${l.join("，")}`),s.join("\n")}function da(e){const t=[],a=a=>{const l=a(e);l&&t.push(...l)};return a(pa),a(ma),a(ga),a(ha),a($a),a(ba),a(ka),a(_a),a(La),a(va),a(ya),a(Aa),a(Fa),a(xa),t}function pa(e){const t=[];return Oa(t,"攻击",e.getValue("裸攻")),Oa(t,"防御",e.getValue("裸防")),Oa(t,"轻功",e.getValue("裸轻")),Ca(t,oa({symbol:"*",prefix:"自身"}))}function ma(e){const t=[];return Oa(t,"攻击",e.getValue("场攻")),Oa(t,"防御",e.getValue("场防")),Oa(t,"轻功",e.getValue("场轻")),Oa(t,"时序",e.getValue("时序")),Ca(t,oa({symbol:"*",prefix:"战场"}))}function ga(e){const t=[];return Oa(t,"攻击",e.getValue("敌攻")),Oa(t,"防御",e.getValue("敌防")),Oa(t,"轻功",e.getValue("敌轻")),Oa(t,"时序",e.getValue("敌时")),Ca(t,oa({symbol:"*",prefix:"敌方"}),{asc:!0})}function ha(e){const t=[];return Oa(t,"威力",e.getValue("威力")),Oa(t,"命中",e.getValue("命中")),Oa(t,"伤害",e.getValue("伤害")),Ca(t,oa({symbol:"*",prefix:"武功"}))}function $a(e){const t=[];return Lt.classes.forEach((a=>{const l=[];Oa(l,"威力",e.getClassValue(a,"威力")),Oa(l,"命中",e.getClassValue(a,"命中")),Oa(l,"伤害",e.getClassValue(a,"伤害")),t.push(...Ca(l,oa({symbol:"*",prefix:`${ua[a]}武功`})))})),t}function ba(e){const t=[];return Oa(t,"威力",e.getValue("减威")),Oa(t,"命中",e.getValue("闪避")),Oa(t,"伤害",e.getValue("减伤")),Ca(t,oa({symbol:"*",prefix:"被攻击"}),{asc:!0})}function ka(e){const t=[];return Lt.classes.forEach((a=>{const l=[];Oa(l,"威力",e.getClassValue(a,"减威")),Oa(l,"命中",e.getClassValue(a,"闪避")),Oa(l,"伤害",e.getClassValue(a,"减伤")),t.push(...Ca(l,oa({symbol:"*",prefix:`被${ua[a]}攻击`}),{asc:!0}))})),t}function _a(e){const t=[];return Oa(t,"出招",e.getValue("出招")),Lt.classes.forEach((a=>{Oa(t,`${ua[a]}出招`,e.getClassValue(a,"出招"))})),Ia(t,oa({symbol:"+"}))}function La(e){const t=[];return Oa(t,"暴击",e.getValue("暴击")),Oa(t,"双击",e.getValue("双击")),Oa(t,"吸血",e.getValue("吸血")),Ca(t,oa({symbol:"+"}))}function va(e){const t=[];return Oa(t,"移动距离",e.getValue("移动")),Oa(t,"武功移动",e.getValue("射程")),Oa(t,"杀伤范围",e.getValue("范围")),Ca(t,ia())}function ya(e){const t=[];return Oa(t,"攻击受伤度",e.getValue("加受伤")),Oa(t,"被攻击受伤度",e.getValue("减受伤")),Ia(t,oa({symbol:"*"}))}function Aa(e){const t=[];return Oa(t,"反震",e.getValue("反震")),Oa(t,"反弹",e.getValue("反弹")),Oa(t,"挪移",e.getValue("挪移")),Ca(t,oa({symbol:"+"}))}function Fa(e){const t=[];Lt.debuffTags.forEach((a=>{e.deBuffMakes[a]&&e.deBuffMakes[a].forEach((e=>{t.push([a,e.rate,e.round])}))})),e.deBuffMakes["随机"]&&e.deBuffMakes["随机"].forEach((e=>{t.push(["随机不利状态",e.rate,e.round])})),t.sort(((e,t)=>e[2]!=t[2]?t[2]-e[2]:t[1]-e[1]));const a=[];let[l,s]=[0,1];while(l<t.length){if(s>=t.length||t[s][2]!=t[l][2]||t[s][1]!=t[l][1]){const e=t.slice(l,s).map((e=>e[0])).join("/");a.push(`攻击造成${e}${t[l][2]}回合+${t[l][1].toFixed(0)}%`),l=s}s++}return a}function xa(e){if(0==Object.values(e.immunes).length)return[];const t=[];e.immunes["全部"]&&t.push("持续不利状态"),Lt.immuneTags.forEach((a=>{e.immunes[a]&&t.push(a)}));const a=t.join("/");return[`免疫${a}`]}function Oa(e,t,a){0!=a&&e.push({name:t,value:a})}function Ia(e,t){const a=[];return e.forEach((e=>{a.push(t(e.name,e.value))})),a}function Ca(e,t,a){a=a||{};const l=a.asc||!1;e.sort(((e,t)=>l?e.value-t.value:t.value-e.value));const s=[];let[n,r]=[0,1];while(n<e.length){if(r>=e.length||e[r].value!=e[n].value){const a=e.slice(n,r).map((e=>e.name)).join("/");s.push(t(a,e[n].value)),n=r}r++}return s}var Ea={calcSkillGrade(e,t){const a=d(e),l=b(e)||[];let s=1;a["ext_range"]?"双人"===a["ext_range"]&&(s=.5):s=ra(a["attr_selfRange"]);const n=new aa(l,s),r=sa(n,{upFlag:t});a["ext_grade"]&&(r["extGrade"]=a["ext_grade"]);const c=r.calcGrade();return c["desc"]=fa(r),c},fmtSkillExtAttr:ca};function Va(e,t){return"全部"==e||("只看氪金"==e?t.ke:!t.ke)}const Sa=[{title:"外功",value:"HAND",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Va}]},{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","特殊","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"大绝",value:"EXPL",dataFilters:[{type:"select",label:"系别",value:["拳掌","御剑","兵器","指腿","暗毒","全部"],selected:"拳掌",filterFunc:(e,t)=>"全部"===e||t.type==e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Va}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Va}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"不看氪金",filterFunc:Va}]}],Da={trigBy:We,type:je,levelType:He,debuff_type:Ze,hurtType:Ue,rangeType:Qe,flag_autoCast:ye},Ta={0:"HAND",1:"HAND",2:"HAND",3:"HAND",4:"HAND",5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},wa=[Le("ALL","","序号","id",{align:"start"}),Le("ALL","","名称","name"),Le("ALL","","类型","type"),Le("BODY|FOOT|TALENT|BUFF","","强度分值","grade",{ext:!0}),Le("BODY","","护体分值","grade_up",{ext:!0}),Le("BODY|FOOT","","等级","levelType"),Le("HAND|EXPL|BUFF","attr","威力","attrl_power"),Le("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗气格","attr_costEng"),Le("HAND|BODY|FOOT|EXPL|BUFF","attr","消耗内力","attr_costMp"),Le("HAND|BODY|EXPL|BUFF","attr","所属招式","trigBy"),Le("HAND|BODY|EXPL|BUFF","attr","出招率","attr_trig"),Le("HAND|BODY|EXPL|BUFF","attr","伤害类型","hurtType"),Le("HAND|BODY|EXPL|BUFF","attr","范围形状","rangeType"),Le("HAND|BODY|EXPL|BUFF","attr","移动范围","attrl_moveRange"),Le("HAND|BODY|EXPL|BUFF","attr","杀伤范围","attrl_hitRange"),Le("HAND|BODY|FOOT|EXPL|BUFF","attr","命中率","attr_hit"),Le("HAND|EXPL","attr","暴击率","attr_crit"),Le("HAND|EXPL","attr","双击率","attr_double"),Le("HAND|EXPL","attr","自伤系数","attr_selfHurt"),Le("HAND|BODY|EXPL","attr","造成中毒","attr_poison"),Le("HAND|EXPL","attr","杀命","attr_decHpMax"),Le("HAND|EXPL","attr","杀体","attr_decVigor"),Le("HAND|BODY|EXPL","attr","杀内","attrl_decMp"),Le("HAND|BODY|EXPL","attr","吸内","attrl_incMp"),Le("BODY|TALENT|BUFF","spec","我方光环范围","attr_selfRange"),Le("BODY|TALENT|BUFF","spec","敌方光环范围","attr_enemyRange"),Le("HAND|EXPL","spec","附加/解除状态","debuff_type"),Le("HAND|EXPL","spec","状态几率","debuff_rate"),Le("HAND|EXPL","spec","状态回合","debuff_turn"),Le("BODY|EXPL|BUFF","spec","满气自动释放","flag_autoCast"),Le("BODY|FOOT|TALENT","desc","装备效果","text_equip"),Le("BODY|FOOT|BUFF","desc","使用效果","text_use"),Le("HAND|BODY|FOOT|BUFF","desc","出招台词","text_cast")],Ba=[{text:"说明",value:"desc"},{text:"属性",value:"attr",selected:!0},{text:"其他",value:"spec",selected:!0}];function Pa(e){const t={};e.type>=0&&e.type<=4?e.flag_autoCast?t.tabGroup="EXPL":t.tabGroup="HAND":t["tabGroup"]=Ta[e.type],Object.entries(e).forEach((([e,a])=>{t[e]=Da[e]?Da[e](a):a}));const a=Ea.calcSkillGrade(e.id);if(t["grade"]=a.totalGrade.toFixed(2),t["grade_ext"]=()=>`${e["name"]}分值计算\n`+a.detail(),t["gen_desc"]=a["desc"],5==e.type&&(4==e.levelType||5==e.levelType)){const a=Ea.calcSkillGrade(e.id,!0);t["grade_up"]=a.totalGrade.toFixed(2),t["grade_up_ext"]=()=>`${e["name"]}护体分值计算\n`+a.detail()}return t}var Za={name:"ItemDataView",data(){return{selectType:"HAND",tabs:Sa,headerLabels:Ba,convertValue:Pa}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return wa},items(){return Object.values(this.$store.state.SkillSource)}},components:{TabDataPage:_e}},Ga=Za,Ma=(0,P.Z)(Ga,ut,ft,!1,null,"fd32d904",null),Na=Ma.exports,ja=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels,"extra-filters":e.dataFilters}})],1)},qa=[];const Ha={weaponId:ze,armorId:ze,petId:ze,bsId:We,fsId:We,talentId:We},Ka=[{text:"配置",value:"def",selected:!0},{text:"套装属性",value:"attr",selected:!0},{text:"总属性",value:"attr_total",selected:!1}],Ua=[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=[t["weaponId"],t["armorId"],t["petId"]];for(const l of a){if(null==l)continue;const t=g(l);if(t["ke"]||t["req_hero1"]>0&&f(t["req_hero1"]).ke)return"只看氪金"==e}return"不看氪金"==e}}],Ra=[Le("","","序号","id",{align:"start"}),Le("","","名称","name"),Le("","def","武器","weaponId",{searchable:!0}),Le("","def","防具","armorId",{searchable:!0}),Le("","def","骑宠","petId",{searchable:!0}),Le("","def","内功","bsId",{searchable:!0}),Le("","def","轻功","fsId",{searchable:!0}),Le("","def","天赋","talentId",{searchable:!0}),Le("","attr","套装属性","suitAttr"),Le("","attr","攻击","atk"),Le("","attr","防御","def"),Le("","attr","轻功","agi"),Le("","attr","拳掌","fs"),Le("","attr","御剑","ss"),Le("","attr","兵器","ws"),Le("","attr","指腿","rs"),Le("","attr","暗毒","ts"),Le("","attr_total","总属性","totalAttr"),Le("","attr_total","总攻击","total_atk"),Le("","attr_total","总防御","total_def"),Le("","attr_total","总轻功","total_agi"),Le("","attr_total","总拳掌","total_fs"),Le("","attr_total","总御剑","total_ss"),Le("","attr_total","总兵器","total_ws"),Le("","attr_total","总指腿","total_rs"),Le("","attr_total","总暗毒","total_ts")];function Qa(e){if(!e)return e;const t={};Object.entries(e).forEach((([e,a])=>{t[e]=Ha[e]?Ha[e](a):a})),t["suitAttr"]=Ya(e),t["totalAttr"]=t["suitAttr"]+Xa(e);const a=["atk","def","agi","fs","ss","ws","rs","ts"];return a.forEach((a=>{t["total_"+a]=Number(e[a])+Number(m(e["weaponId"])["attr_"+a])+Number(m(e["armorId"])["attr_"+a])+Number(m(e["petId"])["attr_"+a]),0==t["total_"+a]&&(t["total_"+a]="")})),t}function Ya(e){return Number(e["atk"])+Number(e["def"])+Number(e["agi"])+Number(e["fs"])+Number(e["ss"])+Number(e["ws"])+Number(e["rs"])+Number(e["ts"])}function Xa(e){return nt(m(e["weaponId"]))+nt(m(e["armorId"]))+nt(m(e["petId"]))}var Wa={name:"SuitDataView",data(){return{headerLabels:Ka,dataFilters:Ua,convertValue:Qa}},computed:{headers(){return Ra},items(){return Object.values(this.$store.state.SuitSource)}},components:{DataPage:he}},za=Wa,Ja=(0,P.Z)(za,ja,qa,!1,null,"519e3105",null),el=Ja.exports,tl=function(){var e=this,t=e._self._c;return t("div",[t("DataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels}})],1)},al=[];function ll(e,t){if("全部"==e)return!0;const a=d(t.skillId);return"只看氪金"==e?a.ke:!a.ke}const sl=[{title:"内功",value:"BODY",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","防功","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e||""==t.levelType&&"特殊"==e}]},{title:"轻功",value:"FOOT",dataFilters:[{type:"select",label:"等级",value:["1级","2级","3级","4级","5级","全部"],selected:"全部",filterFunc:(e,t)=>"全部"===e||t.levelType==e}]},{title:"天赋",value:"TALENT",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:ll}]},{title:"特技",value:"BUFF",dataFilters:[{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:ll}]}],nl={5:"BODY",6:"FOOT",7:"TALENT",8:"BUFF"},rl=[{text:"设定",value:"def",selected:!0},{text:"属性",value:"attr",selected:!0},{text:"加成",value:"factor",selected:!0},{text:"几率",value:"rate",selected:!0},{text:"距离",value:"distance",selected:!0},{text:"异常",value:"debuff",selected:!0},{text:"特殊",value:"ext",selected:!0}],cl=[Le("ALL","","武功序号","skillId",{align:"start"}),Le("ALL","","名称","name"),Le("BODY|FOOT","","等级","levelType"),Le("ALL","def","效果类别","skillType",{groupable:!0}),Le("ALL","def","效果回合数","round"),Le("ALL","def","己方益害","selfAdv"),Le("ALL","def","敌方益害","enemyAdv"),Le("ALL","attr","自身攻击","bodyAtk"),Le("ALL","attr","自身防御","bodyDef"),Le("ALL","attr","自身轻功","bodyAgi"),Le("ALL","attr","战场攻击","battleAtk"),Le("ALL","attr","战场防御","battleDef"),Le("ALL","attr","战场轻功","battleAgi"),Le("ALL","attr","行动时序","battleAsp"),Le("ALL","attr","敌方攻击","enemyAtk"),Le("ALL","attr","敌方防御","enemyDef"),Le("ALL","attr","敌方轻功","enemyAgi"),Le("ALL","attr","敌方时序","enemyAsp"),Le("ALL","factor","命中加成","hitInc"),Le("ALL","factor","专系命中加成","specHitInc"),Le("ALL","factor","命中减成","hitDec"),Le("ALL","factor","专系命中减成","specHitDec"),Le("ALL","factor","威力加成","powerInc"),Le("ALL","factor","专系威力加成","specPowerInc"),Le("ALL","factor","威力减成","powerDec"),Le("ALL","factor","专系威力减成","specPowerDec"),Le("ALL","factor","伤害加成","damageInc"),Le("ALL","factor","专系伤害加成","specDamageInc"),Le("ALL","factor","伤害减成","damageDec"),Le("ALL","factor","专系伤害减成","specDamageDec"),Le("ALL","factor","受伤度加成","injuryInc"),Le("ALL","factor","受伤度减成","injuryDec"),Le("ALL","rate","外功出招","castInc"),Le("ALL","rate","专系外功出招","specCastInc"),Le("ALL","rate","双击","doubleHit"),Le("ALL","rate","暴击","critical"),Le("ALL","rate","吸血","bloodSuck"),Le("ALL","rate","反震","damageReflect"),Le("ALL","rate","反弹","damageCounter"),Le("ALL","rate","挪移","damageTransfer"),Le("ALL","distance","移动距离","moveDistance"),Le("ALL","distance","武功移动","attackDistance"),Le("ALL","distance","武功范围","attackRange"),Le("ALL","debuff","免疫","deBuffImmune"),Le("ALL","debuff","造成异常状态","deBuffMake"),Le("ALL","ext","特殊词条","ext")];function ol(e){const t={};Object.entries(e).forEach((([e,a])=>{t[e]=0!=a?a:""}));const a=d(e["skillId"]);return a?(t["tabGroup"]=nl[a.type],t["name"]=a["name"],t["levelType"]=He(a["levelType"]),e["specHitIncType"]&&(t["specHitInc"]=`${e["specHitIncType"]}${e["specHitInc"]}`),e["specHitDecType"]&&(t["specHitDec"]=`${e["specHitDecType"]}${e["specHitDec"]}`),e["specPowerIncType"]&&(t["specPowerInc"]=`${e["specPowerIncType"]}${e["specPowerInc"]}`),e["specPowerDecType"]&&(t["specPowerDec"]=`${e["specPowerDecType"]}${e["specPowerDec"]}`),e["specDamageIncType"]&&(t["specDamageInc"]=`${e["specDamageIncType"]}${e["specDamageInc"]}`),e["specDamageDecType"]&&(t["specDamageDec"]=`${e["specDamageDecType"]}${e["specDamageDec"]}`),e["specCastIncType"]&&(t["specCastInc"]=`${e["specCastIncType"]}${e["specCastInc"]}`),e["deBuffImmune"]&&(t["deBuffImmune"]=il(e["deBuffImmune"])),e["deBuffMake"]&&(t["deBuffMake"]=`[${il(e["deBuffMake"])}]${e["deBuffRound"]}回合+${e["deBuffRate"]}%`),e["ext"]&&(t["ext"]=ca(e["ext"])),t):null}function il(e){const t=e.split(" ").map((e=>e.trim()));return t.join("/")}var ul={name:"SkillConfigView",data(){return{tabs:sl,headerLabels:rl,convertValue:ol}},computed:{headers(){return cl},items(){return Object.values(this.$store.state.SkillConfigSource)}},components:{DataPage:_e}},fl=ul,dl=(0,P.Z)(fl,tl,al,!1,null,"6abd7608",null),pl=dl.exports,ml=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,mapper:e.convertValue,"header-labels":e.headerLabels},on:{tabChange:e.selectTab}})],1)},gl=[];const hl=[{title:"NPC",value:"NPC",dataFilters:[{type:"select",label:"等级段",value:[5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,"全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||t.level>e-5&&t.level<=e},{type:"select",label:"氪金",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]},{title:"队友",value:"FRIEND",dataFilters:[{type:"select",label:"周目",value:[1,2,3,4,5,6,"全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||t["roleRound"]==e},{type:"select",label:"氪金人",value:["只看氪金","不看氪金","全部"],selected:"全部",filterFunc:(e,t)=>"全部"==e||("只看氪金"==e?t.ke:!t.ke)}]}],$l={equip_wp:ze,equip_ar:ze,equip_pt:ze,equip_bs:We,equip_fs:We,talent:We,mastery:We,spec_copyHero:Xe,gender:Fe,family:Oe,party:Ce,mpKind:De,attr_atkCnt:Be,flag_hide:ye},bl=[Le("ALL","","序号","id",{align:"start"}),Le("ALL","","姓名","name"),Le("ALL","base","称号","nickname"),Le("ALL","base","头像","photo"),Le("ALL","base","性别","gender",{searchable:!0}),Le("ALL","base","血族","family",{searchable:!0}),Le("ALL","base","门派","party",{searchable:!0}),Le("ALL","base","等级","level",{groupable:!0}),Le("ALL","base","内力性质","mpKind",{searchable:!0}),Le("ALL","def","称号模板","title",{searchable:!0}),Le("ALL","effect","称号效果","titleEffect"),Le("ALL","def","天赋","talent",{searchable:!0}),Le("ALL","effect","天赋效果","talentEffect"),Le("ALL","def","专精武功","mastery",{searchable:!0}),Le("ALL","def","内功","equip_bs",{searchable:!0}),Le("ALL","effect","内功效果","bodySkillEffect"),Le("ALL","def","轻功","equip_fs",{searchable:!0}),Le("ALL","effect","轻功效果","footSkillEffect"),Le("ALL","def","装备武器","equip_wp",{searchable:!0}),Le("ALL","def","装备防具","equip_ar",{searchable:!0}),Le("ALL","def","装备骑宠","equip_pt",{searchable:!0}),Le("ALL","def","套装","suit",{searchable:!0}),Le("ALL","def","套装天赋","suit_talent",{searchable:!0}),Le("ALL","effect","套装天赋效果","suitTalentEffect"),Le("ALL","def","套装内功","suit_bs",{searchable:!0}),Le("ALL","effect","套装内功效果","suitBodySkillEffect"),Le("ALL","def","套装轻功","suit_fs",{searchable:!0}),Le("ALL","effect","套装轻功效果","suitFootSkillEffect"),Le("ALL","attr","血量","attr_hpMax"),Le("ALL","attr","功力","attr_mpMax"),Le("ALL","attr","攻击","attr_atk"),Le("ALL","attr","防御","attr_def"),Le("ALL","attr","轻功","attr_agi"),Le("ALL","attr","拳掌","attr_fs"),Le("ALL","attr","御剑","attr_ss"),Le("ALL","attr","兵器","attr_ws"),Le("ALL","attr","指腿","attr_rs"),Le("ALL","attr","暗毒","attr_ts"),Le("ALL","attr","医疗","attr_heal"),Le("ALL","attr","用毒","attr_poiMk"),Le("ALL","attr","解毒","attr_poiRd"),Le("ALL","attr","抗毒","attr_poiRs"),Le("ALL","attr","带毒","attr_poiAt"),Le("ALL","attr","武学常识","attr_klg"),Le("ALL","attr","攻击次数","attr_atkCnt",{searchable:!0}),Le("ALL","attr","资质","attr_itl"),Le("ALL","attr","体质","attr_str"),Le("ALL","attr","品德","attr_mrl"),Le("ALL","skill","武功格数","skill_cnt"),Le("ALL","skill","1格武功","skill_1",{searchable:!0}),Le("ALL","skill","2格武功","skill_2",{searchable:!0}),Le("ALL","skill","3格武功","skill_3",{searchable:!0}),Le("ALL","skill","4格武功","skill_4",{searchable:!0}),Le("ALL","skill","5格武功","skill_5",{searchable:!0}),Le("ALL","skill","6格武功","skill_6",{searchable:!0}),Le("ALL","skill","7格武功","skill_7",{searchable:!0}),Le("ALL","skill","8格武功","skill_8",{searchable:!0}),Le("ALL","skill","9格武功","skill_9",{searchable:!0}),Le("ALL","skill","10格武功","skill_10",{searchable:!0}),Le("ALL","skill2","11格武功","skill_11",{searchable:!0}),Le("ALL","skill2","12格武功","skill_12",{searchable:!0}),Le("ALL","skill2","13格武功","skill_13",{searchable:!0}),Le("ALL","skill2","14格武功","skill_14",{searchable:!0}),Le("ALL","skill2","15格武功","skill_15",{searchable:!0}),Le("ALL","skill2","16格武功","skill_16",{searchable:!0}),Le("ALL","skill2","17格武功","skill_17",{searchable:!0}),Le("ALL","skill2","18格武功","skill_18",{searchable:!0}),Le("ALL","skill2","19格武功","skill_19",{searchable:!0}),Le("ALL","skill2","20格武功","skill_20",{searchable:!0}),Le("ALL","skill2","21格武功","skill_21",{searchable:!0}),Le("ALL","skill2","22格武功","skill_22",{searchable:!0}),Le("ALL","skill2","23格武功","skill_23",{searchable:!0}),Le("ALL","skill2","24格武功","skill_24",{searchable:!0}),Le("ALL","skill2","25格武功","skill_25",{searchable:!0}),Le("ALL","skill2","26格武功","skill_26",{searchable:!0}),Le("ALL","skill2","27格武功","skill_27",{searchable:!0}),Le("ALL","skill2","28格武功","skill_28",{searchable:!0}),Le("ALL","skill2","29格武功","skill_29",{searchable:!0}),Le("ALL","skill2","30格武功","skill_30",{searchable:!0}),Le("ALL","item","1格物品","item_1",{searchable:!0}),Le("ALL","item","2格物品","item_2",{searchable:!0}),Le("ALL","item","3格物品","item_3",{searchable:!0}),Le("ALL","item","4格物品","item_4",{searchable:!0}),Le("ALL","status","生命","status_hp"),Le("ALL","status","内力","status_mp"),Le("ALL","status","体力","status_vigour"),Le("ALL","status","受伤","status_injury"),Le("ALL","status","中毒","status_poison"),Le("ALL","status","经验","status_exp"),Le("ALL","status","根骨","status_bone"),Le("FRIEND","spec","卡片周目","roleRound"),Le("FRIEND","spec","幽灵队友周目","ghostMember"),Le("ALL","spec","复制人物","spec_copyHero"),Le("ALL","spec","明玉丹额度","status_myd"),Le("ALL","spec","传奇隐藏","flag_hide"),Le("ALL","spec","结局编号","spec_ending")],kl=[{text:"基本",value:"base",selected:!0},{text:"配置",value:"def",selected:!0},{text:"配置效果",value:"effect"},{text:"属性",value:"attr",selected:!0},{text:"武功",value:"skill",selected:!0},{text:"更多武功",value:"skill2"},{text:"物品",value:"item"},{text:"状态",value:"status"},{text:"其他",value:"spec",selected:!0}];function _l(e){if(!e)return e;const t={};t["tabGroup"]=e["friend"]?"FRIEND":"NPC",Object.entries(e).forEach((([e,a])=>{t[e]=$l[e]?$l[e](a):a}));const a=h(e["equip_wp"],e["equip_ar"],e["equip_pt"]);a&&(t["suit"]=a.name,e["suit_bs"]=a.bsId,e["suit_fs"]=a.fsId,e["suit_talent"]=a.talentId,t["suit_bs"]=We(a.bsId),t["suit_fs"]=We(a.fsId),t["suit_talent"]=We(a.talentId));let l=0;for(let n=0;n<30;n++){const a=e["skills"][n];if(a["skill"]){const e=1+Math.floor(a["exp"]/100);t["skill_"+(n+1)]=`${We(a["skill"])}(${e}级)`,l++}}t["skill_cnt"]=l;for(let n=0;n<4;n++){const a=e["items"][n];a["item"]&&(t["item_"+(n+1)]=`${ze(a["item"])}*${a["amount"]}`)}e["equip_bs"]>0&&(t["bodySkillEffect"]=d(e["equip_bs"])["text_equip"]),e["equip_fs"]>0&&(t["footSkillEffect"]=d(e["equip_fs"])["text_equip"]),e["talent"]>0&&(t["talentEffect"]=d(e["talent"])["text_equip"]),t["suit_bs"]&&(t["suitBodySkillEffect"]=d(e["suit_bs"])["text_equip"]),t["suit_fs"]&&(t["suitFootSkillEffect"]=d(e["suit_fs"])["text_equip"]),t["suit_talent"]&&(t["suitTalentEffect"]=d(e["suit_talent"])["text_equip"]);const s=$(e["title"]);return s?(t["titleEffect"]=s["desc"],t["title"]=`[${e["title"]}]${s["name"]}`):t["title"]=`[${e["title"]}](未定义)`,t}var Ll={name:"HeroDataView",data(){return{selectType:"NPC",tabs:hl,headerLabels:kl,convertValue:_l}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return bl},items(){return Object.values(this.$store.state.HeroSource)}},components:{TabDataPage:_e}},vl=Ll,yl=(0,P.Z)(vl,ml,gl,!1,null,"65413552",null),Al=yl.exports,Fl=function(){var e=this,t=e._self._c;return t("div",[t("TabDataPage",{attrs:{tabs:e.tabs,headersSource:e.headers,itemsSource:e.items,"header-labels":e.headerLabels,mapper:e.convertValue},on:{tabChange:e.selectTab}})],1)},xl=[];const Ol=(e,t)=>({type:"select",label:"路线",value:e,selected:t,filterFunc:(e,t)=>{if("全部"==e)return!0;const a=_(t.index);return a?a.group==e:"其他"==e}}),Il=(e,t)=>({type:"select",label:"类型",value:e,selected:t,filterFunc:(e,t)=>"全部"==e||t.op==e}),Cl=[{title:"洗武",value:"xw",dataFilters:[Ol(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Il(["洗武功","洗天赋","洗专精","全部"],"全部")]},{title:"属性",value:"attr",dataFilters:[Ol(["主角","女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Il(["改变生命","改变内力","改变攻击","改变防御","改变轻功","改变五系","改变资质","改变内力性质","改变性别","全部"],"全部")]},{title:"物品",value:"item",dataFilters:[{type:"select",label:"物品种类",value:["秘籍","装备","药品","暗器","剧情","全部"],selected:"全部",filterFunc:(e,t)=>{if("全部"==e)return!0;const a=m(t.index);return Me(a.type)==e}},Il(["获得物品","增加/扣除物品","他人增加物品","初始装备","初始携带","全部"],"全部")]},{title:"品德",value:"moral"},{title:"队伍",value:"team",dataFilters:[Ol(["女主","女儿","飞雪","连城","天龙","双雕","白马","鹿鼎","笑傲","书剑","侠客","倚天","碧血","鸳鸯","其他","全部"],"全部"),Il(["队员加入","队员离队","脱下装备","全部"],"全部")]}],El=[],Vl=[Le("xw|attr|team","","人物","hero",{searchable:!0}),Le("item","","物品","item",{searchable:!0}),Le("ALL","","事件编号","eventId"),Le("ALL","","事件名","name"),Le("ALL","","指令","op"),Le("ALL","","描述","note")];function Sl(e){const t={...e};if("xw"==e["tabGroup"]||"attr"==e["tabGroup"]||"team"==e["tabGroup"]){const a=f(e["index"]);a&&(t["hero"]=`[${a.id}]${a.name}`)}else if("item"==e["tabGroup"]){const a=m(e["index"]);a&&(t["item"]=`[${a.id}]${a.name}`)}return t}var Dl={name:"EventView",data(){return{selectType:"xw",tabs:Cl,headerLabels:El,convertValue:Sl}},methods:{selectTab(e){this.selectType=e}},computed:{headers(){return Vl},items(){return this.$store.state.EventSource[this.selectType]?this.$store.state.EventSource[this.selectType].map((e=>({...e,tabGroup:this.selectType}))):[]}},components:{TabDataPage:_e}},Tl=Dl,wl=(0,P.Z)(Tl,Fl,xl,!1,null,"0aa08594",null),Bl=wl.exports,Pl=a(6190),Zl=a(120),Gl=a(9674),Ml=a(5125),Nl=a(5375),jl=a(2165),ql=function(){var e=this,t=e._self._c;return t("div",[t(R.Z,[t(U.Z,[e._v("天赋特技定制")]),t(jl.Z,[t(W.Z,[t(z.ZB,[t(Ml.Z,[t(W.Z,{attrs:{flat:""}},[t(z.EB,[e._v("基本信息")]),t(z.ZB,[t(S.Z,[t(E.Z,{attrs:{cols:"12",md:"2"}},[t(ce.Z,{attrs:{label:"名称",outlined:"",dense:""},model:{value:e.skill.base.name,callback:function(t){e.$set(e.skill.base,"name",t)},expression:"skill.base.name"}})],1),t(E.Z,{attrs:{cols:"12",md:"1"}},[t(Nl.Z,{attrs:{items:[2,4,6],label:"周目",outlined:"",dense:""},model:{value:e.skill.base.round,callback:function(t){e.$set(e.skill.base,"round",t)},expression:"skill.base.round"}})],1),t(E.Z,{attrs:{cols:"12",md:"6"}}),t(E.Z,{attrs:{cols:"12",md:"2"}},[t(ce.Z,{staticClass:"headline centered-input",attrs:{readonly:"",label:"总分",outlined:""},on:{click:e.clickGrade},model:{value:e.totalGrade,callback:function(t){e.totalGrade=t},expression:"totalGrade"}})],1)],1),t(S.Z,{attrs:{dense:""}},[t(E.Z,{attrs:{cols:"12",md:"1"}},[t(Nl.Z,{attrs:{items:["天赋","特技"],label:"种类",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.type,callback:function(t){e.$set(e.skill.base,"type",t)},expression:"skill.base.type"}})],1),t(E.Z,{attrs:{cols:"12",md:"1"}},[t(Nl.Z,{attrs:{items:["无","拳掌","御剑","兵器","指腿","暗毒"],label:"主系",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.classType,callback:function(t){e.$set(e.skill.base,"classType",t)},expression:"skill.base.classType"}})],1),t(E.Z,{attrs:{cols:"12",md:"1"}},[t(Zl.Z,{attrs:{label:"光环",dense:"",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.isAura,callback:function(t){e.$set(e.skill.base,"isAura",t)},expression:"skill.base.isAura"}})],1),"特技"==e.skill.base.type?t(E.Z,{attrs:{cols:"12",md:"1"}},[t(ce.Z,{attrs:{dense:"",label:"特技回合",outlined:""},model:{value:e.skill.base.buffTurn,callback:function(t){e.$set(e.skill.base,"buffTurn",t)},expression:"skill.base.buffTurn"}})],1):e._e(),e.skill.base.isAura?t(E.Z,{attrs:{cols:"12",md:"1"}},[t(ce.Z,{attrs:{dense:"",label:"光环范围",outlined:""},on:{change:function(t){return e.elementChanged()}},model:{value:e.skill.base.auraRange,callback:function(t){e.$set(e.skill.base,"auraRange",t)},expression:"skill.base.auraRange"}})],1):e._e()],1)],1)],1),"特技"==e.skill.base.type&&e.skill.base.isAura?e._e():t(W.Z,{attrs:{flat:""}},[t(z.EB,[e._v("自身词条")]),t(z.ZB,e._l(e.rows,(function(a){return t(S.Z,{key:a.title,attrs:{dense:""}},[e._l(a.cols,(function(a){return[t(E.Z,{key:a.label,attrs:{cols:"12",sm:a.wide||1,"align-self":"end"}},["combobox"!=a.type?t(ce.Z,{class:e.skill.mainAttr[a.label]!=a.defValue?"modified-input":"",staticStyle:{width:"80%"},attrs:{label:a.label,suffix:a.suffix,disabled:e.skill.base.isAura&&!a.auraSelf,dense:"",outlined:!1},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.mainAttr[a.label],callback:function(t){e.$set(e.skill.mainAttr,a.label,t)},expression:"skill.mainAttr[col.label]"}}):e._e(),"combobox"==a.type?t(Nl.Z,{attrs:{items:a.items,label:a.label,dense:"",chips:"",multiple:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.mainAttr[a.label],callback:function(t){e.$set(e.skill.mainAttr,a.label,t)},expression:"skill.mainAttr[col.label]"}}):e._e()],1)]}))],2)})),1)],1),e.skill.base.isAura?t(W.Z,{attrs:{flat:""}},[t(z.EB,[e._v("光环词条")]),t(z.ZB,e._l(e.rows,(function(a){return t(S.Z,{key:a.title,attrs:{dense:""}},[e._l(a.cols,(function(a){return[t(E.Z,{key:a.label,attrs:{cols:"12",sm:a.wide||1,"align-self":"end"}},["combobox"!=a.type?t(ce.Z,{class:e.skill.auraAttr[a.label]!=a.defValue?"modified-input":"",staticStyle:{width:"80%"},attrs:{label:a.label,suffix:a.suffix,dense:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.auraAttr[a.label],callback:function(t){e.$set(e.skill.auraAttr,a.label,t)},expression:"skill.auraAttr[col.label]"}}):e._e(),"combobox"==a.type?t(Gl.Z,{attrs:{items:a.items,label:a.label,dense:"",chips:"",multiple:""},on:{change:function(t){return e.elementChanged(a.label)}},model:{value:e.skill.auraAttr[a.label],callback:function(t){e.$set(e.skill.auraAttr,a.label,t)},expression:"skill.auraAttr[col.label]"}}):e._e()],1)]}))],2)})),1)],1):e._e(),t(S.Z,{attrs:{dense:""}},[t(E.Z,{attrs:{cols:"12",md:"1"}}),t(E.Z,{attrs:{cols:"12",md:"8","align-self":"end"}},[t(oe.Z,{attrs:{rows:"4",label:"自动生成描述",readonly:"",outlined:"","hide-details":""},model:{value:e.grade.desc,callback:function(t){e.$set(e.grade,"desc",t)},expression:"grade.desc"}})],1),t(E.Z,{attrs:{cols:"12",md:"1"}}),t(E.Z,{attrs:{cols:"12",md:"1"}},[t(Pl.Z,{on:{click:e.submit}},[t("span",{staticClass:"text-subtitle-2"},[e._v("保存")])]),t("p"),t(Pl.Z,{on:{click:e.reset}},[t("span",{staticClass:"text-subtitle-2"},[e._v("重置")])])],1)],1),t(S.Z,{attrs:{dense:""}})],1)],1)],1)],1)],1),t(X.Z,{attrs:{inset:""},model:{value:e.bottom,callback:function(t){e.bottom=t},expression:"bottom"}},[t(re.Z,{staticClass:"text-center"},[t("div",{staticStyle:{overflow:"scroll",height:"fit-content"}},[t(oe.Z,{attrs:{rows:"12",readonly:"",filled:"",outlined:"","hide-details":""},model:{value:e.gradeDetail,callback:function(t){e.gradeDetail=t},expression:"gradeDetail"}})],1)])],1)],1)},Hl=[];const Kl=["全部","受伤","中毒","点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","暴击","双击","破甲","突防","反击","杀命","杀内","杀体","杀气","秒杀"],Ul=["点穴","封气","定身","封招","厌食","外伤","内伤","剧毒","虚弱","盲目","冰封","随机"],Rl={"自身攻击":{key:"裸攻",mul:!0,pct:!0},"自身防御":{key:"裸防",mul:!0,pct:!0},"自身轻功":{key:"裸轻",mul:!0,pct:!0},"战场攻击":{key:"场攻",mul:!0,pct:!0},"战场防御":{key:"场防",mul:!0,pct:!0},"战场轻功":{key:"场轻",mul:!0,pct:!0},"行动时序":{key:"时序",mul:!0,pct:!0},"敌方攻击":{key:"敌攻",mul:!0,pct:!0},"敌方防御":{key:"敌防",mul:!0,pct:!0},"敌方轻功":{key:"敌轻",mul:!0,pct:!0},"敌方时序":{key:"敌时",mul:!0,pct:!0},"威力":{key:"威力",mul:!0,pct:!0,auraSelf:!0},"命中":{key:"命中",mul:!0,pct:!0,auraSelf:!0},"伤害":{key:"伤害",mul:!0,pct:!0,auraSelf:!0},"加受伤度":{key:"加受伤",mul:!0,pct:!0,auraSelf:!0},"主系威力":{key:"威力",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"主系命中":{key:"命中",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"主系伤害":{key:"伤害",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"减威":{key:"减威",mul:!0,pct:!0,auraSelf:!0},"闪避":{key:"闪避",mul:!0,pct:!0,auraSelf:!0},"减伤":{key:"减伤",mul:!0,pct:!0,auraSelf:!0},"减受伤度":{key:"减受伤",mul:!0,pct:!0,auraSelf:!0},"主系减威":{key:"减威",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"主系闪避":{key:"闪避",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"主系减伤":{key:"减伤",mul:!0,pct:!0,mainClass:!0,auraSelf:!0},"移动距离":{key:"移动"},"攻击距离":{key:"射程"},"杀伤范围":{key:"范围"},"暴击":{key:"暴击",pct:!0},"双击":{key:"双击",pct:!0},"出招":{key:"出招",pct:!0},"主系出招":{key:"出招",pct:!0,mainClass:!0},"吸血":{key:"吸血",pct:!0,auraSelf:!0},"反震":{key:"反震",pct:!0,auraSelf:!0},"反弹":{key:"反弹",pct:!0,auraSelf:!0},"挪移":{key:"挪移",pct:!0,auraSelf:!0},"免疫":{type:"combobox",items:Kl,wide:10,auraSelf:!0},"异常":{type:"combobox",items:Ul,wide:8,auraSelf:!0},"异常回合":{auraSelf:!0},"异常概率":{pct:!0,auraSelf:!0},defValue(e){const t=this[e];return t?t.items?[]:t.mul?t.pct?100:1:0:0}};class Ql{constructor(){Object.keys(Rl).forEach((e=>{this[e]=Rl.defValue(e)}))}toAttrEntry(e){e=e||{};const t=new Ot,a=e.mode;return"ignoreAll"==a||Object.entries(this).forEach((([l,s])=>{const n=Rl[l];if(!n)return;if("ignoreAttr"==a&&!n.auraSelf)return;const r=Rl.defValue(l);if(s!=r)if("异常"!==l)if("免疫"!==l)if(s=Number(s),n.pct&&(s/=100),n.mainClass&&"无"!=e.classType){const a=e.classType;t.setClassValue(a,n.key,s),console.log(s)}else t.setValue(n.key,s);else s.forEach((e=>{t.addImmune(e)}));else{const e=this["异常回合"],a=this["异常概率"];e>0&&a>0&&s.forEach((l=>{t.addDeBuffMake(l,Number(a),Number(e))}))}})),t}}class Yl{constructor(){this.base={name:"新天赋",round:4,type:"天赋",classType:"无",buffTurn:0,isAura:!1,auraRange:0},this.mainAttr=new Ql,this.auraAttr=new Ql}mainMode(){return this.base.isAura?"天赋"==this.base.type?"ignoreAttr":"ignoreAll":""}auraMode(){return this.base.isAura?"":"ignoreAll"}toAttrGroup(){const e=this.base.isAura?"光环":"",t=this.mainAttr.toAttrEntry({classType:this.base.classType,mode:this.mainMode()}),a=this.auraAttr.toAttrEntry({classType:this.base.classType,mode:this.auraMode()}),l=new Ot,s=this.base.isAura?ra(this.base.auraRange):0;return new la({type:e,mainAttr:t,teamAttr:a,viceAttr:l,rangeFactor:s})}calcGrade(){const e=this.toAttrGroup(),t=e.calcGrade();return t["desc"]=fa(e),t}}const Xl=[{title:"属性",cols:["自身攻击","自身防御","自身轻功","战场攻击","战场防御","战场轻功","行动时序","敌方攻击","敌方防御","敌方轻功","敌方时序"]},{title:"特性",cols:["移动距离","攻击距离","杀伤范围","暴击","双击","出招","主系出招"]},{title:"攻击效果",cols:["威力","命中","伤害","加受伤度","主系威力","主系命中","主系伤害","吸血"]},{title:"防御效果",cols:["减威","闪避","减伤","减受伤度","主系减威","主系闪避","主系减伤","反震","反弹","挪移"]},{title:"异常",cols:["异常","异常概率","异常回合"]},{title:"免疫",cols:["免疫"]}];var Wl={name:"CustomSimulatorView",data(){return{bottom:!1,skill:new Yl,grade:{desc:"",detail:()=>""},totalGrade:0,gradeDetail:""}},methods:{submit(){console.log(this.skill)},elementChanged(){this.grade=this.skill.calcGrade(),this.totalGrade=this.grade.totalGrade.toFixed(2)},clickGrade(){this.gradeDetail=this.grade.detail(),this.bottom=!0},reset(){this.skill=new Yl,this.elementChanged()}},computed:{rows(){const e=Xl.map((e=>({title:e.title,cols:e.cols.map((e=>{const t=Rl[e];return{...t,label:e,suffix:t.pct?"%":"",defValue:Rl.defValue(e)}}))})));return e}}},zl=Wl,Jl=(0,P.Z)(zl,ql,Hl,!1,null,"33a329ab",null),es=Jl.exports;l.ZP.use(O.ZP);const ts=[{path:"/",name:"home",component:q},{path:"/about",name:"about",component:()=>a.e(443).then(a.bind(a,1272))},{path:"/hero",name:"hero",component:Al},{path:"/item",name:"item",component:it},{path:"/skill",name:"skill",component:Na},{path:"/suit",name:"suit",component:el},{path:"/skill-config",name:"skill-config",component:pl},{path:"/event",name:"event",component:Bl},{path:"/custom-sim",name:"custom",component:es},{path:"/coming",name:"coming",component:()=>a.e(390).then(a.bind(a,5390))}],as=new O.ZP({routes:ts,mode:"hash",base:"/"});var ls=as,ss=a(998),ns=a(6843),rs=a(5550),cs=a(9223),os=a(4324),is=a(5808),us=a(7397),fs=a(4525),ds=a(9471),ps=a(4611),ms=a(3059),gs=a(9709),hs=a(3687),$s=function(){var e=this,t=e._self._c;return t(ss.Z,[t(gs.Z,{attrs:{app:""},model:{value:e.drawer,callback:function(t){e.drawer=t},expression:"drawer"}},[t(fs.Z,{attrs:{to:"/"}},[t(ps.Z,[t(os.Z,[e._v("mdi-home-city")])],1),t(ds.V9,[e._v("首页")])],1),t(cs.Z),t(is.Z,{attrs:{dense:"",nav:""}},e._l(e.items,(function(a){return t(us.Z,{key:a.title,attrs:{value:!0,"sub-group":""},scopedSlots:e._u([{key:"activator",fn:function(){return[t(ds.V9,[e._v(e._s(a.title))])]},proxy:!0}],null,!0)},e._l(a.sub,(function(a){return t(fs.Z,{key:a.title,attrs:{to:a.to,link:""}},[t(ds.km,[t(ds.V9,[e._v(e._s(a.title))])],1)],1)})),1)})),1)],1),t(ns.Z,{attrs:{app:"",color:"primary",height:"50vh",dark:""}},[t(rs.Z,{on:{click:function(t){t.stopPropagation(),e.drawer=!e.drawer}}}),t("div",{staticClass:"d-flex align-center"},[t("span",{staticClass:"mr-1"},[e._v("金书红颜录数据查看器")])]),t(hs.Z),t("span",{staticClass:"mr-2"},[e._v("游戏版本：")]),t(Nl.Z,{staticClass:"text-subtitle-2",staticStyle:{"max-width":"100pt",height:"40px"},attrs:{dense:"",items:e.supportVersions,outlined:""},on:{change:e.changeVersion},model:{value:e.selectedVersion,callback:function(t){e.selectedVersion=t},expression:"selectedVersion"}})],1),t(ms.Z,[t("router-view")],1)],1)},bs=[],ks={name:"App",data:()=>({selectedVersion:i.name,supportVersions:o.map((e=>e.name)),drawer:!0,items:[{title:"基本数据",sub:[{title:"人物",to:"/hero"},{title:"武功",to:"/skill"},{title:"物品",to:"/item"},{title:"套装",to:"/suit"},{title:"武功数值",to:"/skill-config"}]},{title:"高阶数据",sub:[{title:"事件",to:"/event"}]},{title:"辅助工具",sub:[{title:"分数计算器",to:"/custom-sim"},{title:"武功模拟（待开发）",to:"/coming"}]}]}),methods:{changeVersion(){this.$store.commit("setVersion",this.selectedVersion),this.$store.dispatch("initStore")}},components:{}},_s=ks,Ls=(0,P.Z)(_s,$s,bs,!1,null,null,null),vs=Ls.exports;l.ZP.config.productionTip=!1,new l.ZP({vuetify:x,store:A,router:ls,beforeCreate(){this.$store.dispatch("initStore")},render:e=>e(vs)}).$mount("#app")}},t={};function a(l){var s=t[l];if(void 0!==s)return s.exports;var n=t[l]={exports:{}};return e[l](n,n.exports,a),n.exports}a.m=e,function(){var e=[];a.O=function(t,l,s,n){if(!l){var r=1/0;for(u=0;u<e.length;u++){l=e[u][0],s=e[u][1],n=e[u][2];for(var c=!0,o=0;o<l.length;o++)(!1&n||r>=n)&&Object.keys(a.O).every((function(e){return a.O[e](l[o])}))?l.splice(o--,1):(c=!1,n<r&&(r=n));if(c){e.splice(u--,1);var i=s();void 0!==i&&(t=i)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[l,s,n]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var l in t)a.o(t,l)&&!a.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:t[l]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,l){return a.f[l](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+(443===e?"about":e)+"."+{390:"5f20b0f2",443:"59813d5b"}[e]+".js"}}(),function(){a.miniCssF=function(e){}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="jsproj-web:";a.l=function(l,s,n,r){if(e[l])e[l].push(s);else{var c,o;if(void 0!==n)for(var i=document.getElementsByTagName("script"),u=0;u<i.length;u++){var f=i[u];if(f.getAttribute("src")==l||f.getAttribute("data-webpack")==t+n){c=f;break}}c||(o=!0,c=document.createElement("script"),c.charset="utf-8",c.timeout=120,a.nc&&c.setAttribute("nonce",a.nc),c.setAttribute("data-webpack",t+n),c.src=l),e[l]=[s];var d=function(t,a){c.onerror=c.onload=null,clearTimeout(p);var s=e[l];if(delete e[l],c.parentNode&&c.parentNode.removeChild(c),s&&s.forEach((function(e){return e(a)})),t)return t(a)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=d.bind(null,c.onerror),c.onload=d.bind(null,c.onload),o&&document.head.appendChild(c)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.p="/"}(),function(){var e={143:0};a.f.j=function(t,l){var s=a.o(e,t)?e[t]:void 0;if(0!==s)if(s)l.push(s[2]);else{var n=new Promise((function(a,l){s=e[t]=[a,l]}));l.push(s[2]=n);var r=a.p+a.u(t),c=new Error,o=function(l){if(a.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var n=l&&("load"===l.type?"missing":l.type),r=l&&l.target&&l.target.src;c.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",c.name="ChunkLoadError",c.type=n,c.request=r,s[1](c)}};a.l(r,o,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,l){var s,n,r=l[0],c=l[1],o=l[2],i=0;if(r.some((function(t){return 0!==e[t]}))){for(s in c)a.o(c,s)&&(a.m[s]=c[s]);if(o)var u=o(a)}for(t&&t(l);i<r.length;i++)n=r[i],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(u)},l=self["webpackChunkjsproj_web"]=self["webpackChunkjsproj_web"]||[];l.forEach(t.bind(null,0)),l.push=t.bind(null,l.push.bind(l))}();var l=a.O(void 0,[998],(function(){return a(3382)}));l=a.O(l)})();
//# sourceMappingURL=app.ee30a65a.js.map